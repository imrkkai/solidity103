{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "ApprovalForAll",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "values",
						"type": "uint256[]"
					}
				],
				"name": "TransferBatch",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "TransferSingle",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "value",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "URI",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "accounts",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					}
				],
				"name": "balanceOfBatch",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					}
				],
				"name": "isApprovedForAll",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "mint",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					}
				],
				"name": "mintBatch",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "safeBatchTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "setApprovalForAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "uri",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"ApprovalForAll(address,address,bool)": {
					"details": "批量授权事件 当`account`将所有代币授权给`operator`时释放"
				},
				"TransferBatch(address,address,address,uint256[],uint256[])": {
					"details": "批量代币转账事件 ids和values为转账的代币种类和数量数组"
				},
				"TransferSingle(address,address,address,uint256,uint256)": {
					"details": "单类代币转账事件 当`value`个`id`种类的代币被`operator`从`from`转账到`to`时释放."
				},
				"URI(string,uint256)": {
					"details": "当`id`种类的代币的URI发生变化时释放，`value`为新的URI"
				}
			},
			"kind": "dev",
			"methods": {
				"balanceOf(address,uint256)": {
					"details": "持仓查询 实现IERC1155的balanceOf，返回account地址的id种类代币持仓量。"
				},
				"balanceOfBatch(address[],uint256[])": {
					"details": "批量持仓查询 要求: - `accounts` 和 `ids` 数组长度相等."
				},
				"isApprovedForAll(address,address)": {
					"details": "查询批量授权."
				},
				"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
					"details": "批量安全转账，将`amounts`数组单位的`ids`数组种类代币从`from`转账到`to` 释放 {TransferSingle} 事件. 要求: - to 不能是0地址. - from拥有足够的持仓量，且调用者拥有授权 - 如果 to 是智能合约, 他必须支持 IERC1155Receiver-onERC1155BatchReceived. - ids和amounts数组长度相等"
				},
				"safeTransferFrom(address,address,uint256,uint256,bytes)": {
					"details": "安全转账，将`amount`单位的`id`种类代币从`from`转账到`to` 释放 {TransferSingle} 事件. 要求: - to 不能是0地址. - from拥有足够的持仓量，且调用者拥有授权 - 如果 to 是智能合约, 他必须支持 IERC1155Receiver-onERC1155Received."
				},
				"setApprovalForAll(address,bool)": {
					"details": "批量授权，调用者授权operator使用其所有代币 释放{ApprovalForAll}事件 条件：msg.sender != operator"
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}."
				},
				"uri(uint256)": {
					"details": "返回ERC1155的id种类代币的uri，存储metadata，类似ERC721的tokenURI."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"BAYC1155.sol": "BAYC1155"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"BAYC1155.sol": {
			"keccak256": "0xf4c6c78290870a59b338b93344871d182067a979d2c62df65aba64f871e77fa9",
			"license": "MIT",
			"urls": [
				"bzz-raw://0a039029f4638d36401e67508b394176ee55afbaaba128675a4e5fe4eaced0a5",
				"dweb:/ipfs/QmNVoRzZ1KYPDXTic9KbzuSWbzeG7FmkX5NpHJ9KGZywgn"
			]
		},
		"ERC1155.sol": {
			"keccak256": "0xbcce23a4ee92154ed8bb0b4e63b75a0df9ca88d737f73c1c034ef6985ff24943",
			"license": "MIT",
			"urls": [
				"bzz-raw://1fb50ac09c342fabf99169f44f198ecf7a5fdd617c1804f69f14e5fc5ff3fe76",
				"dweb:/ipfs/Qmf3PjQDas5XdyLHuvTMFmBLgq4Kt4Ra8w73qQUBxQ5Nkn"
			]
		},
		"IERC1155.sol": {
			"keccak256": "0x067d4ecef48549399aeed714aec7e83a1b8bcee45ea6388422534995d25432e0",
			"license": "MIT",
			"urls": [
				"bzz-raw://c53166b2b27c1c7c2b51824f3bc71a2a8146516e54bf1af322c017341864ae22",
				"dweb:/ipfs/Qmb1odHSQwvC8t6vaUgpBdvHwde5Eyx3JA7crG8pzwyofD"
			]
		},
		"IERC1155MetadataURI.sol": {
			"keccak256": "0xbbcc26403b32500d4b208316c74ee816e5b6f47e92b059919ae571525792c97a",
			"license": "MIT",
			"urls": [
				"bzz-raw://65a990249ad7cc1e0540d86ce76da9cb8329ee03a11d67b87cb557ff71e76bce",
				"dweb:/ipfs/Qme8XyVHNsJHmt6zR8untep1zwa2fenWhtfsidCxxbVfCc"
			]
		},
		"IERC1155Receiver.sol": {
			"keccak256": "0x3a96b7087e8ef5c4e3e5884a62179a0b2b123c4453fb7c5415d55fa10380fde0",
			"license": "MIT",
			"urls": [
				"bzz-raw://77bdc5fc90fb0437f56397fbaf95b7d631663500afe34d6b7d4ff3cc7a88370e",
				"dweb:/ipfs/QmQmVv64sto1TRkhZdLtmgcHoeaDLbzjG22HHVkQEt3PGe"
			]
		},
		"IERC165.sol": {
			"keccak256": "0x2284ab5d4e6689f667d69784f647c34a26351caea8bee03148ea2bda30ed03f6",
			"license": "MIT",
			"urls": [
				"bzz-raw://e03cee1605974698db6b1fd607422a5b4e13e32379f89fac901fae2819e70741",
				"dweb:/ipfs/QmNvx4EBibTcCefLW3u4zH34MHqmDYDxRp1Le3hTQ31ujA"
			]
		},
		"Strings.sol": {
			"keccak256": "0xfe06ef1d5e4b63615dad491a475fc2ee9b97c5ef2598775b9495190a174b088a",
			"license": "MIT",
			"urls": [
				"bzz-raw://083dc9161d06d700151a3a13a10815f090eb3f615b52692bbc2f51f98d995381",
				"dweb:/ipfs/QmaQc2nLdyxMkdCkpoJbJiz7A7FgrbGQp4xC8hsV6yFiAe"
			]
		}
	},
	"version": 1
}