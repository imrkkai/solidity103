{
	"id": "94eb84a15f8e03e0611a0889916862d7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC4626.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.21;\r\nimport {IERC4626} from \"IERC4626.sol\";\r\nimport {ERC20, IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\n\r\n// ERC4626合约\r\n// 实现一个简化的代币化金额合约\r\n// - 构造函数初始化基础资产的合约地址，金额份额的代币名称和符号\r\n//   注意，金库份额的代币名称和符号要和基础资产有关联，比如基础资产叫MKC，那么金额份额最好叫vMKC。\r\n// - 存款时，当用户向金库存X单位的基础资产，会铸造X单位（等量）的金库份额。\r\n// - 取款时，当用户销毁x单位的金库份额，会提取x单位（等量）的基础资产\r\n\r\n\r\n// 注意：在实际使用时，要特别小心和会计逻辑相关函数的计算是向上取整还是向下取整\r\n// 可以参考 openzeppelin 和 solmate 的实现。本节的教学例子中不考虑它。\r\n//https://github.com/transmissions11/solmate/blob/main/src/mixins/ERC4626.sol\r\n\r\n\r\ncontract ERC4626 is ERC20, IERC4626 {\r\n\r\n    ERC20 private immutable _asset;\r\n\r\n    constructor(\r\n        ERC20 asset,\r\n        string memory name,\r\n        string memory symbol\r\n    ) ERC20(name, symbol) {\r\n        _asset = asset;\r\n    }\r\n\r\n\r\n\r\n    function asset() public view virtual override returns (address) {\r\n        return address(_asset);\r\n    }\r\n\r\n    function deposit(uint256 assets, address receiver) public virtual returns(uint256 shares) {\r\n        // 利用previewDeposit() 计算将获得的金库份额\r\n        shares = previewDeposit(assets);\r\n        // 先transfer后mint，防止重入\r\n        _asset.transferFrom(msg.sender, address(this), assets);\r\n\r\n        _mint(receiver, shares);\r\n\r\n        // 释放Deposit事件\r\n        emit Deposit(msg.sender, receiver, assets, shares);\r\n\r\n    }\r\n\r\n\r\n    function mint(uint256 shares, address receiver) public virtual returns (uint256 assets) {\r\n        // 利用previewMint()计算需要存款的基础资产数额\r\n        assets = previewMint(shares);\r\n\r\n        // 先transfer后mint，防止重入\r\n        _asset.transferFrom(msg.sender, address(this), assets);\r\n\r\n        _mint(receiver, shares);\r\n\r\n        // 释放Deposit事件\r\n        emit Deposit(msg.sender, receiver, assets, shares);\r\n    }\r\n\r\n\r\n    function withdraw(\r\n        uint256 assets,\r\n        address receiver,\r\n        address owner\r\n    ) public virtual returns (uint256 shares) {\r\n        // 利用 previewWithdraw() 计算将销毁的金库份额\r\n        shares = previewWithdraw(assets);\r\n\r\n        // 如果调用者不是 owner，则检查并更新授权\r\n        if (msg.sender != owner) {\r\n            _spendAllowance(owner, msg.sender, shares);\r\n        }\r\n\r\n        // 先销毁后transfer，防止重入\r\n        _burn(owner, shares);\r\n        _asset.transfer(receiver, assets);\r\n\r\n        // 释放 Withdraw 事件\r\n        emit Withdraw(msg.sender, receiver, owner, assets, shares);\r\n    }\r\n\r\n    function redeem(\r\n        uint256 shares,\r\n        address receiver,\r\n        address owner\r\n    ) public virtual returns (uint256 assets) {\r\n        // 利用 previewRedeem() 计算能赎回的基础资产数额\r\n        assets = previewRedeem(shares);\r\n\r\n        // 如果调用者不是 owner，则检查并更新授权\r\n        if (msg.sender != owner) {\r\n            _spendAllowance(owner, msg.sender, shares);\r\n        }\r\n\r\n        // 先销毁后 transfer，防止重入\r\n        _burn(owner, shares);\r\n        _asset.transfer(receiver, assets);\r\n\r\n        // 释放 Withdraw 事件       \r\n        emit Withdraw(msg.sender, receiver, owner, assets, shares);\r\n    }\r\n\r\n\r\n    function totalAssets() public view virtual returns (uint256){\r\n        // 返回合约中基础资产持仓\r\n        return _asset.balanceOf(address(this));\r\n    }\r\n\r\n\r\n    function convertToShares(uint256 assets) public view virtual returns (uint256) {\r\n        // 获取合约的代币的总供给\r\n        uint256 supply = totalSupply();\r\n        // 如果 supply 为 0，那么 1:1 铸造金库份额\r\n        // 如果 supply 不为0，那么按比例铸造\r\n        return supply == 0 ? assets : assets * supply / totalAssets();\r\n    }\r\n\r\n    function convertToAssets(uint256 shares) public view virtual returns (uint256) {\r\n        // 获取合约的代币的总供给\r\n        uint256 supply = totalSupply();\r\n        // 如果 supply 为 0，那么 1:1 赎回基础资产\r\n        // 如果 supply 不为0，那么按比例赎回\r\n        return supply == 0 ? shares : shares * totalAssets() / supply;\r\n    }\r\n\r\n\r\n     function previewDeposit(uint256 assets) public view virtual returns (uint256) {\r\n        return convertToShares(assets);\r\n    }\r\n\r\n    function previewMint(uint256 shares) public view virtual returns (uint256) {\r\n        return convertToAssets(shares);\r\n    }\r\n\r\n    function previewWithdraw(uint256 assets) public view virtual returns (uint256) {\r\n        return convertToShares(assets);\r\n    }\r\n\r\n    function previewRedeem(uint256 shares) public view virtual returns (uint256) {\r\n        return convertToAssets(shares);\r\n    }\r\n\r\n    function maxDeposit(address) public view virtual returns (uint256) {\r\n        return type(uint256).max;\r\n    }\r\n\r\n    function maxMint(address) public view virtual returns (uint256) {\r\n        return type(uint256).max;\r\n    }\r\n\r\n    function maxWithdraw(address owner) public view virtual returns (uint256) {\r\n        return convertToAssets(balanceOf(owner));\r\n    }\r\n\r\n    function maxRedeem(address owner) public view virtual returns (uint256) {\r\n        return balanceOf(owner);\r\n    }\r\n\r\n}\r\n\r\n\r\n// 演示\r\n// 1. 部署ERC20代币合约 TEST, 并给自己铸造10000代币\r\n\r\n// 2. 不是ERC4626代币合约,将基础资产的合约地址设置为TEST合约地址\r\n//   名称和符号均设置为vTEST\r\n\r\n// 3.调用ERC20合约的approve函数，将代币授权给ERC4626合约\r\n\r\n// 4. 调用ERC4626合约的deposit函数，存款1000枚代币，然后\r\n// 调用balanceOf()函数，查看自己的金库分红变为1000\r\n\r\n\r\n// 代币化金库标准 ERC4626，并写了一个简单的金库合约，可以将基础资产 1:1 的转换为金库份额代币。ERC4626 为 DeFi 提升流动性和可组合性，未来将逐渐普及。"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"IERC4626.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.21;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\r\n\r\ninterface IERC4626 is IERC20, IERC20Metadata {\r\n\r\n    // 事件\r\n\r\n    // 存款事件    \r\n    event Deposit(\r\n        address indexed sender, \r\n        address indexed owner, \r\n        uint256 assets, \r\n        uint256 shares\r\n    );\r\n\r\n    // 取款事件\r\n    event Withdraw(\r\n        address indexed sender, \r\n        address indexed receiver,\r\n        address indexed owner, \r\n        uint256 assets, \r\n        uint256 shares\r\n    );\r\n\r\n    \r\n   /**\r\n    * @dev 返回金库的基础资产代币地址（用于存款、取款）\r\n    */\r\n    function asset() external view returns(address assetTokenAddress);\r\n\r\n   /**\r\n    * @dev 存款函数：用户向金库存入assets单位的基础资产，然后合约铸造shares单位的金库额度给receiver地址\r\n    * - 必须是否Deposit 事件\r\n    * - 如果资产不能存入，必须revert，比如存款数额大于上限等\r\n    */   \r\n    function deposit(uint256 assets, address receiver) external returns(uint256 shares);\r\n\r\n   /**\r\n    * @dev 铸造函数：用户需要存入assets单位的基础资产，然后合约给receiver地址铸造shares数量的金库额度\r\n    * - 必须是否Deposit事件\r\n    * - 如果全部金库额度不能铸造，必须 revert, 比如铸造数额大于上线等\r\n    */ \r\n    function mint(uint256 shares, address receiver) external  returns(uint256 assets);\r\n    \r\n\r\n    /**\r\n     * @dev 提款函数：owner地址销毁shares单位的金库额度，然后合约将assets单位的基础资产发送给receiver地址\r\n     * - 释放 withdraw事件\r\n     * - 如果全部基础资产不能提取，将revert\r\n     */\r\n    function withdraw(uint256 assets, address receiver, address owner) external returns(uint256 shares);\r\n\r\n    /**\r\n     * @dev 赎回函数：owner地址销毁shares数量的金额额度，然后合约将asserts单位的基础代币资产发给receiver地址\r\n     * - 释放Withdraw事件\r\n     * - 如果金库额度不能全部销毁，则revert\r\n     */\r\n    function redeem(uint256 shares, address receiver, address owner) external returns(uint256 assets);\r\n\r\n\r\n    /**\r\n     * @dev 返回金库中管理的基础资产代币总额\r\n     * - 要包含利息\r\n     * - 要包含费用\r\n     * - 不能revert\r\n     */\r\n    function totalAssets() external view returns(uint256 totalManagedAssets);\r\n    \r\n    /**\r\n     * @dev 返回利用一定数额的金库额度可以换取的基础资产\r\n     * - 不要包含费用\r\n     * - 不包含滑点\r\n     * - 不能revert\r\n     */\r\n    function convertToAssets(uint256 shares) external view returns(uint256 assets);\r\n\r\n    /**\r\n     * @dev 返回利用一定数额的基础资产可以换取的金库额度\r\n     * - 不要包含费用\r\n     * - 不要包含滑点\r\n     * - 不能 revert\r\n     */\r\n    function convertToShares(uint256 assets) external view returns(uint256 shares);\r\n\r\n\r\n    /**\r\n     * @dev 用于链上和链下用户在当前链上环境模拟存款一定数额的基础资产能够获得的金库额度\r\n     * - 返回值要接近且不大于在同一个交易进行存款得到的金库额度\r\n     * - 不要考虑maxDeposit等限制，假设用户的存款交易会成功\r\n     * - 要考虑费用\r\n     * - 不能revert     \r\n     */\r\n    function previewDeposit(uint256 assets) external view returns(uint256 shares);\r\n\r\n\r\n    /**\r\n     * @dev 用于链上和链下用户在当前链上环境模拟铸造 shares 数额的金库额度需要存款的基础资产数量\r\n     * - 返回值要接近且不小于在同一交易进行铸造一定数额金库额度所需的存款数量\r\n     * - 不要考虑 maxMint 等限制，假设用户的存款交易会成功\r\n     * - 要考虑费用\r\n     * - 不能revert\r\n     */\r\n    function previewMint(uint256 shares) external view returns(uint256 assets);\r\n\r\n\r\n    /**\r\n     * @dev 用于链上和链下用户在当前链上环境模拟提款 assets 数额的基础资产需要赎回的金库份额\r\n     * - 返回值要接近且不大于在同一交易进行提款一定数额基础资产所需赎回的金库份额\r\n     * - 不要考虑 maxWithdraw 等限制，假设用户的提款交易会成功\r\n     * - 要考虑费用\r\n     * - 不能revert\r\n     */\r\n    function previewWithdraw(uint256 assets) external view returns (uint256 shares);\r\n\r\n    /**\r\n     * @dev 用于链上和链下用户在当前链上环境模拟销毁 shares 数额的金库额度能够赎回的基础资产数量\r\n     * - 返回值要接近且不小于在同一交易进行销毁一定数额的金库额度所能赎回的基础资产数量\r\n     * - 不要考虑 maxRedeem 等限制，假设用户的赎回交易会成功\r\n     * - 要考虑费用\r\n     * - 不能revert.\r\n     */\r\n    function previewRedeem(uint256 shares) external view returns (uint256 assets);\r\n\r\n\r\n\r\n    /**\r\n     * @dev 返回某个用户地址单次存款可存的最大基础资产数额。\r\n     * - 如果有存款上限，那么返回值应该是个有限值\r\n     * - 返回值不能超过 2 ** 256 - 1 \r\n     * - 不能revert\r\n     */\r\n    function maxDeposit(address receiver) external view returns (uint256 maxAssets);\r\n\r\n    /**\r\n     * @dev 返回某个用户地址单次铸造可以铸造的最大金库额度\r\n     * - 如果有铸造上限，那么返回值应该是个有限值\r\n     * - 返回值不能超过 2 ** 256 - 1 \r\n     * - 不能revert\r\n     */\r\n    function maxMint(address receiver) external view returns (uint256 maxShares);\r\n\r\n    /**\r\n     * @dev 返回某个用户地址单次取款可以提取的最大基础资产额度\r\n     * - 返回值应该是个有限值\r\n     * - 不能revert\r\n     */\r\n    function maxWithdraw(address owner) external view returns (uint256 maxAssets);\r\n\r\n    /**\r\n     * @dev 返回某个用户地址单次赎回可以销毁的最大金库额度\r\n     * - 返回值应该是个有限值\r\n     * - 如果没有其他限制，返回值应该是 balanceOf(owner)\r\n     * - 不能revert\r\n     */\r\n    function maxRedeem(address owner) external view returns (uint256 maxShares);\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC4626.sol": {
				"ERC4626": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ERC20",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "asset",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "convertToAssets",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"name": "convertToShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "maxDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "maxMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "maxRedeem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "maxWithdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"name": "previewDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "previewMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "previewRedeem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"name": "previewWithdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "redeem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAssets",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"asset()": {
								"details": "返回金库的基础资产代币地址（用于存款、取款）"
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"convertToAssets(uint256)": {
								"details": "返回利用一定数额的金库额度可以换取的基础资产 - 不要包含费用 - 不包含滑点 - 不能revert"
							},
							"convertToShares(uint256)": {
								"details": "返回利用一定数额的基础资产可以换取的金库额度 - 不要包含费用 - 不要包含滑点 - 不能 revert"
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"deposit(uint256,address)": {
								"details": "存款函数：用户向金库存入assets单位的基础资产，然后合约铸造shares单位的金库额度给receiver地址 - 必须是否Deposit 事件 - 如果资产不能存入，必须revert，比如存款数额大于上限等"
							},
							"maxRedeem(address)": {
								"details": "返回某个用户地址单次赎回可以销毁的最大金库额度 - 返回值应该是个有限值 - 如果没有其他限制，返回值应该是 balanceOf(owner) - 不能revert"
							},
							"maxWithdraw(address)": {
								"details": "返回某个用户地址单次取款可以提取的最大基础资产额度 - 返回值应该是个有限值 - 不能revert"
							},
							"mint(uint256,address)": {
								"details": "铸造函数：用户需要存入assets单位的基础资产，然后合约给receiver地址铸造shares数量的金库额度 - 必须是否Deposit事件 - 如果全部金库额度不能铸造，必须 revert, 比如铸造数额大于上线等"
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"previewDeposit(uint256)": {
								"details": "用于链上和链下用户在当前链上环境模拟存款一定数额的基础资产能够获得的金库额度 - 返回值要接近且不大于在同一个交易进行存款得到的金库额度 - 不要考虑maxDeposit等限制，假设用户的存款交易会成功 - 要考虑费用 - 不能revert     "
							},
							"previewMint(uint256)": {
								"details": "用于链上和链下用户在当前链上环境模拟铸造 shares 数额的金库额度需要存款的基础资产数量 - 返回值要接近且不小于在同一交易进行铸造一定数额金库额度所需的存款数量 - 不要考虑 maxMint 等限制，假设用户的存款交易会成功 - 要考虑费用 - 不能revert"
							},
							"previewRedeem(uint256)": {
								"details": "用于链上和链下用户在当前链上环境模拟销毁 shares 数额的金库额度能够赎回的基础资产数量 - 返回值要接近且不小于在同一交易进行销毁一定数额的金库额度所能赎回的基础资产数量 - 不要考虑 maxRedeem 等限制，假设用户的赎回交易会成功 - 要考虑费用 - 不能revert."
							},
							"previewWithdraw(uint256)": {
								"details": "用于链上和链下用户在当前链上环境模拟提款 assets 数额的基础资产需要赎回的金库份额 - 返回值要接近且不大于在同一交易进行提款一定数额基础资产所需赎回的金库份额 - 不要考虑 maxWithdraw 等限制，假设用户的提款交易会成功 - 要考虑费用 - 不能revert"
							},
							"redeem(uint256,address,address)": {
								"details": "赎回函数：owner地址销毁shares数量的金额额度，然后合约将asserts单位的基础代币资产发给receiver地址 - 释放Withdraw事件 - 如果金库额度不能全部销毁，则revert"
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalAssets()": {
								"details": "返回金库中管理的基础资产代币总额 - 要包含利息 - 要包含费用 - 不能revert"
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"withdraw(uint256,address,address)": {
								"details": "提款函数：owner地址销毁shares单位的金库额度，然后合约将assets单位的基础资产发送给receiver地址 - 释放 withdraw事件 - 如果全部基础资产不能提取，将revert"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC4626.sol\":1004:5599  contract ERC4626 is ERC20, IERC4626 {... */\n  mstore(0x40, 0xa0)\n    /* \"ERC4626.sol\":1088:1242  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ERC4626.sol\":1195:1199  name */\n  dup2\n    /* \"ERC4626.sol\":1201:1207  symbol */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"ERC4626.sol\":1229:1234  asset */\n  dup3\n    /* \"ERC4626.sol\":1220:1234  _asset = asset */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"ERC4626.sol\":1088:1242  constructor(... */\n  pop\n  pop\n  pop\n    /* \"ERC4626.sol\":1004:5599  contract ERC4626 is ERC20, IERC4626 {... */\n  jump(tag_11)\n    /* \"#utility.yul\":7:82   */\ntag_12:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_14:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_15:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_16:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_55\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_15\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:677   */\ntag_17:\n    /* \"#utility.yul\":618:625   */\n  0x00\n    /* \"#utility.yul\":647:671   */\n  tag_57\n    /* \"#utility.yul\":665:670   */\n  dup3\n    /* \"#utility.yul\":647:671   */\n  tag_16\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":636:671   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:677   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":683:831   */\ntag_18:\n    /* \"#utility.yul\":769:806   */\n  tag_59\n    /* \"#utility.yul\":800:805   */\n  dup2\n    /* \"#utility.yul\":769:806   */\n  tag_17\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":762:767   */\n  dup2\n    /* \"#utility.yul\":759:807   */\n  eq\n    /* \"#utility.yul\":749:825   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":821:822   */\n  0x00\n    /* \"#utility.yul\":818:819   */\n  dup1\n    /* \"#utility.yul\":811:823   */\n  revert\n    /* \"#utility.yul\":749:825   */\ntag_60:\n    /* \"#utility.yul\":683:831   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":837:1006   */\ntag_19:\n    /* \"#utility.yul\":907:912   */\n  0x00\n    /* \"#utility.yul\":938:944   */\n  dup2\n    /* \"#utility.yul\":932:945   */\n  mload\n    /* \"#utility.yul\":923:945   */\n  swap1\n  pop\n    /* \"#utility.yul\":954:1000   */\n  tag_62\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":954:1000   */\n  tag_18\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":837:1006   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1012:1129   */\ntag_20:\n    /* \"#utility.yul\":1121:1122   */\n  0x00\n    /* \"#utility.yul\":1118:1119   */\n  dup1\n    /* \"#utility.yul\":1111:1123   */\n  revert\n    /* \"#utility.yul\":1135:1252   */\ntag_21:\n    /* \"#utility.yul\":1244:1245   */\n  0x00\n    /* \"#utility.yul\":1241:1242   */\n  dup1\n    /* \"#utility.yul\":1234:1246   */\n  revert\n    /* \"#utility.yul\":1258:1360   */\ntag_22:\n    /* \"#utility.yul\":1299:1305   */\n  0x00\n    /* \"#utility.yul\":1350:1352   */\n  0x1f\n    /* \"#utility.yul\":1346:1353   */\n  not\n    /* \"#utility.yul\":1341:1343   */\n  0x1f\n    /* \"#utility.yul\":1334:1339   */\n  dup4\n    /* \"#utility.yul\":1330:1344   */\n  add\n    /* \"#utility.yul\":1326:1354   */\n  and\n    /* \"#utility.yul\":1316:1354   */\n  swap1\n  pop\n    /* \"#utility.yul\":1258:1360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1366:1546   */\ntag_23:\n    /* \"#utility.yul\":1414:1491   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1411:1412   */\n  0x00\n    /* \"#utility.yul\":1404:1492   */\n  mstore\n    /* \"#utility.yul\":1511:1515   */\n  0x41\n    /* \"#utility.yul\":1508:1509   */\n  0x04\n    /* \"#utility.yul\":1501:1516   */\n  mstore\n    /* \"#utility.yul\":1535:1539   */\n  0x24\n    /* \"#utility.yul\":1532:1533   */\n  0x00\n    /* \"#utility.yul\":1525:1540   */\n  revert\n    /* \"#utility.yul\":1552:1833   */\ntag_24:\n    /* \"#utility.yul\":1635:1662   */\n  tag_68\n    /* \"#utility.yul\":1657:1661   */\n  dup3\n    /* \"#utility.yul\":1635:1662   */\n  tag_22\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1627:1633   */\n  dup2\n    /* \"#utility.yul\":1623:1663   */\n  add\n    /* \"#utility.yul\":1765:1771   */\n  dup2\n    /* \"#utility.yul\":1753:1763   */\n  dup2\n    /* \"#utility.yul\":1750:1772   */\n  lt\n    /* \"#utility.yul\":1729:1747   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1717:1727   */\n  dup3\n    /* \"#utility.yul\":1714:1748   */\n  gt\n    /* \"#utility.yul\":1711:1773   */\n  or\n    /* \"#utility.yul\":1708:1796   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1776:1794   */\n  tag_70\n  tag_23\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1708:1796   */\ntag_69:\n    /* \"#utility.yul\":1816:1826   */\n  dup1\n    /* \"#utility.yul\":1812:1814   */\n  0x40\n    /* \"#utility.yul\":1805:1827   */\n  mstore\n    /* \"#utility.yul\":1595:1833   */\n  pop\n    /* \"#utility.yul\":1552:1833   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1839:1968   */\ntag_25:\n    /* \"#utility.yul\":1873:1879   */\n  0x00\n    /* \"#utility.yul\":1900:1920   */\n  tag_72\n  tag_12\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1890:1920   */\n  swap1\n  pop\n    /* \"#utility.yul\":1929:1962   */\n  tag_73\n    /* \"#utility.yul\":1957:1961   */\n  dup3\n    /* \"#utility.yul\":1949:1955   */\n  dup3\n    /* \"#utility.yul\":1929:1962   */\n  tag_24\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1839:1968   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1974:2282   */\ntag_26:\n    /* \"#utility.yul\":2036:2040   */\n  0x00\n    /* \"#utility.yul\":2126:2144   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2118:2124   */\n  dup3\n    /* \"#utility.yul\":2115:2145   */\n  gt\n    /* \"#utility.yul\":2112:2168   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2148:2166   */\n  tag_76\n  tag_23\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2112:2168   */\ntag_75:\n    /* \"#utility.yul\":2186:2215   */\n  tag_77\n    /* \"#utility.yul\":2208:2214   */\n  dup3\n    /* \"#utility.yul\":2186:2215   */\n  tag_22\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2178:2215   */\n  swap1\n  pop\n    /* \"#utility.yul\":2270:2274   */\n  0x20\n    /* \"#utility.yul\":2264:2268   */\n  dup2\n    /* \"#utility.yul\":2260:2275   */\n  add\n    /* \"#utility.yul\":2252:2275   */\n  swap1\n  pop\n    /* \"#utility.yul\":1974:2282   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2288:2427   */\ntag_27:\n    /* \"#utility.yul\":2377:2383   */\n  dup3\n    /* \"#utility.yul\":2372:2375   */\n  dup2\n    /* \"#utility.yul\":2367:2370   */\n  dup4\n    /* \"#utility.yul\":2361:2384   */\n  mcopy\n    /* \"#utility.yul\":2418:2419   */\n  0x00\n    /* \"#utility.yul\":2409:2415   */\n  dup4\n    /* \"#utility.yul\":2404:2407   */\n  dup4\n    /* \"#utility.yul\":2400:2416   */\n  add\n    /* \"#utility.yul\":2393:2420   */\n  mstore\n    /* \"#utility.yul\":2288:2427   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2433:2867   */\ntag_28:\n    /* \"#utility.yul\":2522:2527   */\n  0x00\n    /* \"#utility.yul\":2547:2613   */\n  tag_80\n    /* \"#utility.yul\":2563:2612   */\n  tag_81\n    /* \"#utility.yul\":2605:2611   */\n  dup5\n    /* \"#utility.yul\":2563:2612   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2547:2613   */\n  tag_25\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2538:2613   */\n  swap1\n  pop\n    /* \"#utility.yul\":2636:2642   */\n  dup3\n    /* \"#utility.yul\":2629:2634   */\n  dup2\n    /* \"#utility.yul\":2622:2643   */\n  mstore\n    /* \"#utility.yul\":2674:2678   */\n  0x20\n    /* \"#utility.yul\":2667:2672   */\n  dup2\n    /* \"#utility.yul\":2663:2679   */\n  add\n    /* \"#utility.yul\":2712:2715   */\n  dup5\n    /* \"#utility.yul\":2703:2709   */\n  dup5\n    /* \"#utility.yul\":2698:2701   */\n  dup5\n    /* \"#utility.yul\":2694:2710   */\n  add\n    /* \"#utility.yul\":2691:2716   */\n  gt\n    /* \"#utility.yul\":2688:2800   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":2719:2798   */\n  tag_83\n  tag_21\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2688:2800   */\ntag_82:\n    /* \"#utility.yul\":2809:2861   */\n  tag_84\n    /* \"#utility.yul\":2854:2860   */\n  dup5\n    /* \"#utility.yul\":2849:2852   */\n  dup3\n    /* \"#utility.yul\":2844:2847   */\n  dup6\n    /* \"#utility.yul\":2809:2861   */\n  tag_27\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2528:2867   */\n  pop\n    /* \"#utility.yul\":2433:2867   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2887:3242   */\ntag_29:\n    /* \"#utility.yul\":2954:2959   */\n  0x00\n    /* \"#utility.yul\":3003:3006   */\n  dup3\n    /* \"#utility.yul\":2996:3000   */\n  0x1f\n    /* \"#utility.yul\":2988:2994   */\n  dup4\n    /* \"#utility.yul\":2984:3001   */\n  add\n    /* \"#utility.yul\":2980:3007   */\n  slt\n    /* \"#utility.yul\":2970:3092   */\n  tag_86\n  jumpi\n    /* \"#utility.yul\":3011:3090   */\n  tag_87\n  tag_20\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":2970:3092   */\ntag_86:\n    /* \"#utility.yul\":3121:3127   */\n  dup2\n    /* \"#utility.yul\":3115:3128   */\n  mload\n    /* \"#utility.yul\":3146:3236   */\n  tag_88\n    /* \"#utility.yul\":3232:3235   */\n  dup5\n    /* \"#utility.yul\":3224:3230   */\n  dup3\n    /* \"#utility.yul\":3217:3221   */\n  0x20\n    /* \"#utility.yul\":3209:3215   */\n  dup7\n    /* \"#utility.yul\":3205:3222   */\n  add\n    /* \"#utility.yul\":3146:3236   */\n  tag_28\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3137:3236   */\n  swap2\n  pop\n    /* \"#utility.yul\":2960:3242   */\n  pop\n    /* \"#utility.yul\":2887:3242   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3248:4283   */\ntag_3:\n    /* \"#utility.yul\":3369:3375   */\n  0x00\n    /* \"#utility.yul\":3377:3383   */\n  dup1\n    /* \"#utility.yul\":3385:3391   */\n  0x00\n    /* \"#utility.yul\":3434:3436   */\n  0x60\n    /* \"#utility.yul\":3422:3431   */\n  dup5\n    /* \"#utility.yul\":3413:3420   */\n  dup7\n    /* \"#utility.yul\":3409:3432   */\n  sub\n    /* \"#utility.yul\":3405:3437   */\n  slt\n    /* \"#utility.yul\":3402:3521   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":3440:3519   */\n  tag_91\n  tag_13\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3402:3521   */\ntag_90:\n    /* \"#utility.yul\":3560:3561   */\n  0x00\n    /* \"#utility.yul\":3585:3662   */\n  tag_92\n    /* \"#utility.yul\":3654:3661   */\n  dup7\n    /* \"#utility.yul\":3645:3651   */\n  dup3\n    /* \"#utility.yul\":3634:3643   */\n  dup8\n    /* \"#utility.yul\":3630:3652   */\n  add\n    /* \"#utility.yul\":3585:3662   */\n  tag_19\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3575:3662   */\n  swap4\n  pop\n    /* \"#utility.yul\":3531:3672   */\n  pop\n    /* \"#utility.yul\":3732:3734   */\n  0x20\n    /* \"#utility.yul\":3721:3730   */\n  dup5\n    /* \"#utility.yul\":3717:3735   */\n  add\n    /* \"#utility.yul\":3711:3736   */\n  mload\n    /* \"#utility.yul\":3763:3781   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3755:3761   */\n  dup2\n    /* \"#utility.yul\":3752:3782   */\n  gt\n    /* \"#utility.yul\":3749:3866   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":3785:3864   */\n  tag_94\n  tag_14\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3749:3866   */\ntag_93:\n    /* \"#utility.yul\":3890:3964   */\n  tag_95\n    /* \"#utility.yul\":3956:3963   */\n  dup7\n    /* \"#utility.yul\":3947:3953   */\n  dup3\n    /* \"#utility.yul\":3936:3945   */\n  dup8\n    /* \"#utility.yul\":3932:3954   */\n  add\n    /* \"#utility.yul\":3890:3964   */\n  tag_29\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3880:3964   */\n  swap3\n  pop\n    /* \"#utility.yul\":3682:3974   */\n  pop\n    /* \"#utility.yul\":4034:4036   */\n  0x40\n    /* \"#utility.yul\":4023:4032   */\n  dup5\n    /* \"#utility.yul\":4019:4037   */\n  add\n    /* \"#utility.yul\":4013:4038   */\n  mload\n    /* \"#utility.yul\":4065:4083   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4057:4063   */\n  dup2\n    /* \"#utility.yul\":4054:4084   */\n  gt\n    /* \"#utility.yul\":4051:4168   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4087:4166   */\n  tag_97\n  tag_14\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4051:4168   */\ntag_96:\n    /* \"#utility.yul\":4192:4266   */\n  tag_98\n    /* \"#utility.yul\":4258:4265   */\n  dup7\n    /* \"#utility.yul\":4249:4255   */\n  dup3\n    /* \"#utility.yul\":4238:4247   */\n  dup8\n    /* \"#utility.yul\":4234:4256   */\n  add\n    /* \"#utility.yul\":4192:4266   */\n  tag_29\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4182:4266   */\n  swap2\n  pop\n    /* \"#utility.yul\":3984:4276   */\n  pop\n    /* \"#utility.yul\":3248:4283   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4289:4388   */\ntag_30:\n    /* \"#utility.yul\":4341:4347   */\n  0x00\n    /* \"#utility.yul\":4375:4380   */\n  dup2\n    /* \"#utility.yul\":4369:4381   */\n  mload\n    /* \"#utility.yul\":4359:4381   */\n  swap1\n  pop\n    /* \"#utility.yul\":4289:4388   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4394:4574   */\ntag_31:\n    /* \"#utility.yul\":4442:4519   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4439:4440   */\n  0x00\n    /* \"#utility.yul\":4432:4520   */\n  mstore\n    /* \"#utility.yul\":4539:4543   */\n  0x22\n    /* \"#utility.yul\":4536:4537   */\n  0x04\n    /* \"#utility.yul\":4529:4544   */\n  mstore\n    /* \"#utility.yul\":4563:4567   */\n  0x24\n    /* \"#utility.yul\":4560:4561   */\n  0x00\n    /* \"#utility.yul\":4553:4568   */\n  revert\n    /* \"#utility.yul\":4580:4900   */\ntag_32:\n    /* \"#utility.yul\":4624:4630   */\n  0x00\n    /* \"#utility.yul\":4661:4662   */\n  0x02\n    /* \"#utility.yul\":4655:4659   */\n  dup3\n    /* \"#utility.yul\":4651:4663   */\n  div\n    /* \"#utility.yul\":4641:4663   */\n  swap1\n  pop\n    /* \"#utility.yul\":4708:4709   */\n  0x01\n    /* \"#utility.yul\":4702:4706   */\n  dup3\n    /* \"#utility.yul\":4698:4710   */\n  and\n    /* \"#utility.yul\":4729:4747   */\n  dup1\n    /* \"#utility.yul\":4719:4800   */\n  tag_102\n  jumpi\n    /* \"#utility.yul\":4785:4789   */\n  0x7f\n    /* \"#utility.yul\":4777:4783   */\n  dup3\n    /* \"#utility.yul\":4773:4790   */\n  and\n    /* \"#utility.yul\":4763:4790   */\n  swap2\n  pop\n    /* \"#utility.yul\":4719:4800   */\ntag_102:\n    /* \"#utility.yul\":4847:4849   */\n  0x20\n    /* \"#utility.yul\":4839:4845   */\n  dup3\n    /* \"#utility.yul\":4836:4850   */\n  lt\n    /* \"#utility.yul\":4816:4834   */\n  dup2\n    /* \"#utility.yul\":4813:4851   */\n  sub\n    /* \"#utility.yul\":4810:4894   */\n  tag_103\n  jumpi\n    /* \"#utility.yul\":4866:4884   */\n  tag_104\n  tag_31\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4810:4894   */\ntag_103:\n    /* \"#utility.yul\":4631:4900   */\n  pop\n    /* \"#utility.yul\":4580:4900   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4906:5047   */\ntag_33:\n    /* \"#utility.yul\":4955:4959   */\n  0x00\n    /* \"#utility.yul\":4978:4981   */\n  dup2\n    /* \"#utility.yul\":4970:4981   */\n  swap1\n  pop\n    /* \"#utility.yul\":5001:5004   */\n  dup2\n    /* \"#utility.yul\":4998:4999   */\n  0x00\n    /* \"#utility.yul\":4991:5005   */\n  mstore\n    /* \"#utility.yul\":5035:5039   */\n  0x20\n    /* \"#utility.yul\":5032:5033   */\n  0x00\n    /* \"#utility.yul\":5022:5040   */\n  keccak256\n    /* \"#utility.yul\":5014:5040   */\n  swap1\n  pop\n    /* \"#utility.yul\":4906:5047   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5053:5146   */\ntag_34:\n    /* \"#utility.yul\":5090:5096   */\n  0x00\n    /* \"#utility.yul\":5137:5139   */\n  0x20\n    /* \"#utility.yul\":5132:5134   */\n  0x1f\n    /* \"#utility.yul\":5125:5130   */\n  dup4\n    /* \"#utility.yul\":5121:5135   */\n  add\n    /* \"#utility.yul\":5117:5140   */\n  div\n    /* \"#utility.yul\":5107:5140   */\n  swap1\n  pop\n    /* \"#utility.yul\":5053:5146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5152:5259   */\ntag_35:\n    /* \"#utility.yul\":5196:5204   */\n  0x00\n    /* \"#utility.yul\":5246:5251   */\n  dup3\n    /* \"#utility.yul\":5240:5244   */\n  dup3\n    /* \"#utility.yul\":5236:5252   */\n  shl\n    /* \"#utility.yul\":5215:5252   */\n  swap1\n  pop\n    /* \"#utility.yul\":5152:5259   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5265:5658   */\ntag_36:\n    /* \"#utility.yul\":5334:5340   */\n  0x00\n    /* \"#utility.yul\":5384:5385   */\n  0x08\n    /* \"#utility.yul\":5372:5382   */\n  dup4\n    /* \"#utility.yul\":5368:5386   */\n  mul\n    /* \"#utility.yul\":5407:5504   */\n  tag_109\n    /* \"#utility.yul\":5437:5503   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5426:5435   */\n  dup3\n    /* \"#utility.yul\":5407:5504   */\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5525:5564   */\n  tag_110\n    /* \"#utility.yul\":5555:5563   */\n  dup7\n    /* \"#utility.yul\":5544:5553   */\n  dup4\n    /* \"#utility.yul\":5525:5564   */\n  tag_35\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5513:5564   */\n  swap6\n  pop\n    /* \"#utility.yul\":5597:5601   */\n  dup1\n    /* \"#utility.yul\":5593:5602   */\n  not\n    /* \"#utility.yul\":5586:5591   */\n  dup5\n    /* \"#utility.yul\":5582:5603   */\n  and\n    /* \"#utility.yul\":5573:5603   */\n  swap4\n  pop\n    /* \"#utility.yul\":5646:5650   */\n  dup1\n    /* \"#utility.yul\":5636:5644   */\n  dup7\n    /* \"#utility.yul\":5632:5651   */\n  and\n    /* \"#utility.yul\":5625:5630   */\n  dup5\n    /* \"#utility.yul\":5622:5652   */\n  or\n    /* \"#utility.yul\":5612:5652   */\n  swap3\n  pop\n    /* \"#utility.yul\":5341:5658   */\n  pop\n  pop\n    /* \"#utility.yul\":5265:5658   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5664:5741   */\ntag_37:\n    /* \"#utility.yul\":5701:5708   */\n  0x00\n    /* \"#utility.yul\":5730:5735   */\n  dup2\n    /* \"#utility.yul\":5719:5735   */\n  swap1\n  pop\n    /* \"#utility.yul\":5664:5741   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5747:5807   */\ntag_38:\n    /* \"#utility.yul\":5775:5778   */\n  0x00\n    /* \"#utility.yul\":5796:5801   */\n  dup2\n    /* \"#utility.yul\":5789:5801   */\n  swap1\n  pop\n    /* \"#utility.yul\":5747:5807   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5813:5955   */\ntag_39:\n    /* \"#utility.yul\":5863:5872   */\n  0x00\n    /* \"#utility.yul\":5896:5949   */\n  tag_114\n    /* \"#utility.yul\":5914:5948   */\n  tag_115\n    /* \"#utility.yul\":5923:5947   */\n  tag_116\n    /* \"#utility.yul\":5941:5946   */\n  dup5\n    /* \"#utility.yul\":5923:5947   */\n  tag_37\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5914:5948   */\n  tag_38\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5896:5949   */\n  tag_37\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5883:5949   */\n  swap1\n  pop\n    /* \"#utility.yul\":5813:5955   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5961:6036   */\ntag_40:\n    /* \"#utility.yul\":6004:6007   */\n  0x00\n    /* \"#utility.yul\":6025:6030   */\n  dup2\n    /* \"#utility.yul\":6018:6030   */\n  swap1\n  pop\n    /* \"#utility.yul\":5961:6036   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6042:6311   */\ntag_41:\n    /* \"#utility.yul\":6152:6191   */\n  tag_119\n    /* \"#utility.yul\":6183:6190   */\n  dup4\n    /* \"#utility.yul\":6152:6191   */\n  tag_39\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6213:6304   */\n  tag_120\n    /* \"#utility.yul\":6262:6303   */\n  tag_121\n    /* \"#utility.yul\":6286:6302   */\n  dup3\n    /* \"#utility.yul\":6262:6303   */\n  tag_40\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6254:6260   */\n  dup5\n    /* \"#utility.yul\":6247:6251   */\n  dup5\n    /* \"#utility.yul\":6241:6252   */\n  sload\n    /* \"#utility.yul\":6213:6304   */\n  tag_36\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6207:6211   */\n  dup3\n    /* \"#utility.yul\":6200:6305   */\n  sstore\n    /* \"#utility.yul\":6118:6311   */\n  pop\n    /* \"#utility.yul\":6042:6311   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6317:6390   */\ntag_42:\n    /* \"#utility.yul\":6362:6365   */\n  0x00\n    /* \"#utility.yul\":6317:6390   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6396:6585   */\ntag_43:\n    /* \"#utility.yul\":6473:6505   */\n  tag_124\n  tag_42\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6514:6579   */\n  tag_125\n    /* \"#utility.yul\":6572:6578   */\n  dup2\n    /* \"#utility.yul\":6564:6570   */\n  dup5\n    /* \"#utility.yul\":6558:6562   */\n  dup5\n    /* \"#utility.yul\":6514:6579   */\n  tag_41\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6449:6585   */\n  pop\n    /* \"#utility.yul\":6396:6585   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6591:6777   */\ntag_44:\n    /* \"#utility.yul\":6651:6771   */\ntag_127:\n    /* \"#utility.yul\":6668:6671   */\n  dup2\n    /* \"#utility.yul\":6661:6666   */\n  dup2\n    /* \"#utility.yul\":6658:6672   */\n  lt\n    /* \"#utility.yul\":6651:6771   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":6722:6761   */\n  tag_130\n    /* \"#utility.yul\":6759:6760   */\n  0x00\n    /* \"#utility.yul\":6752:6757   */\n  dup3\n    /* \"#utility.yul\":6722:6761   */\n  tag_43\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6695:6696   */\n  0x01\n    /* \"#utility.yul\":6688:6693   */\n  dup2\n    /* \"#utility.yul\":6684:6697   */\n  add\n    /* \"#utility.yul\":6675:6697   */\n  swap1\n  pop\n    /* \"#utility.yul\":6651:6771   */\n  jump(tag_127)\ntag_129:\n    /* \"#utility.yul\":6591:6777   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6783:7326   */\ntag_45:\n    /* \"#utility.yul\":6884:6886   */\n  0x1f\n    /* \"#utility.yul\":6879:6882   */\n  dup3\n    /* \"#utility.yul\":6876:6887   */\n  gt\n    /* \"#utility.yul\":6873:7319   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":6918:6956   */\n  tag_133\n    /* \"#utility.yul\":6950:6955   */\n  dup2\n    /* \"#utility.yul\":6918:6956   */\n  tag_33\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7002:7031   */\n  tag_134\n    /* \"#utility.yul\":7020:7030   */\n  dup5\n    /* \"#utility.yul\":7002:7031   */\n  tag_34\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":6992:7000   */\n  dup2\n    /* \"#utility.yul\":6988:7032   */\n  add\n    /* \"#utility.yul\":7185:7187   */\n  0x20\n    /* \"#utility.yul\":7173:7183   */\n  dup6\n    /* \"#utility.yul\":7170:7188   */\n  lt\n    /* \"#utility.yul\":7167:7216   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":7206:7214   */\n  dup2\n    /* \"#utility.yul\":7191:7214   */\n  swap1\n  pop\n    /* \"#utility.yul\":7167:7216   */\ntag_135:\n    /* \"#utility.yul\":7229:7309   */\n  tag_136\n    /* \"#utility.yul\":7285:7307   */\n  tag_137\n    /* \"#utility.yul\":7303:7306   */\n  dup6\n    /* \"#utility.yul\":7285:7307   */\n  tag_34\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":7275:7283   */\n  dup4\n    /* \"#utility.yul\":7271:7308   */\n  add\n    /* \"#utility.yul\":7258:7269   */\n  dup3\n    /* \"#utility.yul\":7229:7309   */\n  tag_44\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":6888:7319   */\n  pop\n  pop\n    /* \"#utility.yul\":6873:7319   */\ntag_132:\n    /* \"#utility.yul\":6783:7326   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7332:7449   */\ntag_46:\n    /* \"#utility.yul\":7386:7394   */\n  0x00\n    /* \"#utility.yul\":7436:7441   */\n  dup3\n    /* \"#utility.yul\":7430:7434   */\n  dup3\n    /* \"#utility.yul\":7426:7442   */\n  shr\n    /* \"#utility.yul\":7405:7442   */\n  swap1\n  pop\n    /* \"#utility.yul\":7332:7449   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7455:7624   */\ntag_47:\n    /* \"#utility.yul\":7499:7505   */\n  0x00\n    /* \"#utility.yul\":7532:7583   */\n  tag_140\n    /* \"#utility.yul\":7580:7581   */\n  0x00\n    /* \"#utility.yul\":7576:7582   */\n  not\n    /* \"#utility.yul\":7568:7573   */\n  dup5\n    /* \"#utility.yul\":7565:7566   */\n  0x08\n    /* \"#utility.yul\":7561:7574   */\n  mul\n    /* \"#utility.yul\":7532:7583   */\n  tag_46\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":7528:7584   */\n  not\n    /* \"#utility.yul\":7613:7617   */\n  dup1\n    /* \"#utility.yul\":7607:7611   */\n  dup4\n    /* \"#utility.yul\":7603:7618   */\n  and\n    /* \"#utility.yul\":7593:7618   */\n  swap2\n  pop\n    /* \"#utility.yul\":7506:7624   */\n  pop\n    /* \"#utility.yul\":7455:7624   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7629:7924   */\ntag_48:\n    /* \"#utility.yul\":7705:7709   */\n  0x00\n    /* \"#utility.yul\":7851:7880   */\n  tag_142\n    /* \"#utility.yul\":7876:7879   */\n  dup4\n    /* \"#utility.yul\":7870:7874   */\n  dup4\n    /* \"#utility.yul\":7851:7880   */\n  tag_47\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":7843:7880   */\n  swap2\n  pop\n    /* \"#utility.yul\":7913:7916   */\n  dup3\n    /* \"#utility.yul\":7910:7911   */\n  0x02\n    /* \"#utility.yul\":7906:7917   */\n  mul\n    /* \"#utility.yul\":7900:7904   */\n  dup3\n    /* \"#utility.yul\":7897:7918   */\n  or\n    /* \"#utility.yul\":7889:7918   */\n  swap1\n  pop\n    /* \"#utility.yul\":7629:7924   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7929:9324   */\ntag_8:\n    /* \"#utility.yul\":8046:8083   */\n  tag_144\n    /* \"#utility.yul\":8079:8082   */\n  dup3\n    /* \"#utility.yul\":8046:8083   */\n  tag_30\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":8148:8166   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8140:8146   */\n  dup2\n    /* \"#utility.yul\":8137:8167   */\n  gt\n    /* \"#utility.yul\":8134:8190   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":8170:8188   */\n  tag_146\n  tag_23\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":8134:8190   */\ntag_145:\n    /* \"#utility.yul\":8214:8252   */\n  tag_147\n    /* \"#utility.yul\":8246:8250   */\n  dup3\n    /* \"#utility.yul\":8240:8251   */\n  sload\n    /* \"#utility.yul\":8214:8252   */\n  tag_32\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":8299:8366   */\n  tag_148\n    /* \"#utility.yul\":8359:8365   */\n  dup3\n    /* \"#utility.yul\":8351:8357   */\n  dup3\n    /* \"#utility.yul\":8345:8349   */\n  dup6\n    /* \"#utility.yul\":8299:8366   */\n  tag_45\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":8393:8394   */\n  0x00\n    /* \"#utility.yul\":8417:8421   */\n  0x20\n    /* \"#utility.yul\":8404:8421   */\n  swap1\n  pop\n    /* \"#utility.yul\":8449:8451   */\n  0x1f\n    /* \"#utility.yul\":8441:8447   */\n  dup4\n    /* \"#utility.yul\":8438:8452   */\n  gt\n    /* \"#utility.yul\":8466:8467   */\n  0x01\n    /* \"#utility.yul\":8461:9079   */\n  dup2\n  eq\n  tag_150\n  jumpi\n    /* \"#utility.yul\":9123:9124   */\n  0x00\n    /* \"#utility.yul\":9140:9146   */\n  dup5\n    /* \"#utility.yul\":9137:9214   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":9189:9198   */\n  dup3\n    /* \"#utility.yul\":9184:9187   */\n  dup8\n    /* \"#utility.yul\":9180:9199   */\n  add\n    /* \"#utility.yul\":9174:9200   */\n  mload\n    /* \"#utility.yul\":9165:9200   */\n  swap1\n  pop\n    /* \"#utility.yul\":9137:9214   */\ntag_151:\n    /* \"#utility.yul\":9240:9307   */\n  tag_152\n    /* \"#utility.yul\":9300:9306   */\n  dup6\n    /* \"#utility.yul\":9293:9298   */\n  dup3\n    /* \"#utility.yul\":9240:9307   */\n  tag_48\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":9234:9238   */\n  dup7\n    /* \"#utility.yul\":9227:9308   */\n  sstore\n    /* \"#utility.yul\":9096:9318   */\n  pop\n    /* \"#utility.yul\":8431:9318   */\n  jump(tag_149)\n    /* \"#utility.yul\":8461:9079   */\ntag_150:\n    /* \"#utility.yul\":8513:8517   */\n  0x1f\n    /* \"#utility.yul\":8509:8518   */\n  not\n    /* \"#utility.yul\":8501:8507   */\n  dup5\n    /* \"#utility.yul\":8497:8519   */\n  and\n    /* \"#utility.yul\":8547:8584   */\n  tag_153\n    /* \"#utility.yul\":8579:8583   */\n  dup7\n    /* \"#utility.yul\":8547:8584   */\n  tag_33\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":8606:8607   */\n  0x00\n    /* \"#utility.yul\":8620:8828   */\ntag_154:\n    /* \"#utility.yul\":8634:8641   */\n  dup3\n    /* \"#utility.yul\":8631:8632   */\n  dup2\n    /* \"#utility.yul\":8628:8642   */\n  lt\n    /* \"#utility.yul\":8620:8828   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":8713:8722   */\n  dup5\n    /* \"#utility.yul\":8708:8711   */\n  dup10\n    /* \"#utility.yul\":8704:8723   */\n  add\n    /* \"#utility.yul\":8698:8724   */\n  mload\n    /* \"#utility.yul\":8690:8696   */\n  dup3\n    /* \"#utility.yul\":8683:8725   */\n  sstore\n    /* \"#utility.yul\":8764:8765   */\n  0x01\n    /* \"#utility.yul\":8756:8762   */\n  dup3\n    /* \"#utility.yul\":8752:8766   */\n  add\n    /* \"#utility.yul\":8742:8766   */\n  swap2\n  pop\n    /* \"#utility.yul\":8811:8813   */\n  0x20\n    /* \"#utility.yul\":8800:8809   */\n  dup6\n    /* \"#utility.yul\":8796:8814   */\n  add\n    /* \"#utility.yul\":8783:8814   */\n  swap5\n  pop\n    /* \"#utility.yul\":8657:8661   */\n  0x20\n    /* \"#utility.yul\":8654:8655   */\n  dup2\n    /* \"#utility.yul\":8650:8662   */\n  add\n    /* \"#utility.yul\":8645:8662   */\n  swap1\n  pop\n    /* \"#utility.yul\":8620:8828   */\n  jump(tag_154)\ntag_156:\n    /* \"#utility.yul\":8856:8862   */\n  dup7\n    /* \"#utility.yul\":8847:8854   */\n  dup4\n    /* \"#utility.yul\":8844:8863   */\n  lt\n    /* \"#utility.yul\":8841:9020   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":8914:8923   */\n  dup5\n    /* \"#utility.yul\":8909:8912   */\n  dup10\n    /* \"#utility.yul\":8905:8924   */\n  add\n    /* \"#utility.yul\":8899:8925   */\n  mload\n    /* \"#utility.yul\":8957:9005   */\n  tag_158\n    /* \"#utility.yul\":8999:9003   */\n  0x1f\n    /* \"#utility.yul\":8991:8997   */\n  dup10\n    /* \"#utility.yul\":8987:9004   */\n  and\n    /* \"#utility.yul\":8976:8985   */\n  dup3\n    /* \"#utility.yul\":8957:9005   */\n  tag_47\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":8949:8955   */\n  dup4\n    /* \"#utility.yul\":8942:9006   */\n  sstore\n    /* \"#utility.yul\":8864:9020   */\n  pop\n    /* \"#utility.yul\":8841:9020   */\ntag_157:\n    /* \"#utility.yul\":9066:9067   */\n  0x01\n    /* \"#utility.yul\":9062:9063   */\n  0x02\n    /* \"#utility.yul\":9054:9060   */\n  dup9\n    /* \"#utility.yul\":9050:9064   */\n  mul\n    /* \"#utility.yul\":9046:9068   */\n  add\n    /* \"#utility.yul\":9040:9044   */\n  dup9\n    /* \"#utility.yul\":9033:9069   */\n  sstore\n    /* \"#utility.yul\":8468:9079   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8431:9318   */\ntag_149:\n  pop\n    /* \"#utility.yul\":8021:9324   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7929:9324   */\n  pop\n  pop\n  jump\t// out\n    /* \"ERC4626.sol\":1004:5599  contract ERC4626 is ERC20, IERC4626 {... */\ntag_11:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x4ae1552e4350a80143205619d7f069de3ba42a477d4cde67254305b44836b3e5\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"ERC4626.sol\":1004:5599  contract ERC4626 is ERC20, IERC4626 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xba087652\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xce96cb77\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xce96cb77\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd905777e\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xef8b30f7\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0xba087652\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc63d75b6\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc6e6f592\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x94bf804d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb3d7f6b9\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb460af94\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x23b872dd\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x38d52e0f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x402d267d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4cdad506\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6e553f65\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x01e1d114\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x07a2d13a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0a28a477\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC4626.sol\":3641:3804  function totalAssets() public view virtual returns (uint256){... */\n    tag_3:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC4626.sol\":4190:4558  function convertToAssets(uint256 shares) public view virtual returns (uint256) {... */\n    tag_5:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC4626.sol\":4836:4964  function previewWithdraw(uint256 assets) public view virtual returns (uint256) {... */\n    tag_7:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_9:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC4626.sol\":1254:1359  function asset() public view virtual override returns (address) {... */\n    tag_11:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC4626.sol\":5106:5216  function maxDeposit(address) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC4626.sol\":4972:5098  function previewRedeem(uint256 shares) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC4626.sol\":1367:1817  function deposit(uint256 assets, address receiver) public virtual returns(uint256 shares) {... */\n    tag_14:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC4626.sol\":1827:2277  function mint(uint256 shares, address receiver) public virtual returns (uint256 assets) {... */\n    tag_16:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_17:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_18:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC4626.sol\":4704:4828  function previewMint(uint256 shares) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC4626.sol\":2287:2951  function withdraw(... */\n    tag_20:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC4626.sol\":2959:3631  function redeem(... */\n    tag_21:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC4626.sol\":5224:5331  function maxMint(address) public view virtual returns (uint256) {... */\n    tag_22:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC4626.sol\":3814:4182  function convertToShares(uint256 assets) public view virtual returns (uint256) {... */\n    tag_23:\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC4626.sol\":5339:5472  function maxWithdraw(address owner) public view virtual returns (uint256) {... */\n    tag_24:\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC4626.sol\":5480:5594  function maxRedeem(address owner) public view virtual returns (uint256) {... */\n    tag_25:\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_26:\n      tag_129\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      tag_132\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC4626.sol\":4569:4696  function previewDeposit(uint256 assets) public view virtual returns (uint256) {... */\n    tag_27:\n      tag_134\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC4626.sol\":3641:3804  function totalAssets() public view virtual returns (uint256){... */\n    tag_33:\n        /* \"ERC4626.sol\":3693:3700  uint256 */\n      0x00\n        /* \"ERC4626.sol\":3765:3771  _asset */\n      immutable(\"0x4ae1552e4350a80143205619d7f069de3ba42a477d4cde67254305b44836b3e5\")\n        /* \"ERC4626.sol\":3765:3781  _asset.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"ERC4626.sol\":3790:3794  this */\n      address\n        /* \"ERC4626.sol\":3765:3796  _asset.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_139:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"ERC4626.sol\":3758:3796  return _asset.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"ERC4626.sol\":3641:3804  function totalAssets() public view virtual returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_146\n      jump\t// in\n    tag_147:\n      dup1\n      iszero\n      tag_148\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_149\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_148)\n    tag_149:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_150:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_150\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC4626.sol\":4190:4558  function convertToAssets(uint256 shares) public view virtual returns (uint256) {... */\n    tag_43:\n        /* \"ERC4626.sol\":4260:4267  uint256 */\n      0x00\n        /* \"ERC4626.sol\":4326:4340  uint256 supply */\n      dup1\n        /* \"ERC4626.sol\":4343:4356  totalSupply() */\n      tag_152\n        /* \"ERC4626.sol\":4343:4354  totalSupply */\n      tag_56\n        /* \"ERC4626.sol\":4343:4356  totalSupply() */\n      jump\t// in\n    tag_152:\n        /* \"ERC4626.sol\":4326:4356  uint256 supply = totalSupply() */\n      swap1\n      pop\n        /* \"ERC4626.sol\":4506:4507  0 */\n      0x00\n        /* \"ERC4626.sol\":4496:4502  supply */\n      dup2\n        /* \"ERC4626.sol\":4496:4507  supply == 0 */\n      eq\n        /* \"ERC4626.sol\":4496:4550  supply == 0 ? shares : shares * totalAssets() / supply */\n      tag_153\n      jumpi\n        /* \"ERC4626.sol\":4544:4550  supply */\n      dup1\n        /* \"ERC4626.sol\":4528:4541  totalAssets() */\n      tag_154\n        /* \"ERC4626.sol\":4528:4539  totalAssets */\n      tag_33\n        /* \"ERC4626.sol\":4528:4541  totalAssets() */\n      jump\t// in\n    tag_154:\n        /* \"ERC4626.sol\":4519:4525  shares */\n      dup5\n        /* \"ERC4626.sol\":4519:4541  shares * totalAssets() */\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"ERC4626.sol\":4519:4550  shares * totalAssets() / supply */\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"ERC4626.sol\":4496:4550  supply == 0 ? shares : shares * totalAssets() / supply */\n      jump(tag_159)\n    tag_153:\n        /* \"ERC4626.sol\":4510:4516  shares */\n      dup3\n        /* \"ERC4626.sol\":4496:4550  supply == 0 ? shares : shares * totalAssets() / supply */\n    tag_159:\n        /* \"ERC4626.sol\":4489:4550  return supply == 0 ? shares : shares * totalAssets() / supply */\n      swap2\n      pop\n      pop\n        /* \"ERC4626.sol\":4190:4558  function convertToAssets(uint256 shares) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC4626.sol\":4836:4964  function previewWithdraw(uint256 assets) public view virtual returns (uint256) {... */\n    tag_53:\n        /* \"ERC4626.sol\":4906:4913  uint256 */\n      0x00\n        /* \"ERC4626.sol\":4933:4956  convertToShares(assets) */\n      tag_166\n        /* \"ERC4626.sol\":4949:4955  assets */\n      dup3\n        /* \"ERC4626.sol\":4933:4948  convertToShares */\n      tag_119\n        /* \"ERC4626.sol\":4933:4956  convertToShares(assets) */\n      jump\t// in\n    tag_166:\n        /* \"ERC4626.sol\":4926:4956  return convertToShares(assets) */\n      swap1\n      pop\n        /* \"ERC4626.sol\":4836:4964  function previewWithdraw(uint256 assets) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"ERC4626.sol\":1254:1359  function asset() public view virtual override returns (address) {... */\n    tag_68:\n        /* \"ERC4626.sol\":1309:1316  address */\n      0x00\n        /* \"ERC4626.sol\":1344:1350  _asset */\n      immutable(\"0x4ae1552e4350a80143205619d7f069de3ba42a477d4cde67254305b44836b3e5\")\n        /* \"ERC4626.sol\":1329:1351  return address(_asset) */\n      swap1\n      pop\n        /* \"ERC4626.sol\":1254:1359  function asset() public view virtual override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ERC4626.sol\":5106:5216  function maxDeposit(address) public view virtual returns (uint256) {... */\n    tag_74:\n        /* \"ERC4626.sol\":5164:5171  uint256 */\n      0x00\n        /* \"ERC4626.sol\":5191:5208  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"ERC4626.sol\":5184:5208  return type(uint256).max */\n      swap1\n      pop\n        /* \"ERC4626.sol\":5106:5216  function maxDeposit(address) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC4626.sol\":4972:5098  function previewRedeem(uint256 shares) public view virtual returns (uint256) {... */\n    tag_78:\n        /* \"ERC4626.sol\":5040:5047  uint256 */\n      0x00\n        /* \"ERC4626.sol\":5067:5090  convertToAssets(shares) */\n      tag_178\n        /* \"ERC4626.sol\":5083:5089  shares */\n      dup3\n        /* \"ERC4626.sol\":5067:5082  convertToAssets */\n      tag_43\n        /* \"ERC4626.sol\":5067:5090  convertToAssets(shares) */\n      jump\t// in\n    tag_178:\n        /* \"ERC4626.sol\":5060:5090  return convertToAssets(shares) */\n      swap1\n      pop\n        /* \"ERC4626.sol\":4972:5098  function previewRedeem(uint256 shares) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC4626.sol\":1367:1817  function deposit(uint256 assets, address receiver) public virtual returns(uint256 shares) {... */\n    tag_83:\n        /* \"ERC4626.sol\":1441:1455  uint256 shares */\n      0x00\n        /* \"ERC4626.sol\":1543:1565  previewDeposit(assets) */\n      tag_180\n        /* \"ERC4626.sol\":1558:1564  assets */\n      dup4\n        /* \"ERC4626.sol\":1543:1557  previewDeposit */\n      tag_136\n        /* \"ERC4626.sol\":1543:1565  previewDeposit(assets) */\n      jump\t// in\n    tag_180:\n        /* \"ERC4626.sol\":1534:1565  shares = previewDeposit(assets) */\n      swap1\n      pop\n        /* \"ERC4626.sol\":1622:1628  _asset */\n      immutable(\"0x4ae1552e4350a80143205619d7f069de3ba42a477d4cde67254305b44836b3e5\")\n        /* \"ERC4626.sol\":1622:1641  _asset.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"ERC4626.sol\":1642:1652  msg.sender */\n      caller\n        /* \"ERC4626.sol\":1662:1666  this */\n      address\n        /* \"ERC4626.sol\":1669:1675  assets */\n      dup7\n        /* \"ERC4626.sol\":1622:1676  _asset.transferFrom(msg.sender, address(this), assets) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_185\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      pop\n        /* \"ERC4626.sol\":1689:1712  _mint(receiver, shares) */\n      tag_187\n        /* \"ERC4626.sol\":1695:1703  receiver */\n      dup3\n        /* \"ERC4626.sol\":1705:1711  shares */\n      dup3\n        /* \"ERC4626.sol\":1689:1694  _mint */\n      tag_188\n        /* \"ERC4626.sol\":1689:1712  _mint(receiver, shares) */\n      jump\t// in\n    tag_187:\n        /* \"ERC4626.sol\":1782:1790  receiver */\n      dup2\n        /* \"ERC4626.sol\":1762:1807  Deposit(msg.sender, receiver, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC4626.sol\":1770:1780  msg.sender */\n      caller\n        /* \"ERC4626.sol\":1762:1807  Deposit(msg.sender, receiver, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7\n        /* \"ERC4626.sol\":1792:1798  assets */\n      dup6\n        /* \"ERC4626.sol\":1800:1806  shares */\n      dup5\n        /* \"ERC4626.sol\":1762:1807  Deposit(msg.sender, receiver, assets, shares) */\n      mload(0x40)\n      tag_189\n      swap3\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC4626.sol\":1367:1817  function deposit(uint256 assets, address receiver) public virtual returns(uint256 shares) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC4626.sol\":1827:2277  function mint(uint256 shares, address receiver) public virtual returns (uint256 assets) {... */\n    tag_91:\n        /* \"ERC4626.sol\":1899:1913  uint256 assets */\n      0x00\n        /* \"ERC4626.sol\":2006:2025  previewMint(shares) */\n      tag_193\n        /* \"ERC4626.sol\":2018:2024  shares */\n      dup4\n        /* \"ERC4626.sol\":2006:2017  previewMint */\n      tag_102\n        /* \"ERC4626.sol\":2006:2025  previewMint(shares) */\n      jump\t// in\n    tag_193:\n        /* \"ERC4626.sol\":1997:2025  assets = previewMint(shares) */\n      swap1\n      pop\n        /* \"ERC4626.sol\":2084:2090  _asset */\n      immutable(\"0x4ae1552e4350a80143205619d7f069de3ba42a477d4cde67254305b44836b3e5\")\n        /* \"ERC4626.sol\":2084:2103  _asset.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"ERC4626.sol\":2104:2114  msg.sender */\n      caller\n        /* \"ERC4626.sol\":2124:2128  this */\n      address\n        /* \"ERC4626.sol\":2131:2137  assets */\n      dup5\n        /* \"ERC4626.sol\":2084:2138  _asset.transferFrom(msg.sender, address(this), assets) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_194:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_196\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_196:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_197\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_197:\n      pop\n        /* \"ERC4626.sol\":2151:2174  _mint(receiver, shares) */\n      tag_198\n        /* \"ERC4626.sol\":2157:2165  receiver */\n      dup3\n        /* \"ERC4626.sol\":2167:2173  shares */\n      dup5\n        /* \"ERC4626.sol\":2151:2156  _mint */\n      tag_188\n        /* \"ERC4626.sol\":2151:2174  _mint(receiver, shares) */\n      jump\t// in\n    tag_198:\n        /* \"ERC4626.sol\":2244:2252  receiver */\n      dup2\n        /* \"ERC4626.sol\":2224:2269  Deposit(msg.sender, receiver, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC4626.sol\":2232:2242  msg.sender */\n      caller\n        /* \"ERC4626.sol\":2224:2269  Deposit(msg.sender, receiver, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7\n        /* \"ERC4626.sol\":2254:2260  assets */\n      dup4\n        /* \"ERC4626.sol\":2262:2268  shares */\n      dup7\n        /* \"ERC4626.sol\":2224:2269  Deposit(msg.sender, receiver, assets, shares) */\n      mload(0x40)\n      tag_199\n      swap3\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC4626.sol\":1827:2277  function mint(uint256 shares, address receiver) public virtual returns (uint256 assets) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_201\n      swap1\n      tag_146\n      jump\t// in\n    tag_201:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_202\n      swap1\n      tag_146\n      jump\t// in\n    tag_202:\n      dup1\n      iszero\n      tag_203\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_204\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_203)\n    tag_204:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_205:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_205\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_203:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC4626.sol\":4704:4828  function previewMint(uint256 shares) public view virtual returns (uint256) {... */\n    tag_102:\n        /* \"ERC4626.sol\":4770:4777  uint256 */\n      0x00\n        /* \"ERC4626.sol\":4797:4820  convertToAssets(shares) */\n      tag_210\n        /* \"ERC4626.sol\":4813:4819  shares */\n      dup3\n        /* \"ERC4626.sol\":4797:4812  convertToAssets */\n      tag_43\n        /* \"ERC4626.sol\":4797:4820  convertToAssets(shares) */\n      jump\t// in\n    tag_210:\n        /* \"ERC4626.sol\":4790:4820  return convertToAssets(shares) */\n      swap1\n      pop\n        /* \"ERC4626.sol\":4704:4828  function previewMint(uint256 shares) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC4626.sol\":2287:2951  function withdraw(... */\n    tag_107:\n        /* \"ERC4626.sol\":2412:2426  uint256 shares */\n      0x00\n        /* \"ERC4626.sol\":2516:2539  previewWithdraw(assets) */\n      tag_212\n        /* \"ERC4626.sol\":2532:2538  assets */\n      dup5\n        /* \"ERC4626.sol\":2516:2531  previewWithdraw */\n      tag_53\n        /* \"ERC4626.sol\":2516:2539  previewWithdraw(assets) */\n      jump\t// in\n    tag_212:\n        /* \"ERC4626.sol\":2507:2539  shares = previewWithdraw(assets) */\n      swap1\n      pop\n        /* \"ERC4626.sol\":2637:2642  owner */\n      dup2\n        /* \"ERC4626.sol\":2623:2642  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC4626.sol\":2623:2633  msg.sender */\n      caller\n        /* \"ERC4626.sol\":2623:2642  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC4626.sol\":2619:2713  if (msg.sender != owner) {... */\n      tag_213\n      jumpi\n        /* \"ERC4626.sol\":2659:2701  _spendAllowance(owner, msg.sender, shares) */\n      tag_214\n        /* \"ERC4626.sol\":2675:2680  owner */\n      dup3\n        /* \"ERC4626.sol\":2682:2692  msg.sender */\n      caller\n        /* \"ERC4626.sol\":2694:2700  shares */\n      dup4\n        /* \"ERC4626.sol\":2659:2674  _spendAllowance */\n      tag_171\n        /* \"ERC4626.sol\":2659:2701  _spendAllowance(owner, msg.sender, shares) */\n      jump\t// in\n    tag_214:\n        /* \"ERC4626.sol\":2619:2713  if (msg.sender != owner) {... */\n    tag_213:\n        /* \"ERC4626.sol\":2773:2793  _burn(owner, shares) */\n      tag_215\n        /* \"ERC4626.sol\":2779:2784  owner */\n      dup3\n        /* \"ERC4626.sol\":2786:2792  shares */\n      dup3\n        /* \"ERC4626.sol\":2773:2778  _burn */\n      tag_216\n        /* \"ERC4626.sol\":2773:2793  _burn(owner, shares) */\n      jump\t// in\n    tag_215:\n        /* \"ERC4626.sol\":2804:2810  _asset */\n      immutable(\"0x4ae1552e4350a80143205619d7f069de3ba42a477d4cde67254305b44836b3e5\")\n        /* \"ERC4626.sol\":2804:2819  _asset.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"ERC4626.sol\":2820:2828  receiver */\n      dup5\n        /* \"ERC4626.sol\":2830:2836  assets */\n      dup7\n        /* \"ERC4626.sol\":2804:2837  _asset.transfer(receiver, assets) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap3\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_220\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_220:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_221\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_221:\n      pop\n        /* \"ERC4626.sol\":2921:2926  owner */\n      dup2\n        /* \"ERC4626.sol\":2890:2943  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC4626.sol\":2911:2919  receiver */\n      dup4\n        /* \"ERC4626.sol\":2890:2943  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC4626.sol\":2899:2909  msg.sender */\n      caller\n        /* \"ERC4626.sol\":2890:2943  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db\n        /* \"ERC4626.sol\":2928:2934  assets */\n      dup8\n        /* \"ERC4626.sol\":2936:2942  shares */\n      dup6\n        /* \"ERC4626.sol\":2890:2943  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      mload(0x40)\n      tag_222\n      swap3\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC4626.sol\":2287:2951  function withdraw(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC4626.sol\":2959:3631  function redeem(... */\n    tag_111:\n        /* \"ERC4626.sol\":3082:3096  uint256 assets */\n      0x00\n        /* \"ERC4626.sol\":3190:3211  previewRedeem(shares) */\n      tag_224\n        /* \"ERC4626.sol\":3204:3210  shares */\n      dup5\n        /* \"ERC4626.sol\":3190:3203  previewRedeem */\n      tag_78\n        /* \"ERC4626.sol\":3190:3211  previewRedeem(shares) */\n      jump\t// in\n    tag_224:\n        /* \"ERC4626.sol\":3181:3211  assets = previewRedeem(shares) */\n      swap1\n      pop\n        /* \"ERC4626.sol\":3309:3314  owner */\n      dup2\n        /* \"ERC4626.sol\":3295:3314  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC4626.sol\":3295:3305  msg.sender */\n      caller\n        /* \"ERC4626.sol\":3295:3314  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC4626.sol\":3291:3385  if (msg.sender != owner) {... */\n      tag_225\n      jumpi\n        /* \"ERC4626.sol\":3331:3373  _spendAllowance(owner, msg.sender, shares) */\n      tag_226\n        /* \"ERC4626.sol\":3347:3352  owner */\n      dup3\n        /* \"ERC4626.sol\":3354:3364  msg.sender */\n      caller\n        /* \"ERC4626.sol\":3366:3372  shares */\n      dup7\n        /* \"ERC4626.sol\":3331:3346  _spendAllowance */\n      tag_171\n        /* \"ERC4626.sol\":3331:3373  _spendAllowance(owner, msg.sender, shares) */\n      jump\t// in\n    tag_226:\n        /* \"ERC4626.sol\":3291:3385  if (msg.sender != owner) {... */\n    tag_225:\n        /* \"ERC4626.sol\":3446:3466  _burn(owner, shares) */\n      tag_227\n        /* \"ERC4626.sol\":3452:3457  owner */\n      dup3\n        /* \"ERC4626.sol\":3459:3465  shares */\n      dup6\n        /* \"ERC4626.sol\":3446:3451  _burn */\n      tag_216\n        /* \"ERC4626.sol\":3446:3466  _burn(owner, shares) */\n      jump\t// in\n    tag_227:\n        /* \"ERC4626.sol\":3477:3483  _asset */\n      immutable(\"0x4ae1552e4350a80143205619d7f069de3ba42a477d4cde67254305b44836b3e5\")\n        /* \"ERC4626.sol\":3477:3492  _asset.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"ERC4626.sol\":3493:3501  receiver */\n      dup5\n        /* \"ERC4626.sol\":3503:3509  assets */\n      dup4\n        /* \"ERC4626.sol\":3477:3510  _asset.transfer(receiver, assets) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap3\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_228:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_230\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_230:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_231\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_231:\n      pop\n        /* \"ERC4626.sol\":3601:3606  owner */\n      dup2\n        /* \"ERC4626.sol\":3570:3623  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC4626.sol\":3591:3599  receiver */\n      dup4\n        /* \"ERC4626.sol\":3570:3623  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC4626.sol\":3579:3589  msg.sender */\n      caller\n        /* \"ERC4626.sol\":3570:3623  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db\n        /* \"ERC4626.sol\":3608:3614  assets */\n      dup5\n        /* \"ERC4626.sol\":3616:3622  shares */\n      dup9\n        /* \"ERC4626.sol\":3570:3623  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      mload(0x40)\n      tag_232\n      swap3\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC4626.sol\":2959:3631  function redeem(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC4626.sol\":5224:5331  function maxMint(address) public view virtual returns (uint256) {... */\n    tag_115:\n        /* \"ERC4626.sol\":5279:5286  uint256 */\n      0x00\n        /* \"ERC4626.sol\":5306:5323  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"ERC4626.sol\":5299:5323  return type(uint256).max */\n      swap1\n      pop\n        /* \"ERC4626.sol\":5224:5331  function maxMint(address) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC4626.sol\":3814:4182  function convertToShares(uint256 assets) public view virtual returns (uint256) {... */\n    tag_119:\n        /* \"ERC4626.sol\":3884:3891  uint256 */\n      0x00\n        /* \"ERC4626.sol\":3950:3964  uint256 supply */\n      dup1\n        /* \"ERC4626.sol\":3967:3980  totalSupply() */\n      tag_235\n        /* \"ERC4626.sol\":3967:3978  totalSupply */\n      tag_56\n        /* \"ERC4626.sol\":3967:3980  totalSupply() */\n      jump\t// in\n    tag_235:\n        /* \"ERC4626.sol\":3950:3980  uint256 supply = totalSupply() */\n      swap1\n      pop\n        /* \"ERC4626.sol\":4130:4131  0 */\n      0x00\n        /* \"ERC4626.sol\":4120:4126  supply */\n      dup2\n        /* \"ERC4626.sol\":4120:4131  supply == 0 */\n      eq\n        /* \"ERC4626.sol\":4120:4174  supply == 0 ? assets : assets * supply / totalAssets() */\n      tag_236\n      jumpi\n        /* \"ERC4626.sol\":4161:4174  totalAssets() */\n      tag_237\n        /* \"ERC4626.sol\":4161:4172  totalAssets */\n      tag_33\n        /* \"ERC4626.sol\":4161:4174  totalAssets() */\n      jump\t// in\n    tag_237:\n        /* \"ERC4626.sol\":4152:4158  supply */\n      dup2\n        /* \"ERC4626.sol\":4143:4149  assets */\n      dup5\n        /* \"ERC4626.sol\":4143:4158  assets * supply */\n      tag_238\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_238:\n        /* \"ERC4626.sol\":4143:4174  assets * supply / totalAssets() */\n      tag_239\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_239:\n        /* \"ERC4626.sol\":4120:4174  supply == 0 ? assets : assets * supply / totalAssets() */\n      jump(tag_240)\n    tag_236:\n        /* \"ERC4626.sol\":4134:4140  assets */\n      dup3\n        /* \"ERC4626.sol\":4120:4174  supply == 0 ? assets : assets * supply / totalAssets() */\n    tag_240:\n        /* \"ERC4626.sol\":4113:4174  return supply == 0 ? assets : assets * supply / totalAssets() */\n      swap2\n      pop\n      pop\n        /* \"ERC4626.sol\":3814:4182  function convertToShares(uint256 assets) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC4626.sol\":5339:5472  function maxWithdraw(address owner) public view virtual returns (uint256) {... */\n    tag_123:\n        /* \"ERC4626.sol\":5404:5411  uint256 */\n      0x00\n        /* \"ERC4626.sol\":5431:5464  convertToAssets(balanceOf(owner)) */\n      tag_242\n        /* \"ERC4626.sol\":5447:5463  balanceOf(owner) */\n      tag_243\n        /* \"ERC4626.sol\":5457:5462  owner */\n      dup4\n        /* \"ERC4626.sol\":5447:5456  balanceOf */\n      tag_87\n        /* \"ERC4626.sol\":5447:5463  balanceOf(owner) */\n      jump\t// in\n    tag_243:\n        /* \"ERC4626.sol\":5431:5446  convertToAssets */\n      tag_43\n        /* \"ERC4626.sol\":5431:5464  convertToAssets(balanceOf(owner)) */\n      jump\t// in\n    tag_242:\n        /* \"ERC4626.sol\":5424:5464  return convertToAssets(balanceOf(owner)) */\n      swap1\n      pop\n        /* \"ERC4626.sol\":5339:5472  function maxWithdraw(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC4626.sol\":5480:5594  function maxRedeem(address owner) public view virtual returns (uint256) {... */\n    tag_127:\n        /* \"ERC4626.sol\":5543:5550  uint256 */\n      0x00\n        /* \"ERC4626.sol\":5570:5586  balanceOf(owner) */\n      tag_245\n        /* \"ERC4626.sol\":5580:5585  owner */\n      dup3\n        /* \"ERC4626.sol\":5570:5579  balanceOf */\n      tag_87\n        /* \"ERC4626.sol\":5570:5586  balanceOf(owner) */\n      jump\t// in\n    tag_245:\n        /* \"ERC4626.sol\":5563:5586  return balanceOf(owner) */\n      swap1\n      pop\n        /* \"ERC4626.sol\":5480:5594  function maxRedeem(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC4626.sol\":4569:4696  function previewDeposit(uint256 assets) public view virtual returns (uint256) {... */\n    tag_136:\n        /* \"ERC4626.sol\":4638:4645  uint256 */\n      0x00\n        /* \"ERC4626.sol\":4665:4688  convertToShares(assets) */\n      tag_248\n        /* \"ERC4626.sol\":4681:4687  assets */\n      dup3\n        /* \"ERC4626.sol\":4665:4680  convertToShares */\n      tag_119\n        /* \"ERC4626.sol\":4665:4688  convertToShares(assets) */\n      jump\t// in\n    tag_248:\n        /* \"ERC4626.sol\":4658:4688  return convertToShares(assets) */\n      swap1\n      pop\n        /* \"ERC4626.sol\":4569:4696  function previewDeposit(uint256 assets) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_252\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_254\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_252\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_281\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_283\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_284\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_286)\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_289\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_290)\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_291\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_292:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_293:\n        /* \"#utility.yul\":177:201   */\n      tag_322\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_292\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_35:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_324\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_293\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:541   */\n    tag_294:\n        /* \"#utility.yul\":494:500   */\n      0x00\n        /* \"#utility.yul\":528:533   */\n      dup2\n        /* \"#utility.yul\":522:534   */\n      mload\n        /* \"#utility.yul\":512:534   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":547:716   */\n    tag_295:\n        /* \"#utility.yul\":631:642   */\n      0x00\n        /* \"#utility.yul\":665:671   */\n      dup3\n        /* \"#utility.yul\":660:663   */\n      dup3\n        /* \"#utility.yul\":653:672   */\n      mstore\n        /* \"#utility.yul\":705:709   */\n      0x20\n        /* \"#utility.yul\":700:703   */\n      dup3\n        /* \"#utility.yul\":696:710   */\n      add\n        /* \"#utility.yul\":681:710   */\n      swap1\n      pop\n        /* \"#utility.yul\":547:716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":722:861   */\n    tag_296:\n        /* \"#utility.yul\":811:817   */\n      dup3\n        /* \"#utility.yul\":806:809   */\n      dup2\n        /* \"#utility.yul\":801:804   */\n      dup4\n        /* \"#utility.yul\":795:818   */\n      mcopy\n        /* \"#utility.yul\":852:853   */\n      0x00\n        /* \"#utility.yul\":843:849   */\n      dup4\n        /* \"#utility.yul\":838:841   */\n      dup4\n        /* \"#utility.yul\":834:850   */\n      add\n        /* \"#utility.yul\":827:854   */\n      mstore\n        /* \"#utility.yul\":722:861   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":867:969   */\n    tag_297:\n        /* \"#utility.yul\":908:914   */\n      0x00\n        /* \"#utility.yul\":959:961   */\n      0x1f\n        /* \"#utility.yul\":955:962   */\n      not\n        /* \"#utility.yul\":950:952   */\n      0x1f\n        /* \"#utility.yul\":943:948   */\n      dup4\n        /* \"#utility.yul\":939:953   */\n      add\n        /* \"#utility.yul\":935:963   */\n      and\n        /* \"#utility.yul\":925:963   */\n      swap1\n      pop\n        /* \"#utility.yul\":867:969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":975:1352   */\n    tag_298:\n        /* \"#utility.yul\":1063:1066   */\n      0x00\n        /* \"#utility.yul\":1091:1130   */\n      tag_330\n        /* \"#utility.yul\":1124:1129   */\n      dup3\n        /* \"#utility.yul\":1091:1130   */\n      tag_294\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1146:1217   */\n      tag_331\n        /* \"#utility.yul\":1210:1216   */\n      dup2\n        /* \"#utility.yul\":1205:1208   */\n      dup6\n        /* \"#utility.yul\":1146:1217   */\n      tag_295\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":1139:1217   */\n      swap4\n      pop\n        /* \"#utility.yul\":1226:1291   */\n      tag_332\n        /* \"#utility.yul\":1284:1290   */\n      dup2\n        /* \"#utility.yul\":1279:1282   */\n      dup6\n        /* \"#utility.yul\":1272:1276   */\n      0x20\n        /* \"#utility.yul\":1265:1270   */\n      dup7\n        /* \"#utility.yul\":1261:1277   */\n      add\n        /* \"#utility.yul\":1226:1291   */\n      tag_296\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":1316:1345   */\n      tag_333\n        /* \"#utility.yul\":1338:1344   */\n      dup2\n        /* \"#utility.yul\":1316:1345   */\n      tag_297\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":1311:1314   */\n      dup5\n        /* \"#utility.yul\":1307:1346   */\n      add\n        /* \"#utility.yul\":1300:1346   */\n      swap2\n      pop\n        /* \"#utility.yul\":1067:1352   */\n      pop\n        /* \"#utility.yul\":975:1352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1358:1671   */\n    tag_39:\n        /* \"#utility.yul\":1471:1475   */\n      0x00\n        /* \"#utility.yul\":1509:1511   */\n      0x20\n        /* \"#utility.yul\":1498:1507   */\n      dup3\n        /* \"#utility.yul\":1494:1512   */\n      add\n        /* \"#utility.yul\":1486:1512   */\n      swap1\n      pop\n        /* \"#utility.yul\":1558:1567   */\n      dup2\n        /* \"#utility.yul\":1552:1556   */\n      dup2\n        /* \"#utility.yul\":1548:1568   */\n      sub\n        /* \"#utility.yul\":1544:1545   */\n      0x00\n        /* \"#utility.yul\":1533:1542   */\n      dup4\n        /* \"#utility.yul\":1529:1546   */\n      add\n        /* \"#utility.yul\":1522:1569   */\n      mstore\n        /* \"#utility.yul\":1586:1664   */\n      tag_335\n        /* \"#utility.yul\":1659:1663   */\n      dup2\n        /* \"#utility.yul\":1650:1656   */\n      dup5\n        /* \"#utility.yul\":1586:1664   */\n      tag_298\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":1578:1664   */\n      swap1\n      pop\n        /* \"#utility.yul\":1358:1671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1758:1875   */\n    tag_300:\n        /* \"#utility.yul\":1867:1868   */\n      0x00\n        /* \"#utility.yul\":1864:1865   */\n      dup1\n        /* \"#utility.yul\":1857:1869   */\n      revert\n        /* \"#utility.yul\":2004:2126   */\n    tag_302:\n        /* \"#utility.yul\":2077:2101   */\n      tag_340\n        /* \"#utility.yul\":2095:2100   */\n      dup2\n        /* \"#utility.yul\":2077:2101   */\n      tag_292\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":2070:2075   */\n      dup2\n        /* \"#utility.yul\":2067:2102   */\n      eq\n        /* \"#utility.yul\":2057:2120   */\n      tag_341\n      jumpi\n        /* \"#utility.yul\":2116:2117   */\n      0x00\n        /* \"#utility.yul\":2113:2114   */\n      dup1\n        /* \"#utility.yul\":2106:2118   */\n      revert\n        /* \"#utility.yul\":2057:2120   */\n    tag_341:\n        /* \"#utility.yul\":2004:2126   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2132:2271   */\n    tag_303:\n        /* \"#utility.yul\":2178:2183   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup2\n        /* \"#utility.yul\":2203:2223   */\n      calldataload\n        /* \"#utility.yul\":2194:2223   */\n      swap1\n      pop\n        /* \"#utility.yul\":2232:2265   */\n      tag_343\n        /* \"#utility.yul\":2259:2264   */\n      dup2\n        /* \"#utility.yul\":2232:2265   */\n      tag_302\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2132:2271   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2277:2606   */\n    tag_42:\n        /* \"#utility.yul\":2336:2342   */\n      0x00\n        /* \"#utility.yul\":2385:2387   */\n      0x20\n        /* \"#utility.yul\":2373:2382   */\n      dup3\n        /* \"#utility.yul\":2364:2371   */\n      dup5\n        /* \"#utility.yul\":2360:2383   */\n      sub\n        /* \"#utility.yul\":2356:2388   */\n      slt\n        /* \"#utility.yul\":2353:2472   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":2391:2470   */\n      tag_346\n      tag_300\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2353:2472   */\n    tag_345:\n        /* \"#utility.yul\":2511:2512   */\n      0x00\n        /* \"#utility.yul\":2536:2589   */\n      tag_347\n        /* \"#utility.yul\":2581:2588   */\n      dup5\n        /* \"#utility.yul\":2572:2578   */\n      dup3\n        /* \"#utility.yul\":2561:2570   */\n      dup6\n        /* \"#utility.yul\":2557:2579   */\n      add\n        /* \"#utility.yul\":2536:2589   */\n      tag_303\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":2526:2589   */\n      swap2\n      pop\n        /* \"#utility.yul\":2482:2599   */\n      pop\n        /* \"#utility.yul\":2277:2606   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2612:2738   */\n    tag_304:\n        /* \"#utility.yul\":2649:2656   */\n      0x00\n        /* \"#utility.yul\":2689:2731   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2682:2687   */\n      dup3\n        /* \"#utility.yul\":2678:2732   */\n      and\n        /* \"#utility.yul\":2667:2732   */\n      swap1\n      pop\n        /* \"#utility.yul\":2612:2738   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2744:2840   */\n    tag_305:\n        /* \"#utility.yul\":2781:2788   */\n      0x00\n        /* \"#utility.yul\":2810:2834   */\n      tag_350\n        /* \"#utility.yul\":2828:2833   */\n      dup3\n        /* \"#utility.yul\":2810:2834   */\n      tag_304\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":2799:2834   */\n      swap1\n      pop\n        /* \"#utility.yul\":2744:2840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2846:2968   */\n    tag_306:\n        /* \"#utility.yul\":2919:2943   */\n      tag_352\n        /* \"#utility.yul\":2937:2942   */\n      dup2\n        /* \"#utility.yul\":2919:2943   */\n      tag_305\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":2912:2917   */\n      dup2\n        /* \"#utility.yul\":2909:2944   */\n      eq\n        /* \"#utility.yul\":2899:2962   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":2958:2959   */\n      0x00\n        /* \"#utility.yul\":2955:2956   */\n      dup1\n        /* \"#utility.yul\":2948:2960   */\n      revert\n        /* \"#utility.yul\":2899:2962   */\n    tag_353:\n        /* \"#utility.yul\":2846:2968   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2974:3113   */\n    tag_307:\n        /* \"#utility.yul\":3020:3025   */\n      0x00\n        /* \"#utility.yul\":3058:3064   */\n      dup2\n        /* \"#utility.yul\":3045:3065   */\n      calldataload\n        /* \"#utility.yul\":3036:3065   */\n      swap1\n      pop\n        /* \"#utility.yul\":3074:3107   */\n      tag_355\n        /* \"#utility.yul\":3101:3106   */\n      dup2\n        /* \"#utility.yul\":3074:3107   */\n      tag_306\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":2974:3113   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3119:3593   */\n    tag_47:\n        /* \"#utility.yul\":3187:3193   */\n      0x00\n        /* \"#utility.yul\":3195:3201   */\n      dup1\n        /* \"#utility.yul\":3244:3246   */\n      0x40\n        /* \"#utility.yul\":3232:3241   */\n      dup4\n        /* \"#utility.yul\":3223:3230   */\n      dup6\n        /* \"#utility.yul\":3219:3242   */\n      sub\n        /* \"#utility.yul\":3215:3247   */\n      slt\n        /* \"#utility.yul\":3212:3331   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":3250:3329   */\n      tag_358\n      tag_300\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":3212:3331   */\n    tag_357:\n        /* \"#utility.yul\":3370:3371   */\n      0x00\n        /* \"#utility.yul\":3395:3448   */\n      tag_359\n        /* \"#utility.yul\":3440:3447   */\n      dup6\n        /* \"#utility.yul\":3431:3437   */\n      dup3\n        /* \"#utility.yul\":3420:3429   */\n      dup7\n        /* \"#utility.yul\":3416:3438   */\n      add\n        /* \"#utility.yul\":3395:3448   */\n      tag_307\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":3385:3448   */\n      swap3\n      pop\n        /* \"#utility.yul\":3341:3458   */\n      pop\n        /* \"#utility.yul\":3497:3499   */\n      0x20\n        /* \"#utility.yul\":3523:3576   */\n      tag_360\n        /* \"#utility.yul\":3568:3575   */\n      dup6\n        /* \"#utility.yul\":3559:3565   */\n      dup3\n        /* \"#utility.yul\":3548:3557   */\n      dup7\n        /* \"#utility.yul\":3544:3566   */\n      add\n        /* \"#utility.yul\":3523:3576   */\n      tag_303\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":3513:3576   */\n      swap2\n      pop\n        /* \"#utility.yul\":3468:3586   */\n      pop\n        /* \"#utility.yul\":3119:3593   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3599:3689   */\n    tag_308:\n        /* \"#utility.yul\":3633:3640   */\n      0x00\n        /* \"#utility.yul\":3676:3681   */\n      dup2\n        /* \"#utility.yul\":3669:3682   */\n      iszero\n        /* \"#utility.yul\":3662:3683   */\n      iszero\n        /* \"#utility.yul\":3651:3683   */\n      swap1\n      pop\n        /* \"#utility.yul\":3599:3689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3695:3804   */\n    tag_309:\n        /* \"#utility.yul\":3776:3797   */\n      tag_363\n        /* \"#utility.yul\":3791:3796   */\n      dup2\n        /* \"#utility.yul\":3776:3797   */\n      tag_308\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3771:3774   */\n      dup3\n        /* \"#utility.yul\":3764:3798   */\n      mstore\n        /* \"#utility.yul\":3695:3804   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3810:4020   */\n    tag_50:\n        /* \"#utility.yul\":3897:3901   */\n      0x00\n        /* \"#utility.yul\":3935:3937   */\n      0x20\n        /* \"#utility.yul\":3924:3933   */\n      dup3\n        /* \"#utility.yul\":3920:3938   */\n      add\n        /* \"#utility.yul\":3912:3938   */\n      swap1\n      pop\n        /* \"#utility.yul\":3948:4013   */\n      tag_365\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":3999:4008   */\n      dup4\n        /* \"#utility.yul\":3995:4012   */\n      add\n        /* \"#utility.yul\":3986:3992   */\n      dup5\n        /* \"#utility.yul\":3948:4013   */\n      tag_309\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":3810:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4645   */\n    tag_60:\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      dup1\n        /* \"#utility.yul\":4119:4125   */\n      0x00\n        /* \"#utility.yul\":4168:4170   */\n      0x60\n        /* \"#utility.yul\":4156:4165   */\n      dup5\n        /* \"#utility.yul\":4147:4154   */\n      dup7\n        /* \"#utility.yul\":4143:4166   */\n      sub\n        /* \"#utility.yul\":4139:4171   */\n      slt\n        /* \"#utility.yul\":4136:4255   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":4174:4253   */\n      tag_368\n      tag_300\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":4136:4255   */\n    tag_367:\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4319:4372   */\n      tag_369\n        /* \"#utility.yul\":4364:4371   */\n      dup7\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4344:4353   */\n      dup8\n        /* \"#utility.yul\":4340:4362   */\n      add\n        /* \"#utility.yul\":4319:4372   */\n      tag_307\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4309:4372   */\n      swap4\n      pop\n        /* \"#utility.yul\":4265:4382   */\n      pop\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"#utility.yul\":4447:4500   */\n      tag_370\n        /* \"#utility.yul\":4492:4499   */\n      dup7\n        /* \"#utility.yul\":4483:4489   */\n      dup3\n        /* \"#utility.yul\":4472:4481   */\n      dup8\n        /* \"#utility.yul\":4468:4490   */\n      add\n        /* \"#utility.yul\":4447:4500   */\n      tag_307\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":4437:4500   */\n      swap3\n      pop\n        /* \"#utility.yul\":4392:4510   */\n      pop\n        /* \"#utility.yul\":4549:4551   */\n      0x40\n        /* \"#utility.yul\":4575:4628   */\n      tag_371\n        /* \"#utility.yul\":4620:4627   */\n      dup7\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup8\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_303\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4520:4638   */\n      pop\n        /* \"#utility.yul\":4026:4645   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_310:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_311:\n        /* \"#utility.yul\":4826:4848   */\n      tag_374\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_310\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_66:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_376\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_311\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_312:\n        /* \"#utility.yul\":5168:5192   */\n      tag_378\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_305\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_70:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_380\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_312\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5762   */\n    tag_73:\n        /* \"#utility.yul\":5492:5498   */\n      0x00\n        /* \"#utility.yul\":5541:5543   */\n      0x20\n        /* \"#utility.yul\":5529:5538   */\n      dup3\n        /* \"#utility.yul\":5520:5527   */\n      dup5\n        /* \"#utility.yul\":5516:5539   */\n      sub\n        /* \"#utility.yul\":5512:5544   */\n      slt\n        /* \"#utility.yul\":5509:5628   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":5547:5626   */\n      tag_383\n      tag_300\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":5509:5628   */\n    tag_382:\n        /* \"#utility.yul\":5667:5668   */\n      0x00\n        /* \"#utility.yul\":5692:5745   */\n      tag_384\n        /* \"#utility.yul\":5737:5744   */\n      dup5\n        /* \"#utility.yul\":5728:5734   */\n      dup3\n        /* \"#utility.yul\":5717:5726   */\n      dup6\n        /* \"#utility.yul\":5713:5735   */\n      add\n        /* \"#utility.yul\":5692:5745   */\n      tag_307\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":5682:5745   */\n      swap2\n      pop\n        /* \"#utility.yul\":5638:5755   */\n      pop\n        /* \"#utility.yul\":5433:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_82:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      dup1\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_387\n      tag_300\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":5861:5980   */\n    tag_386:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_388\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_303\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_389\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_307\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6867   */\n    tag_106:\n        /* \"#utility.yul\":6325:6331   */\n      0x00\n        /* \"#utility.yul\":6333:6339   */\n      dup1\n        /* \"#utility.yul\":6341:6347   */\n      0x00\n        /* \"#utility.yul\":6390:6392   */\n      0x60\n        /* \"#utility.yul\":6378:6387   */\n      dup5\n        /* \"#utility.yul\":6369:6376   */\n      dup7\n        /* \"#utility.yul\":6365:6388   */\n      sub\n        /* \"#utility.yul\":6361:6393   */\n      slt\n        /* \"#utility.yul\":6358:6477   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":6396:6475   */\n      tag_392\n      tag_300\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":6358:6477   */\n    tag_391:\n        /* \"#utility.yul\":6516:6517   */\n      0x00\n        /* \"#utility.yul\":6541:6594   */\n      tag_393\n        /* \"#utility.yul\":6586:6593   */\n      dup7\n        /* \"#utility.yul\":6577:6583   */\n      dup3\n        /* \"#utility.yul\":6566:6575   */\n      dup8\n        /* \"#utility.yul\":6562:6584   */\n      add\n        /* \"#utility.yul\":6541:6594   */\n      tag_303\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":6531:6594   */\n      swap4\n      pop\n        /* \"#utility.yul\":6487:6604   */\n      pop\n        /* \"#utility.yul\":6643:6645   */\n      0x20\n        /* \"#utility.yul\":6669:6722   */\n      tag_394\n        /* \"#utility.yul\":6714:6721   */\n      dup7\n        /* \"#utility.yul\":6705:6711   */\n      dup3\n        /* \"#utility.yul\":6694:6703   */\n      dup8\n        /* \"#utility.yul\":6690:6712   */\n      add\n        /* \"#utility.yul\":6669:6722   */\n      tag_307\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":6659:6722   */\n      swap3\n      pop\n        /* \"#utility.yul\":6614:6732   */\n      pop\n        /* \"#utility.yul\":6771:6773   */\n      0x40\n        /* \"#utility.yul\":6797:6850   */\n      tag_395\n        /* \"#utility.yul\":6842:6849   */\n      dup7\n        /* \"#utility.yul\":6833:6839   */\n      dup3\n        /* \"#utility.yul\":6822:6831   */\n      dup8\n        /* \"#utility.yul\":6818:6840   */\n      add\n        /* \"#utility.yul\":6797:6850   */\n      tag_307\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":6787:6850   */\n      swap2\n      pop\n        /* \"#utility.yul\":6742:6860   */\n      pop\n        /* \"#utility.yul\":6248:6867   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6873:7347   */\n    tag_131:\n        /* \"#utility.yul\":6941:6947   */\n      0x00\n        /* \"#utility.yul\":6949:6955   */\n      dup1\n        /* \"#utility.yul\":6998:7000   */\n      0x40\n        /* \"#utility.yul\":6986:6995   */\n      dup4\n        /* \"#utility.yul\":6977:6984   */\n      dup6\n        /* \"#utility.yul\":6973:6996   */\n      sub\n        /* \"#utility.yul\":6969:7001   */\n      slt\n        /* \"#utility.yul\":6966:7085   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":7004:7083   */\n      tag_398\n      tag_300\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":6966:7085   */\n    tag_397:\n        /* \"#utility.yul\":7124:7125   */\n      0x00\n        /* \"#utility.yul\":7149:7202   */\n      tag_399\n        /* \"#utility.yul\":7194:7201   */\n      dup6\n        /* \"#utility.yul\":7185:7191   */\n      dup3\n        /* \"#utility.yul\":7174:7183   */\n      dup7\n        /* \"#utility.yul\":7170:7192   */\n      add\n        /* \"#utility.yul\":7149:7202   */\n      tag_307\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":7139:7202   */\n      swap3\n      pop\n        /* \"#utility.yul\":7095:7212   */\n      pop\n        /* \"#utility.yul\":7251:7253   */\n      0x20\n        /* \"#utility.yul\":7277:7330   */\n      tag_400\n        /* \"#utility.yul\":7322:7329   */\n      dup6\n        /* \"#utility.yul\":7313:7319   */\n      dup3\n        /* \"#utility.yul\":7302:7311   */\n      dup7\n        /* \"#utility.yul\":7298:7320   */\n      add\n        /* \"#utility.yul\":7277:7330   */\n      tag_307\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":7267:7330   */\n      swap2\n      pop\n        /* \"#utility.yul\":7222:7340   */\n      pop\n        /* \"#utility.yul\":6873:7347   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7353:7496   */\n    tag_313:\n        /* \"#utility.yul\":7410:7415   */\n      0x00\n        /* \"#utility.yul\":7441:7447   */\n      dup2\n        /* \"#utility.yul\":7435:7448   */\n      mload\n        /* \"#utility.yul\":7426:7448   */\n      swap1\n      pop\n        /* \"#utility.yul\":7457:7490   */\n      tag_402\n        /* \"#utility.yul\":7484:7489   */\n      dup2\n        /* \"#utility.yul\":7457:7490   */\n      tag_302\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":7353:7496   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7502:7853   */\n    tag_143:\n        /* \"#utility.yul\":7572:7578   */\n      0x00\n        /* \"#utility.yul\":7621:7623   */\n      0x20\n        /* \"#utility.yul\":7609:7618   */\n      dup3\n        /* \"#utility.yul\":7600:7607   */\n      dup5\n        /* \"#utility.yul\":7596:7619   */\n      sub\n        /* \"#utility.yul\":7592:7624   */\n      slt\n        /* \"#utility.yul\":7589:7708   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":7627:7706   */\n      tag_405\n      tag_300\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":7589:7708   */\n    tag_404:\n        /* \"#utility.yul\":7747:7748   */\n      0x00\n        /* \"#utility.yul\":7772:7836   */\n      tag_406\n        /* \"#utility.yul\":7828:7835   */\n      dup5\n        /* \"#utility.yul\":7819:7825   */\n      dup3\n        /* \"#utility.yul\":7808:7817   */\n      dup6\n        /* \"#utility.yul\":7804:7826   */\n      add\n        /* \"#utility.yul\":7772:7836   */\n      tag_313\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":7762:7836   */\n      swap2\n      pop\n        /* \"#utility.yul\":7718:7846   */\n      pop\n        /* \"#utility.yul\":7502:7853   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7859:8039   */\n    tag_314:\n        /* \"#utility.yul\":7907:7984   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7904:7905   */\n      0x00\n        /* \"#utility.yul\":7897:7985   */\n      mstore\n        /* \"#utility.yul\":8004:8008   */\n      0x22\n        /* \"#utility.yul\":8001:8002   */\n      0x04\n        /* \"#utility.yul\":7994:8009   */\n      mstore\n        /* \"#utility.yul\":8028:8032   */\n      0x24\n        /* \"#utility.yul\":8025:8026   */\n      0x00\n        /* \"#utility.yul\":8018:8033   */\n      revert\n        /* \"#utility.yul\":8045:8365   */\n    tag_146:\n        /* \"#utility.yul\":8089:8095   */\n      0x00\n        /* \"#utility.yul\":8126:8127   */\n      0x02\n        /* \"#utility.yul\":8120:8124   */\n      dup3\n        /* \"#utility.yul\":8116:8128   */\n      div\n        /* \"#utility.yul\":8106:8128   */\n      swap1\n      pop\n        /* \"#utility.yul\":8173:8174   */\n      0x01\n        /* \"#utility.yul\":8167:8171   */\n      dup3\n        /* \"#utility.yul\":8163:8175   */\n      and\n        /* \"#utility.yul\":8194:8212   */\n      dup1\n        /* \"#utility.yul\":8184:8265   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":8250:8254   */\n      0x7f\n        /* \"#utility.yul\":8242:8248   */\n      dup3\n        /* \"#utility.yul\":8238:8255   */\n      and\n        /* \"#utility.yul\":8228:8255   */\n      swap2\n      pop\n        /* \"#utility.yul\":8184:8265   */\n    tag_409:\n        /* \"#utility.yul\":8312:8314   */\n      0x20\n        /* \"#utility.yul\":8304:8310   */\n      dup3\n        /* \"#utility.yul\":8301:8315   */\n      lt\n        /* \"#utility.yul\":8281:8299   */\n      dup2\n        /* \"#utility.yul\":8278:8316   */\n      sub\n        /* \"#utility.yul\":8275:8359   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":8331:8349   */\n      tag_411\n      tag_314\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":8275:8359   */\n    tag_410:\n        /* \"#utility.yul\":8096:8365   */\n      pop\n        /* \"#utility.yul\":8045:8365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8371:8551   */\n    tag_315:\n        /* \"#utility.yul\":8419:8496   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8416:8417   */\n      0x00\n        /* \"#utility.yul\":8409:8497   */\n      mstore\n        /* \"#utility.yul\":8516:8520   */\n      0x11\n        /* \"#utility.yul\":8513:8514   */\n      0x04\n        /* \"#utility.yul\":8506:8521   */\n      mstore\n        /* \"#utility.yul\":8540:8544   */\n      0x24\n        /* \"#utility.yul\":8537:8538   */\n      0x00\n        /* \"#utility.yul\":8530:8545   */\n      revert\n        /* \"#utility.yul\":8557:8967   */\n    tag_156:\n        /* \"#utility.yul\":8597:8604   */\n      0x00\n        /* \"#utility.yul\":8620:8640   */\n      tag_414\n        /* \"#utility.yul\":8638:8639   */\n      dup3\n        /* \"#utility.yul\":8620:8640   */\n      tag_292\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":8615:8640   */\n      swap2\n      pop\n        /* \"#utility.yul\":8654:8674   */\n      tag_415\n        /* \"#utility.yul\":8672:8673   */\n      dup4\n        /* \"#utility.yul\":8654:8674   */\n      tag_292\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":8649:8674   */\n      swap3\n      pop\n        /* \"#utility.yul\":8709:8710   */\n      dup3\n        /* \"#utility.yul\":8706:8707   */\n      dup3\n        /* \"#utility.yul\":8702:8711   */\n      mul\n        /* \"#utility.yul\":8731:8761   */\n      tag_416\n        /* \"#utility.yul\":8749:8760   */\n      dup2\n        /* \"#utility.yul\":8731:8761   */\n      tag_292\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":8720:8761   */\n      swap2\n      pop\n        /* \"#utility.yul\":8910:8911   */\n      dup3\n        /* \"#utility.yul\":8901:8908   */\n      dup3\n        /* \"#utility.yul\":8897:8912   */\n      div\n        /* \"#utility.yul\":8894:8895   */\n      dup5\n        /* \"#utility.yul\":8891:8913   */\n      eq\n        /* \"#utility.yul\":8871:8872   */\n      dup4\n        /* \"#utility.yul\":8864:8873   */\n      iszero\n        /* \"#utility.yul\":8844:8927   */\n      or\n        /* \"#utility.yul\":8821:8960   */\n      tag_417\n      jumpi\n        /* \"#utility.yul\":8940:8958   */\n      tag_418\n      tag_315\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8821:8960   */\n    tag_417:\n        /* \"#utility.yul\":8605:8967   */\n      pop\n        /* \"#utility.yul\":8557:8967   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8973:9153   */\n    tag_316:\n        /* \"#utility.yul\":9021:9098   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9018:9019   */\n      0x00\n        /* \"#utility.yul\":9011:9099   */\n      mstore\n        /* \"#utility.yul\":9118:9122   */\n      0x12\n        /* \"#utility.yul\":9115:9116   */\n      0x04\n        /* \"#utility.yul\":9108:9123   */\n      mstore\n        /* \"#utility.yul\":9142:9146   */\n      0x24\n        /* \"#utility.yul\":9139:9140   */\n      0x00\n        /* \"#utility.yul\":9132:9147   */\n      revert\n        /* \"#utility.yul\":9159:9344   */\n    tag_158:\n        /* \"#utility.yul\":9199:9200   */\n      0x00\n        /* \"#utility.yul\":9216:9236   */\n      tag_421\n        /* \"#utility.yul\":9234:9235   */\n      dup3\n        /* \"#utility.yul\":9216:9236   */\n      tag_292\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":9211:9236   */\n      swap2\n      pop\n        /* \"#utility.yul\":9250:9270   */\n      tag_422\n        /* \"#utility.yul\":9268:9269   */\n      dup4\n        /* \"#utility.yul\":9250:9270   */\n      tag_292\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":9245:9270   */\n      swap3\n      pop\n        /* \"#utility.yul\":9289:9290   */\n      dup3\n        /* \"#utility.yul\":9279:9314   */\n      tag_423\n      jumpi\n        /* \"#utility.yul\":9294:9312   */\n      tag_424\n      tag_316\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":9279:9314   */\n    tag_423:\n        /* \"#utility.yul\":9336:9337   */\n      dup3\n        /* \"#utility.yul\":9333:9334   */\n      dup3\n        /* \"#utility.yul\":9329:9338   */\n      div\n        /* \"#utility.yul\":9324:9338   */\n      swap1\n      pop\n        /* \"#utility.yul\":9159:9344   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9350:9792   */\n    tag_182:\n        /* \"#utility.yul\":9499:9503   */\n      0x00\n        /* \"#utility.yul\":9537:9539   */\n      0x60\n        /* \"#utility.yul\":9526:9535   */\n      dup3\n        /* \"#utility.yul\":9522:9540   */\n      add\n        /* \"#utility.yul\":9514:9540   */\n      swap1\n      pop\n        /* \"#utility.yul\":9550:9621   */\n      tag_426\n        /* \"#utility.yul\":9618:9619   */\n      0x00\n        /* \"#utility.yul\":9607:9616   */\n      dup4\n        /* \"#utility.yul\":9603:9620   */\n      add\n        /* \"#utility.yul\":9594:9600   */\n      dup7\n        /* \"#utility.yul\":9550:9621   */\n      tag_312\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":9631:9703   */\n      tag_427\n        /* \"#utility.yul\":9699:9701   */\n      0x20\n        /* \"#utility.yul\":9688:9697   */\n      dup4\n        /* \"#utility.yul\":9684:9702   */\n      add\n        /* \"#utility.yul\":9675:9681   */\n      dup6\n        /* \"#utility.yul\":9631:9703   */\n      tag_312\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":9713:9785   */\n      tag_428\n        /* \"#utility.yul\":9781:9783   */\n      0x40\n        /* \"#utility.yul\":9770:9779   */\n      dup4\n        /* \"#utility.yul\":9766:9784   */\n      add\n        /* \"#utility.yul\":9757:9763   */\n      dup5\n        /* \"#utility.yul\":9713:9785   */\n      tag_293\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":9350:9792   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9798:9914   */\n    tag_317:\n        /* \"#utility.yul\":9868:9889   */\n      tag_430\n        /* \"#utility.yul\":9883:9888   */\n      dup2\n        /* \"#utility.yul\":9868:9889   */\n      tag_308\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9861:9866   */\n      dup2\n        /* \"#utility.yul\":9858:9890   */\n      eq\n        /* \"#utility.yul\":9848:9908   */\n      tag_431\n      jumpi\n        /* \"#utility.yul\":9904:9905   */\n      0x00\n        /* \"#utility.yul\":9901:9902   */\n      dup1\n        /* \"#utility.yul\":9894:9906   */\n      revert\n        /* \"#utility.yul\":9848:9908   */\n    tag_431:\n        /* \"#utility.yul\":9798:9914   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9920:10057   */\n    tag_318:\n        /* \"#utility.yul\":9974:9979   */\n      0x00\n        /* \"#utility.yul\":10005:10011   */\n      dup2\n        /* \"#utility.yul\":9999:10012   */\n      mload\n        /* \"#utility.yul\":9990:10012   */\n      swap1\n      pop\n        /* \"#utility.yul\":10021:10051   */\n      tag_433\n        /* \"#utility.yul\":10045:10050   */\n      dup2\n        /* \"#utility.yul\":10021:10051   */\n      tag_317\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":9920:10057   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10063:10408   */\n    tag_186:\n        /* \"#utility.yul\":10130:10136   */\n      0x00\n        /* \"#utility.yul\":10179:10181   */\n      0x20\n        /* \"#utility.yul\":10167:10176   */\n      dup3\n        /* \"#utility.yul\":10158:10165   */\n      dup5\n        /* \"#utility.yul\":10154:10177   */\n      sub\n        /* \"#utility.yul\":10150:10182   */\n      slt\n        /* \"#utility.yul\":10147:10266   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":10185:10264   */\n      tag_436\n      tag_300\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10147:10266   */\n    tag_435:\n        /* \"#utility.yul\":10305:10306   */\n      0x00\n        /* \"#utility.yul\":10330:10391   */\n      tag_437\n        /* \"#utility.yul\":10383:10390   */\n      dup5\n        /* \"#utility.yul\":10374:10380   */\n      dup3\n        /* \"#utility.yul\":10363:10372   */\n      dup6\n        /* \"#utility.yul\":10359:10381   */\n      add\n        /* \"#utility.yul\":10330:10391   */\n      tag_318\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":10320:10391   */\n      swap2\n      pop\n        /* \"#utility.yul\":10276:10401   */\n      pop\n        /* \"#utility.yul\":10063:10408   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10414:10746   */\n    tag_190:\n        /* \"#utility.yul\":10535:10539   */\n      0x00\n        /* \"#utility.yul\":10573:10575   */\n      0x40\n        /* \"#utility.yul\":10562:10571   */\n      dup3\n        /* \"#utility.yul\":10558:10576   */\n      add\n        /* \"#utility.yul\":10550:10576   */\n      swap1\n      pop\n        /* \"#utility.yul\":10586:10657   */\n      tag_439\n        /* \"#utility.yul\":10654:10655   */\n      0x00\n        /* \"#utility.yul\":10643:10652   */\n      dup4\n        /* \"#utility.yul\":10639:10656   */\n      add\n        /* \"#utility.yul\":10630:10636   */\n      dup6\n        /* \"#utility.yul\":10586:10657   */\n      tag_293\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":10667:10739   */\n      tag_440\n        /* \"#utility.yul\":10735:10737   */\n      0x20\n        /* \"#utility.yul\":10724:10733   */\n      dup4\n        /* \"#utility.yul\":10720:10738   */\n      add\n        /* \"#utility.yul\":10711:10717   */\n      dup5\n        /* \"#utility.yul\":10667:10739   */\n      tag_293\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":10414:10746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10752:11084   */\n    tag_218:\n        /* \"#utility.yul\":10873:10877   */\n      0x00\n        /* \"#utility.yul\":10911:10913   */\n      0x40\n        /* \"#utility.yul\":10900:10909   */\n      dup3\n        /* \"#utility.yul\":10896:10914   */\n      add\n        /* \"#utility.yul\":10888:10914   */\n      swap1\n      pop\n        /* \"#utility.yul\":10924:10995   */\n      tag_442\n        /* \"#utility.yul\":10992:10993   */\n      0x00\n        /* \"#utility.yul\":10981:10990   */\n      dup4\n        /* \"#utility.yul\":10977:10994   */\n      add\n        /* \"#utility.yul\":10968:10974   */\n      dup6\n        /* \"#utility.yul\":10924:10995   */\n      tag_312\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":11005:11077   */\n      tag_443\n        /* \"#utility.yul\":11073:11075   */\n      0x20\n        /* \"#utility.yul\":11062:11071   */\n      dup4\n        /* \"#utility.yul\":11058:11076   */\n      add\n        /* \"#utility.yul\":11049:11055   */\n      dup5\n        /* \"#utility.yul\":11005:11077   */\n      tag_293\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":10752:11084   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11090:11532   */\n    tag_258:\n        /* \"#utility.yul\":11239:11243   */\n      0x00\n        /* \"#utility.yul\":11277:11279   */\n      0x60\n        /* \"#utility.yul\":11266:11275   */\n      dup3\n        /* \"#utility.yul\":11262:11280   */\n      add\n        /* \"#utility.yul\":11254:11280   */\n      swap1\n      pop\n        /* \"#utility.yul\":11290:11361   */\n      tag_445\n        /* \"#utility.yul\":11358:11359   */\n      0x00\n        /* \"#utility.yul\":11347:11356   */\n      dup4\n        /* \"#utility.yul\":11343:11360   */\n      add\n        /* \"#utility.yul\":11334:11340   */\n      dup7\n        /* \"#utility.yul\":11290:11361   */\n      tag_312\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":11371:11443   */\n      tag_446\n        /* \"#utility.yul\":11439:11441   */\n      0x20\n        /* \"#utility.yul\":11428:11437   */\n      dup4\n        /* \"#utility.yul\":11424:11442   */\n      add\n        /* \"#utility.yul\":11415:11421   */\n      dup6\n        /* \"#utility.yul\":11371:11443   */\n      tag_293\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":11453:11525   */\n      tag_447\n        /* \"#utility.yul\":11521:11523   */\n      0x40\n        /* \"#utility.yul\":11510:11519   */\n      dup4\n        /* \"#utility.yul\":11506:11524   */\n      add\n        /* \"#utility.yul\":11497:11503   */\n      dup5\n        /* \"#utility.yul\":11453:11525   */\n      tag_293\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":11090:11532   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11538:11729   */\n    tag_285:\n        /* \"#utility.yul\":11578:11581   */\n      0x00\n        /* \"#utility.yul\":11597:11617   */\n      tag_449\n        /* \"#utility.yul\":11615:11616   */\n      dup3\n        /* \"#utility.yul\":11597:11617   */\n      tag_292\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":11592:11617   */\n      swap2\n      pop\n        /* \"#utility.yul\":11631:11651   */\n      tag_450\n        /* \"#utility.yul\":11649:11650   */\n      dup4\n        /* \"#utility.yul\":11631:11651   */\n      tag_292\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":11626:11651   */\n      swap3\n      pop\n        /* \"#utility.yul\":11674:11675   */\n      dup3\n        /* \"#utility.yul\":11671:11672   */\n      dup3\n        /* \"#utility.yul\":11667:11676   */\n      add\n        /* \"#utility.yul\":11660:11676   */\n      swap1\n      pop\n        /* \"#utility.yul\":11695:11698   */\n      dup1\n        /* \"#utility.yul\":11692:11693   */\n      dup3\n        /* \"#utility.yul\":11689:11699   */\n      gt\n        /* \"#utility.yul\":11686:11722   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":11702:11720   */\n      tag_452\n      tag_315\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":11686:11722   */\n    tag_451:\n        /* \"#utility.yul\":11538:11729   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220258142a7eb067e2e8a157fdafb01d7a976ac5a61c3b6b0fd8ecaa275b0736a6f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_818": {
									"entryPoint": null,
									"id": 818,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_ERC20_$651_fromMemory": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ERC20_$651t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_memory": {
									"entryPoint": 387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 145,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ERC20_$651": {
									"entryPoint": 210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 731,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 293,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 269,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 273,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 158,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 154,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 869,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1010,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ERC20_$651": {
									"entryPoint": 227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1047,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9327:7",
										"nodeType": "YulBlock",
										"src": "0:9327:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "626:51:7",
													"nodeType": "YulBlock",
													"src": "626:51:7",
													"statements": [
														{
															"nativeSrc": "636:35:7",
															"nodeType": "YulAssignment",
															"src": "636:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "665:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "665:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "647:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "647:17:7"
																},
																"nativeSrc": "647:24:7",
																"nodeType": "YulFunctionCall",
																"src": "647:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "636:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "636:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ERC20_$651",
												"nativeSrc": "568:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "608:5:7",
														"nodeType": "YulTypedName",
														"src": "608:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "618:7:7",
														"nodeType": "YulTypedName",
														"src": "618:7:7",
														"type": ""
													}
												],
												"src": "568:109:7"
											},
											{
												"body": {
													"nativeSrc": "739:92:7",
													"nodeType": "YulBlock",
													"src": "739:92:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "809:16:7",
																"nodeType": "YulBlock",
																"src": "809:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "818:1:7",
																					"nodeType": "YulLiteral",
																					"src": "818:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:7",
																					"nodeType": "YulLiteral",
																					"src": "821:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "811:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "811:6:7"
																			},
																			"nativeSrc": "811:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "811:12:7"
																		},
																		"nativeSrc": "811:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "811:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "762:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "762:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "800:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "800:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ERC20_$651",
																					"nativeSrc": "769:30:7",
																					"nodeType": "YulIdentifier",
																					"src": "769:30:7"
																				},
																				"nativeSrc": "769:37:7",
																				"nodeType": "YulFunctionCall",
																				"src": "769:37:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "759:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "759:2:7"
																		},
																		"nativeSrc": "759:48:7",
																		"nodeType": "YulFunctionCall",
																		"src": "759:48:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "752:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:7"
																},
																"nativeSrc": "752:56:7",
																"nodeType": "YulFunctionCall",
																"src": "752:56:7"
															},
															"nativeSrc": "749:76:7",
															"nodeType": "YulIf",
															"src": "749:76:7"
														}
													]
												},
												"name": "validator_revert_t_contract$_ERC20_$651",
												"nativeSrc": "683:148:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "732:5:7",
														"nodeType": "YulTypedName",
														"src": "732:5:7",
														"type": ""
													}
												],
												"src": "683:148:7"
											},
											{
												"body": {
													"nativeSrc": "913:93:7",
													"nodeType": "YulBlock",
													"src": "913:93:7",
													"statements": [
														{
															"nativeSrc": "923:22:7",
															"nodeType": "YulAssignment",
															"src": "923:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "938:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "938:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "932:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "932:5:7"
																},
																"nativeSrc": "932:13:7",
																"nodeType": "YulFunctionCall",
																"src": "932:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "923:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "923:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "994:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "994:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ERC20_$651",
																	"nativeSrc": "954:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "954:39:7"
																},
																"nativeSrc": "954:46:7",
																"nodeType": "YulFunctionCall",
																"src": "954:46:7"
															},
															"nativeSrc": "954:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "954:46:7"
														}
													]
												},
												"name": "abi_decode_t_contract$_ERC20_$651_fromMemory",
												"nativeSrc": "837:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "891:6:7",
														"nodeType": "YulTypedName",
														"src": "891:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "899:3:7",
														"nodeType": "YulTypedName",
														"src": "899:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "907:5:7",
														"nodeType": "YulTypedName",
														"src": "907:5:7",
														"type": ""
													}
												],
												"src": "837:169:7"
											},
											{
												"body": {
													"nativeSrc": "1101:28:7",
													"nodeType": "YulBlock",
													"src": "1101:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1118:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1118:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1121:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1121:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1111:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1111:6:7"
																},
																"nativeSrc": "1111:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1111:12:7"
															},
															"nativeSrc": "1111:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1111:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1012:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1012:117:7"
											},
											{
												"body": {
													"nativeSrc": "1224:28:7",
													"nodeType": "YulBlock",
													"src": "1224:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1241:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1241:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1244:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1244:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1234:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1234:6:7"
																},
																"nativeSrc": "1234:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1234:12:7"
															},
															"nativeSrc": "1234:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1234:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "1135:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1135:117:7"
											},
											{
												"body": {
													"nativeSrc": "1306:54:7",
													"nodeType": "YulBlock",
													"src": "1306:54:7",
													"statements": [
														{
															"nativeSrc": "1316:38:7",
															"nodeType": "YulAssignment",
															"src": "1316:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1334:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1334:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1341:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1341:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1330:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1330:3:7"
																		},
																		"nativeSrc": "1330:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1330:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1350:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1350:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1346:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:7"
																		},
																		"nativeSrc": "1346:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1326:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1326:3:7"
																},
																"nativeSrc": "1326:28:7",
																"nodeType": "YulFunctionCall",
																"src": "1326:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1316:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1316:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1258:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1289:5:7",
														"nodeType": "YulTypedName",
														"src": "1289:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1299:6:7",
														"nodeType": "YulTypedName",
														"src": "1299:6:7",
														"type": ""
													}
												],
												"src": "1258:102:7"
											},
											{
												"body": {
													"nativeSrc": "1394:152:7",
													"nodeType": "YulBlock",
													"src": "1394:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1411:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1411:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1414:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1414:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1404:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1404:6:7"
																},
																"nativeSrc": "1404:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1404:88:7"
															},
															"nativeSrc": "1404:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1404:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1511:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1501:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:7"
																},
																"nativeSrc": "1501:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1501:15:7"
															},
															"nativeSrc": "1501:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1501:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1532:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1532:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1535:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1535:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1525:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1525:6:7"
																},
																"nativeSrc": "1525:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1525:15:7"
															},
															"nativeSrc": "1525:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1525:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1366:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1366:180:7"
											},
											{
												"body": {
													"nativeSrc": "1595:238:7",
													"nodeType": "YulBlock",
													"src": "1595:238:7",
													"statements": [
														{
															"nativeSrc": "1605:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1605:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1627:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1627:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1657:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1657:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1635:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "1635:21:7"
																		},
																		"nativeSrc": "1635:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1635:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1623:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1623:3:7"
																},
																"nativeSrc": "1623:40:7",
																"nodeType": "YulFunctionCall",
																"src": "1623:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1609:10:7",
																	"nodeType": "YulTypedName",
																	"src": "1609:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1774:22:7",
																"nodeType": "YulBlock",
																"src": "1774:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1776:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1776:16:7"
																			},
																			"nativeSrc": "1776:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1776:18:7"
																		},
																		"nativeSrc": "1776:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1776:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1717:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1717:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1729:18:7",
																				"nodeType": "YulLiteral",
																				"src": "1729:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1714:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1714:2:7"
																		},
																		"nativeSrc": "1714:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1714:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1753:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1753:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1765:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1750:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1750:2:7"
																		},
																		"nativeSrc": "1750:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1750:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1711:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1711:2:7"
																},
																"nativeSrc": "1711:62:7",
																"nodeType": "YulFunctionCall",
																"src": "1711:62:7"
															},
															"nativeSrc": "1708:88:7",
															"nodeType": "YulIf",
															"src": "1708:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1812:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1812:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1816:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1816:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1805:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1805:6:7"
																},
																"nativeSrc": "1805:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1805:22:7"
															},
															"nativeSrc": "1805:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "1805:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1552:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1581:6:7",
														"nodeType": "YulTypedName",
														"src": "1581:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1589:4:7",
														"nodeType": "YulTypedName",
														"src": "1589:4:7",
														"type": ""
													}
												],
												"src": "1552:281:7"
											},
											{
												"body": {
													"nativeSrc": "1880:88:7",
													"nodeType": "YulBlock",
													"src": "1880:88:7",
													"statements": [
														{
															"nativeSrc": "1890:30:7",
															"nodeType": "YulAssignment",
															"src": "1890:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1900:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1900:18:7"
																},
																"nativeSrc": "1900:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1900:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1890:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1890:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1949:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1949:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1957:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1957:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1929:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "1929:19:7"
																},
																"nativeSrc": "1929:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1929:33:7"
															},
															"nativeSrc": "1929:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1929:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1839:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1864:4:7",
														"nodeType": "YulTypedName",
														"src": "1864:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1873:6:7",
														"nodeType": "YulTypedName",
														"src": "1873:6:7",
														"type": ""
													}
												],
												"src": "1839:129:7"
											},
											{
												"body": {
													"nativeSrc": "2041:241:7",
													"nodeType": "YulBlock",
													"src": "2041:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2146:22:7",
																"nodeType": "YulBlock",
																"src": "2146:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2148:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2148:16:7"
																			},
																			"nativeSrc": "2148:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:18:7"
																		},
																		"nativeSrc": "2148:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2118:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2118:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2126:18:7",
																		"nodeType": "YulLiteral",
																		"src": "2126:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2115:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2115:2:7"
																},
																"nativeSrc": "2115:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2115:30:7"
															},
															"nativeSrc": "2112:56:7",
															"nodeType": "YulIf",
															"src": "2112:56:7"
														},
														{
															"nativeSrc": "2178:37:7",
															"nodeType": "YulAssignment",
															"src": "2178:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2208:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2208:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2186:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "2186:21:7"
																},
																"nativeSrc": "2186:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2186:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2178:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2178:4:7"
																}
															]
														},
														{
															"nativeSrc": "2252:23:7",
															"nodeType": "YulAssignment",
															"src": "2252:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2264:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2264:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2260:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2260:3:7"
																},
																"nativeSrc": "2260:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2260:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2252:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2252:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1974:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "2025:6:7",
														"nodeType": "YulTypedName",
														"src": "2025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "2036:4:7",
														"nodeType": "YulTypedName",
														"src": "2036:4:7",
														"type": ""
													}
												],
												"src": "1974:308:7"
											},
											{
												"body": {
													"nativeSrc": "2350:77:7",
													"nodeType": "YulBlock",
													"src": "2350:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2367:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2367:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2372:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2372:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2377:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2377:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2361:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2361:5:7"
																},
																"nativeSrc": "2361:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2361:23:7"
															},
															"nativeSrc": "2361:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "2361:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2404:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2404:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2409:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2409:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2400:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2400:3:7"
																		},
																		"nativeSrc": "2400:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2400:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2418:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2418:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2393:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2393:6:7"
																},
																"nativeSrc": "2393:27:7",
																"nodeType": "YulFunctionCall",
																"src": "2393:27:7"
															},
															"nativeSrc": "2393:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "2393:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2288:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2332:3:7",
														"nodeType": "YulTypedName",
														"src": "2332:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2337:3:7",
														"nodeType": "YulTypedName",
														"src": "2337:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2342:6:7",
														"nodeType": "YulTypedName",
														"src": "2342:6:7",
														"type": ""
													}
												],
												"src": "2288:139:7"
											},
											{
												"body": {
													"nativeSrc": "2528:339:7",
													"nodeType": "YulBlock",
													"src": "2528:339:7",
													"statements": [
														{
															"nativeSrc": "2538:75:7",
															"nodeType": "YulAssignment",
															"src": "2538:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2605:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2605:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "2563:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "2563:41:7"
																		},
																		"nativeSrc": "2563:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2563:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2547:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "2547:15:7"
																},
																"nativeSrc": "2547:66:7",
																"nodeType": "YulFunctionCall",
																"src": "2547:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2538:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2538:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2629:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2629:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2636:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2636:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2622:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2622:6:7"
																},
																"nativeSrc": "2622:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2622:21:7"
															},
															"nativeSrc": "2622:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2622:21:7"
														},
														{
															"nativeSrc": "2652:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2652:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2667:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2667:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2674:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2674:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2663:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2663:3:7"
																},
																"nativeSrc": "2663:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2663:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2656:3:7",
																	"nodeType": "YulTypedName",
																	"src": "2656:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2717:83:7",
																"nodeType": "YulBlock",
																"src": "2717:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2719:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2719:77:7"
																			},
																			"nativeSrc": "2719:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2719:79:7"
																		},
																		"nativeSrc": "2719:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2719:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2698:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2698:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2703:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2703:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2694:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2694:3:7"
																		},
																		"nativeSrc": "2694:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2694:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2712:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2712:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2691:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2691:2:7"
																},
																"nativeSrc": "2691:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2691:25:7"
															},
															"nativeSrc": "2688:112:7",
															"nodeType": "YulIf",
															"src": "2688:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2844:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2849:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2849:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2854:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2854:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2809:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "2809:34:7"
																},
																"nativeSrc": "2809:52:7",
																"nodeType": "YulFunctionCall",
																"src": "2809:52:7"
															},
															"nativeSrc": "2809:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "2809:52:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2433:434:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2501:3:7",
														"nodeType": "YulTypedName",
														"src": "2501:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2506:6:7",
														"nodeType": "YulTypedName",
														"src": "2506:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2514:3:7",
														"nodeType": "YulTypedName",
														"src": "2514:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2522:5:7",
														"nodeType": "YulTypedName",
														"src": "2522:5:7",
														"type": ""
													}
												],
												"src": "2433:434:7"
											},
											{
												"body": {
													"nativeSrc": "2960:282:7",
													"nodeType": "YulBlock",
													"src": "2960:282:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3009:83:7",
																"nodeType": "YulBlock",
																"src": "3009:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3011:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3011:77:7"
																			},
																			"nativeSrc": "3011:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3011:79:7"
																		},
																		"nativeSrc": "3011:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3011:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2988:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2988:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2996:4:7",
																						"nodeType": "YulLiteral",
																						"src": "2996:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2984:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2984:3:7"
																				},
																				"nativeSrc": "2984:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2984:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3003:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3003:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2980:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2980:3:7"
																		},
																		"nativeSrc": "2980:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2980:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2973:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2973:6:7"
																},
																"nativeSrc": "2973:35:7",
																"nodeType": "YulFunctionCall",
																"src": "2973:35:7"
															},
															"nativeSrc": "2970:122:7",
															"nodeType": "YulIf",
															"src": "2970:122:7"
														},
														{
															"nativeSrc": "3101:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3101:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3121:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3121:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3115:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3115:5:7"
																},
																"nativeSrc": "3115:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3115:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3105:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3105:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3137:99:7",
															"nodeType": "YulAssignment",
															"src": "3137:99:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3209:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3209:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3217:4:7",
																				"nodeType": "YulLiteral",
																				"src": "3217:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3205:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3205:3:7"
																		},
																		"nativeSrc": "3205:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3205:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3224:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3224:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3232:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3232:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "3146:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "3146:58:7"
																},
																"nativeSrc": "3146:90:7",
																"nodeType": "YulFunctionCall",
																"src": "3146:90:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3137:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3137:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2887:355:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2938:6:7",
														"nodeType": "YulTypedName",
														"src": "2938:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2946:3:7",
														"nodeType": "YulTypedName",
														"src": "2946:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2954:5:7",
														"nodeType": "YulTypedName",
														"src": "2954:5:7",
														"type": ""
													}
												],
												"src": "2887:355:7"
											},
											{
												"body": {
													"nativeSrc": "3392:891:7",
													"nodeType": "YulBlock",
													"src": "3392:891:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3438:83:7",
																"nodeType": "YulBlock",
																"src": "3438:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3440:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3440:77:7"
																			},
																			"nativeSrc": "3440:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3440:79:7"
																		},
																		"nativeSrc": "3440:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3440:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3422:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3422:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3409:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3409:3:7"
																		},
																		"nativeSrc": "3409:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3409:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3434:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3434:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3405:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3405:3:7"
																},
																"nativeSrc": "3405:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3405:32:7"
															},
															"nativeSrc": "3402:119:7",
															"nodeType": "YulIf",
															"src": "3402:119:7"
														},
														{
															"nativeSrc": "3531:141:7",
															"nodeType": "YulBlock",
															"src": "3531:141:7",
															"statements": [
																{
																	"nativeSrc": "3546:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3546:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3560:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3560:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3550:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3550:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3575:87:7",
																	"nodeType": "YulAssignment",
																	"src": "3575:87:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3634:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3634:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3645:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3645:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3630:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3630:3:7"
																				},
																				"nativeSrc": "3630:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3630:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3654:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3654:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ERC20_$651_fromMemory",
																			"nativeSrc": "3585:44:7",
																			"nodeType": "YulIdentifier",
																			"src": "3585:44:7"
																		},
																		"nativeSrc": "3585:77:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3585:77:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3575:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3575:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3682:292:7",
															"nodeType": "YulBlock",
															"src": "3682:292:7",
															"statements": [
																{
																	"nativeSrc": "3697:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3697:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3721:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3721:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3732:2:7",
																						"nodeType": "YulLiteral",
																						"src": "3732:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3717:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3717:3:7"
																				},
																				"nativeSrc": "3717:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3717:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3711:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3711:5:7"
																		},
																		"nativeSrc": "3711:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3711:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3701:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3701:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3783:83:7",
																		"nodeType": "YulBlock",
																		"src": "3783:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3785:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "3785:77:7"
																					},
																					"nativeSrc": "3785:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3785:79:7"
																				},
																				"nativeSrc": "3785:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3785:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3755:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3755:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3763:18:7",
																				"nodeType": "YulLiteral",
																				"src": "3763:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3752:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3752:2:7"
																		},
																		"nativeSrc": "3752:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3752:30:7"
																	},
																	"nativeSrc": "3749:117:7",
																	"nodeType": "YulIf",
																	"src": "3749:117:7"
																},
																{
																	"nativeSrc": "3880:84:7",
																	"nodeType": "YulAssignment",
																	"src": "3880:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3936:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3936:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3947:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3947:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3932:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3932:3:7"
																				},
																				"nativeSrc": "3932:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3932:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3956:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3956:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3890:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "3890:41:7"
																		},
																		"nativeSrc": "3890:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3890:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3880:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3880:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3984:292:7",
															"nodeType": "YulBlock",
															"src": "3984:292:7",
															"statements": [
																{
																	"nativeSrc": "3999:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3999:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4023:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4023:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4034:2:7",
																						"nodeType": "YulLiteral",
																						"src": "4034:2:7",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4019:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4019:3:7"
																				},
																				"nativeSrc": "4019:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4019:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4013:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4013:5:7"
																		},
																		"nativeSrc": "4013:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4013:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4003:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4003:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4085:83:7",
																		"nodeType": "YulBlock",
																		"src": "4085:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4087:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "4087:77:7"
																					},
																					"nativeSrc": "4087:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4087:79:7"
																				},
																				"nativeSrc": "4087:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4087:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4057:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4057:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4065:18:7",
																				"nodeType": "YulLiteral",
																				"src": "4065:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4054:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4054:2:7"
																		},
																		"nativeSrc": "4054:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4054:30:7"
																	},
																	"nativeSrc": "4051:117:7",
																	"nodeType": "YulIf",
																	"src": "4051:117:7"
																},
																{
																	"nativeSrc": "4182:84:7",
																	"nodeType": "YulAssignment",
																	"src": "4182:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4238:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4238:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4249:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4249:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4234:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4234:3:7"
																				},
																				"nativeSrc": "4234:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4234:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4258:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4258:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4192:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "4192:41:7"
																		},
																		"nativeSrc": "4192:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4192:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4182:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4182:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ERC20_$651t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "3248:1035:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3346:9:7",
														"nodeType": "YulTypedName",
														"src": "3346:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3357:7:7",
														"nodeType": "YulTypedName",
														"src": "3357:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3369:6:7",
														"nodeType": "YulTypedName",
														"src": "3369:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3377:6:7",
														"nodeType": "YulTypedName",
														"src": "3377:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3385:6:7",
														"nodeType": "YulTypedName",
														"src": "3385:6:7",
														"type": ""
													}
												],
												"src": "3248:1035:7"
											},
											{
												"body": {
													"nativeSrc": "4348:40:7",
													"nodeType": "YulBlock",
													"src": "4348:40:7",
													"statements": [
														{
															"nativeSrc": "4359:22:7",
															"nodeType": "YulAssignment",
															"src": "4359:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4375:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4375:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4369:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4369:5:7"
																},
																"nativeSrc": "4369:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4369:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4359:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4359:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4289:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4331:5:7",
														"nodeType": "YulTypedName",
														"src": "4331:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4341:6:7",
														"nodeType": "YulTypedName",
														"src": "4341:6:7",
														"type": ""
													}
												],
												"src": "4289:99:7"
											},
											{
												"body": {
													"nativeSrc": "4422:152:7",
													"nodeType": "YulBlock",
													"src": "4422:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4439:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4439:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4442:77:7",
																		"nodeType": "YulLiteral",
																		"src": "4442:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4432:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4432:6:7"
																},
																"nativeSrc": "4432:88:7",
																"nodeType": "YulFunctionCall",
																"src": "4432:88:7"
															},
															"nativeSrc": "4432:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "4432:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4536:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4536:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4539:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4539:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4529:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:7"
																},
																"nativeSrc": "4529:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4529:15:7"
															},
															"nativeSrc": "4529:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4529:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4560:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4560:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4563:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4563:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4553:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4553:6:7"
																},
																"nativeSrc": "4553:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4553:15:7"
															},
															"nativeSrc": "4553:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4553:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4394:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4394:180:7"
											},
											{
												"body": {
													"nativeSrc": "4631:269:7",
													"nodeType": "YulBlock",
													"src": "4631:269:7",
													"statements": [
														{
															"nativeSrc": "4641:22:7",
															"nodeType": "YulAssignment",
															"src": "4641:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4655:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4655:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4661:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4651:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4651:3:7"
																},
																"nativeSrc": "4651:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4651:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4641:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4641:6:7"
																}
															]
														},
														{
															"nativeSrc": "4672:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4672:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4702:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4702:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4708:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4708:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4698:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4698:3:7"
																},
																"nativeSrc": "4698:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4698:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4676:18:7",
																	"nodeType": "YulTypedName",
																	"src": "4676:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4749:51:7",
																"nodeType": "YulBlock",
																"src": "4749:51:7",
																"statements": [
																	{
																		"nativeSrc": "4763:27:7",
																		"nodeType": "YulAssignment",
																		"src": "4763:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4777:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4777:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4785:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4785:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4773:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4773:3:7"
																			},
																			"nativeSrc": "4773:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4773:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4763:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4763:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4729:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4729:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4722:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4722:6:7"
																},
																"nativeSrc": "4722:26:7",
																"nodeType": "YulFunctionCall",
																"src": "4722:26:7"
															},
															"nativeSrc": "4719:81:7",
															"nodeType": "YulIf",
															"src": "4719:81:7"
														},
														{
															"body": {
																"nativeSrc": "4852:42:7",
																"nodeType": "YulBlock",
																"src": "4852:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4866:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4866:16:7"
																			},
																			"nativeSrc": "4866:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4866:18:7"
																		},
																		"nativeSrc": "4866:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4866:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4816:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4816:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4839:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4839:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4847:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4847:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4836:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4836:2:7"
																		},
																		"nativeSrc": "4836:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4836:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4813:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4813:2:7"
																},
																"nativeSrc": "4813:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4813:38:7"
															},
															"nativeSrc": "4810:84:7",
															"nodeType": "YulIf",
															"src": "4810:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4580:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4615:4:7",
														"nodeType": "YulTypedName",
														"src": "4615:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4624:6:7",
														"nodeType": "YulTypedName",
														"src": "4624:6:7",
														"type": ""
													}
												],
												"src": "4580:320:7"
											},
											{
												"body": {
													"nativeSrc": "4960:87:7",
													"nodeType": "YulBlock",
													"src": "4960:87:7",
													"statements": [
														{
															"nativeSrc": "4970:11:7",
															"nodeType": "YulAssignment",
															"src": "4970:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "4978:3:7",
																"nodeType": "YulIdentifier",
																"src": "4978:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4970:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4970:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4998:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4998:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5001:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5001:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4991:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4991:6:7"
																},
																"nativeSrc": "4991:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4991:14:7"
															},
															"nativeSrc": "4991:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "4991:14:7"
														},
														{
															"nativeSrc": "5014:26:7",
															"nodeType": "YulAssignment",
															"src": "5014:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5032:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5032:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5035:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5035:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5022:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5022:9:7"
																},
																"nativeSrc": "5022:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5022:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5014:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5014:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4906:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4947:3:7",
														"nodeType": "YulTypedName",
														"src": "4947:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4955:4:7",
														"nodeType": "YulTypedName",
														"src": "4955:4:7",
														"type": ""
													}
												],
												"src": "4906:141:7"
											},
											{
												"body": {
													"nativeSrc": "5097:49:7",
													"nodeType": "YulBlock",
													"src": "5097:49:7",
													"statements": [
														{
															"nativeSrc": "5107:33:7",
															"nodeType": "YulAssignment",
															"src": "5107:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5125:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5125:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5132:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5132:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5121:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5121:3:7"
																		},
																		"nativeSrc": "5121:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5121:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5137:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5137:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5117:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5117:3:7"
																},
																"nativeSrc": "5117:23:7",
																"nodeType": "YulFunctionCall",
																"src": "5117:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5107:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5107:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5053:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5080:5:7",
														"nodeType": "YulTypedName",
														"src": "5080:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5090:6:7",
														"nodeType": "YulTypedName",
														"src": "5090:6:7",
														"type": ""
													}
												],
												"src": "5053:93:7"
											},
											{
												"body": {
													"nativeSrc": "5205:54:7",
													"nodeType": "YulBlock",
													"src": "5205:54:7",
													"statements": [
														{
															"nativeSrc": "5215:37:7",
															"nodeType": "YulAssignment",
															"src": "5215:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5240:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5240:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5246:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5246:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5236:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5236:3:7"
																},
																"nativeSrc": "5236:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5236:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5215:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5215:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5152:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5180:4:7",
														"nodeType": "YulTypedName",
														"src": "5180:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5186:5:7",
														"nodeType": "YulTypedName",
														"src": "5186:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5196:8:7",
														"nodeType": "YulTypedName",
														"src": "5196:8:7",
														"type": ""
													}
												],
												"src": "5152:107:7"
											},
											{
												"body": {
													"nativeSrc": "5341:317:7",
													"nodeType": "YulBlock",
													"src": "5341:317:7",
													"statements": [
														{
															"nativeSrc": "5351:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5351:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5372:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "5372:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5384:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5384:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5368:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5368:3:7"
																},
																"nativeSrc": "5368:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5368:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5355:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5355:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5395:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5395:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5426:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5426:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5437:66:7",
																		"nodeType": "YulLiteral",
																		"src": "5437:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5407:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5407:18:7"
																},
																"nativeSrc": "5407:97:7",
																"nodeType": "YulFunctionCall",
																"src": "5407:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5399:4:7",
																	"nodeType": "YulTypedName",
																	"src": "5399:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5513:51:7",
															"nodeType": "YulAssignment",
															"src": "5513:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5544:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5544:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5555:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "5555:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5525:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5525:18:7"
																},
																"nativeSrc": "5525:39:7",
																"nodeType": "YulFunctionCall",
																"src": "5525:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5513:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5513:8:7"
																}
															]
														},
														{
															"nativeSrc": "5573:30:7",
															"nodeType": "YulAssignment",
															"src": "5573:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5586:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5586:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5597:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5597:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5593:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5593:3:7"
																		},
																		"nativeSrc": "5593:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5593:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5582:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5582:3:7"
																},
																"nativeSrc": "5582:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5582:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5573:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5573:5:7"
																}
															]
														},
														{
															"nativeSrc": "5612:40:7",
															"nodeType": "YulAssignment",
															"src": "5612:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5625:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5625:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5636:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "5636:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5646:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5646:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5632:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5632:3:7"
																		},
																		"nativeSrc": "5632:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5632:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5622:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5622:2:7"
																},
																"nativeSrc": "5622:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5622:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5612:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5612:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5265:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5302:5:7",
														"nodeType": "YulTypedName",
														"src": "5302:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5309:10:7",
														"nodeType": "YulTypedName",
														"src": "5309:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5321:8:7",
														"nodeType": "YulTypedName",
														"src": "5321:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5334:6:7",
														"nodeType": "YulTypedName",
														"src": "5334:6:7",
														"type": ""
													}
												],
												"src": "5265:393:7"
											},
											{
												"body": {
													"nativeSrc": "5709:32:7",
													"nodeType": "YulBlock",
													"src": "5709:32:7",
													"statements": [
														{
															"nativeSrc": "5719:16:7",
															"nodeType": "YulAssignment",
															"src": "5719:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "5730:5:7",
																"nodeType": "YulIdentifier",
																"src": "5730:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5719:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5719:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5664:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5691:5:7",
														"nodeType": "YulTypedName",
														"src": "5691:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5701:7:7",
														"nodeType": "YulTypedName",
														"src": "5701:7:7",
														"type": ""
													}
												],
												"src": "5664:77:7"
											},
											{
												"body": {
													"nativeSrc": "5779:28:7",
													"nodeType": "YulBlock",
													"src": "5779:28:7",
													"statements": [
														{
															"nativeSrc": "5789:12:7",
															"nodeType": "YulAssignment",
															"src": "5789:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "5796:5:7",
																"nodeType": "YulIdentifier",
																"src": "5796:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5789:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5789:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5747:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5765:5:7",
														"nodeType": "YulTypedName",
														"src": "5765:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5775:3:7",
														"nodeType": "YulTypedName",
														"src": "5775:3:7",
														"type": ""
													}
												],
												"src": "5747:60:7"
											},
											{
												"body": {
													"nativeSrc": "5873:82:7",
													"nodeType": "YulBlock",
													"src": "5873:82:7",
													"statements": [
														{
															"nativeSrc": "5883:66:7",
															"nodeType": "YulAssignment",
															"src": "5883:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5941:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5941:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5923:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "5923:17:7"
																				},
																				"nativeSrc": "5923:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5923:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5914:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "5914:8:7"
																		},
																		"nativeSrc": "5914:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5914:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5896:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5896:17:7"
																},
																"nativeSrc": "5896:53:7",
																"nodeType": "YulFunctionCall",
																"src": "5896:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5883:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5883:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5813:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5853:5:7",
														"nodeType": "YulTypedName",
														"src": "5853:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5863:9:7",
														"nodeType": "YulTypedName",
														"src": "5863:9:7",
														"type": ""
													}
												],
												"src": "5813:142:7"
											},
											{
												"body": {
													"nativeSrc": "6008:28:7",
													"nodeType": "YulBlock",
													"src": "6008:28:7",
													"statements": [
														{
															"nativeSrc": "6018:12:7",
															"nodeType": "YulAssignment",
															"src": "6018:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "6025:5:7",
																"nodeType": "YulIdentifier",
																"src": "6025:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6018:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6018:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5961:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5994:5:7",
														"nodeType": "YulTypedName",
														"src": "5994:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6004:3:7",
														"nodeType": "YulTypedName",
														"src": "6004:3:7",
														"type": ""
													}
												],
												"src": "5961:75:7"
											},
											{
												"body": {
													"nativeSrc": "6118:193:7",
													"nodeType": "YulBlock",
													"src": "6118:193:7",
													"statements": [
														{
															"nativeSrc": "6128:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6128:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6183:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "6183:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6152:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6152:30:7"
																},
																"nativeSrc": "6152:39:7",
																"nodeType": "YulFunctionCall",
																"src": "6152:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6132:16:7",
																	"nodeType": "YulTypedName",
																	"src": "6132:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6207:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6207:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6247:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "6247:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6241:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6241:5:7"
																				},
																				"nativeSrc": "6241:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6241:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6254:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6254:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6286:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "6286:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6262:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "6262:23:7"
																				},
																				"nativeSrc": "6262:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6262:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6213:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "6213:27:7"
																		},
																		"nativeSrc": "6213:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6213:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6200:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6200:6:7"
																},
																"nativeSrc": "6200:105:7",
																"nodeType": "YulFunctionCall",
																"src": "6200:105:7"
															},
															"nativeSrc": "6200:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "6200:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6042:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6095:4:7",
														"nodeType": "YulTypedName",
														"src": "6095:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6101:6:7",
														"nodeType": "YulTypedName",
														"src": "6101:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6109:7:7",
														"nodeType": "YulTypedName",
														"src": "6109:7:7",
														"type": ""
													}
												],
												"src": "6042:269:7"
											},
											{
												"body": {
													"nativeSrc": "6366:24:7",
													"nodeType": "YulBlock",
													"src": "6366:24:7",
													"statements": [
														{
															"nativeSrc": "6376:8:7",
															"nodeType": "YulAssignment",
															"src": "6376:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "6383:1:7",
																"nodeType": "YulLiteral",
																"src": "6383:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6376:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6376:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6317:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6362:3:7",
														"nodeType": "YulTypedName",
														"src": "6362:3:7",
														"type": ""
													}
												],
												"src": "6317:73:7"
											},
											{
												"body": {
													"nativeSrc": "6449:136:7",
													"nodeType": "YulBlock",
													"src": "6449:136:7",
													"statements": [
														{
															"nativeSrc": "6459:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6459:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6473:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6473:30:7"
																},
																"nativeSrc": "6473:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6473:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6463:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6463:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6558:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6558:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6564:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6564:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6572:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6572:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6514:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6514:43:7"
																},
																"nativeSrc": "6514:65:7",
																"nodeType": "YulFunctionCall",
																"src": "6514:65:7"
															},
															"nativeSrc": "6514:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "6514:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6396:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6435:4:7",
														"nodeType": "YulTypedName",
														"src": "6435:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6441:6:7",
														"nodeType": "YulTypedName",
														"src": "6441:6:7",
														"type": ""
													}
												],
												"src": "6396:189:7"
											},
											{
												"body": {
													"nativeSrc": "6641:136:7",
													"nodeType": "YulBlock",
													"src": "6641:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6708:63:7",
																"nodeType": "YulBlock",
																"src": "6708:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6752:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6752:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6759:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6759:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6722:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "6722:29:7"
																			},
																			"nativeSrc": "6722:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6722:39:7"
																		},
																		"nativeSrc": "6722:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6722:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6661:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6661:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6668:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6668:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6658:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6658:2:7"
																},
																"nativeSrc": "6658:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6658:14:7"
															},
															"nativeSrc": "6651:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6673:26:7",
																"nodeType": "YulBlock",
																"src": "6673:26:7",
																"statements": [
																	{
																		"nativeSrc": "6675:22:7",
																		"nodeType": "YulAssignment",
																		"src": "6675:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6688:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6688:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6695:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6695:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6684:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6684:3:7"
																			},
																			"nativeSrc": "6684:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6684:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6675:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6675:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6655:2:7",
																"nodeType": "YulBlock",
																"src": "6655:2:7",
																"statements": []
															},
															"src": "6651:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6591:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6629:5:7",
														"nodeType": "YulTypedName",
														"src": "6629:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6636:3:7",
														"nodeType": "YulTypedName",
														"src": "6636:3:7",
														"type": ""
													}
												],
												"src": "6591:186:7"
											},
											{
												"body": {
													"nativeSrc": "6862:464:7",
													"nodeType": "YulBlock",
													"src": "6862:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6888:431:7",
																"nodeType": "YulBlock",
																"src": "6888:431:7",
																"statements": [
																	{
																		"nativeSrc": "6902:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6902:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6950:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6950:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6918:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "6918:31:7"
																			},
																			"nativeSrc": "6918:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6918:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6906:8:7",
																				"nodeType": "YulTypedName",
																				"src": "6906:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6969:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6969:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6992:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "6992:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7020:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "7020:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7002:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "7002:17:7"
																					},
																					"nativeSrc": "7002:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7002:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6988:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6988:3:7"
																			},
																			"nativeSrc": "6988:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6988:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6973:11:7",
																				"nodeType": "YulTypedName",
																				"src": "6973:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7189:27:7",
																			"nodeType": "YulBlock",
																			"src": "7189:27:7",
																			"statements": [
																				{
																					"nativeSrc": "7191:23:7",
																					"nodeType": "YulAssignment",
																					"src": "7191:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7206:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "7206:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7191:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "7191:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7173:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "7173:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7185:2:7",
																					"nodeType": "YulLiteral",
																					"src": "7185:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7170:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7170:2:7"
																			},
																			"nativeSrc": "7170:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7170:18:7"
																		},
																		"nativeSrc": "7167:49:7",
																		"nodeType": "YulIf",
																		"src": "7167:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7258:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "7258:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7275:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "7275:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7303:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "7303:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7285:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "7285:17:7"
																							},
																							"nativeSrc": "7285:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "7285:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7271:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7271:3:7"
																					},
																					"nativeSrc": "7271:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7271:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7229:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "7229:28:7"
																			},
																			"nativeSrc": "7229:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7229:80:7"
																		},
																		"nativeSrc": "7229:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7229:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6879:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6879:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6884:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6884:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6876:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6876:2:7"
																},
																"nativeSrc": "6876:11:7",
																"nodeType": "YulFunctionCall",
																"src": "6876:11:7"
															},
															"nativeSrc": "6873:446:7",
															"nodeType": "YulIf",
															"src": "6873:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6783:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6838:5:7",
														"nodeType": "YulTypedName",
														"src": "6838:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6845:3:7",
														"nodeType": "YulTypedName",
														"src": "6845:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6850:10:7",
														"nodeType": "YulTypedName",
														"src": "6850:10:7",
														"type": ""
													}
												],
												"src": "6783:543:7"
											},
											{
												"body": {
													"nativeSrc": "7395:54:7",
													"nodeType": "YulBlock",
													"src": "7395:54:7",
													"statements": [
														{
															"nativeSrc": "7405:37:7",
															"nodeType": "YulAssignment",
															"src": "7405:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7430:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7430:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7436:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7436:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7426:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7426:3:7"
																},
																"nativeSrc": "7426:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7426:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7405:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7405:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7332:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7370:4:7",
														"nodeType": "YulTypedName",
														"src": "7370:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7376:5:7",
														"nodeType": "YulTypedName",
														"src": "7376:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7386:8:7",
														"nodeType": "YulTypedName",
														"src": "7386:8:7",
														"type": ""
													}
												],
												"src": "7332:117:7"
											},
											{
												"body": {
													"nativeSrc": "7506:118:7",
													"nodeType": "YulBlock",
													"src": "7506:118:7",
													"statements": [
														{
															"nativeSrc": "7516:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7516:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7565:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7565:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7568:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7568:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7561:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7561:3:7"
																				},
																				"nativeSrc": "7561:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7561:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7580:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7580:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7576:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7576:3:7"
																				},
																				"nativeSrc": "7576:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7576:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7532:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "7532:28:7"
																		},
																		"nativeSrc": "7532:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7532:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7528:3:7"
																},
																"nativeSrc": "7528:56:7",
																"nodeType": "YulFunctionCall",
																"src": "7528:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7520:4:7",
																	"nodeType": "YulTypedName",
																	"src": "7520:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7593:25:7",
															"nodeType": "YulAssignment",
															"src": "7593:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7607:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7607:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7613:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7613:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7603:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7603:3:7"
																},
																"nativeSrc": "7603:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7603:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7593:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7593:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7455:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7483:4:7",
														"nodeType": "YulTypedName",
														"src": "7483:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7489:5:7",
														"nodeType": "YulTypedName",
														"src": "7489:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7499:6:7",
														"nodeType": "YulTypedName",
														"src": "7499:6:7",
														"type": ""
													}
												],
												"src": "7455:169:7"
											},
											{
												"body": {
													"nativeSrc": "7710:214:7",
													"nodeType": "YulBlock",
													"src": "7710:214:7",
													"statements": [
														{
															"nativeSrc": "7843:37:7",
															"nodeType": "YulAssignment",
															"src": "7843:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7870:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7870:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7876:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7851:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "7851:18:7"
																},
																"nativeSrc": "7851:29:7",
																"nodeType": "YulFunctionCall",
																"src": "7851:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7843:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7843:4:7"
																}
															]
														},
														{
															"nativeSrc": "7889:29:7",
															"nodeType": "YulAssignment",
															"src": "7889:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7900:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7900:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7910:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7910:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7913:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7913:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7906:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7906:3:7"
																		},
																		"nativeSrc": "7906:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7906:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7897:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7897:2:7"
																},
																"nativeSrc": "7897:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7897:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7889:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7889:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7629:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7691:4:7",
														"nodeType": "YulTypedName",
														"src": "7691:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7697:3:7",
														"nodeType": "YulTypedName",
														"src": "7697:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7705:4:7",
														"nodeType": "YulTypedName",
														"src": "7705:4:7",
														"type": ""
													}
												],
												"src": "7629:295:7"
											},
											{
												"body": {
													"nativeSrc": "8021:1303:7",
													"nodeType": "YulBlock",
													"src": "8021:1303:7",
													"statements": [
														{
															"nativeSrc": "8032:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8032:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8079:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8079:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8046:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "8046:32:7"
																},
																"nativeSrc": "8046:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8046:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8036:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8036:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8168:22:7",
																"nodeType": "YulBlock",
																"src": "8168:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8170:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8170:16:7"
																			},
																			"nativeSrc": "8170:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8170:18:7"
																		},
																		"nativeSrc": "8170:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8170:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8140:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8140:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8148:18:7",
																		"nodeType": "YulLiteral",
																		"src": "8148:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8137:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8137:2:7"
																},
																"nativeSrc": "8137:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8137:30:7"
															},
															"nativeSrc": "8134:56:7",
															"nodeType": "YulIf",
															"src": "8134:56:7"
														},
														{
															"nativeSrc": "8200:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8200:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8246:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8246:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8240:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8240:5:7"
																		},
																		"nativeSrc": "8240:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8240:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8214:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "8214:25:7"
																},
																"nativeSrc": "8214:38:7",
																"nodeType": "YulFunctionCall",
																"src": "8214:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8204:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8204:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8345:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8345:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8351:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8351:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8359:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8359:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8299:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "8299:45:7"
																},
																"nativeSrc": "8299:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8299:67:7"
															},
															"nativeSrc": "8299:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "8299:67:7"
														},
														{
															"nativeSrc": "8376:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8376:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8393:1:7",
																"nodeType": "YulLiteral",
																"src": "8393:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8380:9:7",
																	"nodeType": "YulTypedName",
																	"src": "8380:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8404:17:7",
															"nodeType": "YulAssignment",
															"src": "8404:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8417:4:7",
																"nodeType": "YulLiteral",
																"src": "8417:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8404:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "8404:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8468:611:7",
																		"nodeType": "YulBlock",
																		"src": "8468:611:7",
																		"statements": [
																			{
																				"nativeSrc": "8482:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8482:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8501:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8501:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8513:4:7",
																									"nodeType": "YulLiteral",
																									"src": "8513:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8509:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "8509:3:7"
																							},
																							"nativeSrc": "8509:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8509:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8497:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8497:3:7"
																					},
																					"nativeSrc": "8497:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8497:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8486:7:7",
																						"nodeType": "YulTypedName",
																						"src": "8486:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8533:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8533:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8579:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8579:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8547:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "8547:31:7"
																					},
																					"nativeSrc": "8547:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8547:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8537:6:7",
																						"nodeType": "YulTypedName",
																						"src": "8537:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8597:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8597:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8606:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8606:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8601:1:7",
																						"nodeType": "YulTypedName",
																						"src": "8601:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8665:163:7",
																					"nodeType": "YulBlock",
																					"src": "8665:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8690:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8690:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8708:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "8708:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8713:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "8713:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8704:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "8704:3:7"
																												},
																												"nativeSrc": "8704:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "8704:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8698:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "8698:5:7"
																										},
																										"nativeSrc": "8698:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8698:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8683:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8683:6:7"
																								},
																								"nativeSrc": "8683:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8683:42:7"
																							},
																							"nativeSrc": "8683:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8683:42:7"
																						},
																						{
																							"nativeSrc": "8742:24:7",
																							"nodeType": "YulAssignment",
																							"src": "8742:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8756:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8756:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8764:1:7",
																										"nodeType": "YulLiteral",
																										"src": "8764:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8752:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8752:3:7"
																								},
																								"nativeSrc": "8752:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8752:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8742:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8742:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8783:31:7",
																							"nodeType": "YulAssignment",
																							"src": "8783:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8800:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "8800:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8811:2:7",
																										"nodeType": "YulLiteral",
																										"src": "8811:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8796:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8796:3:7"
																								},
																								"nativeSrc": "8796:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8796:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8783:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "8783:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8631:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "8631:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8634:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8634:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8628:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8628:2:7"
																					},
																					"nativeSrc": "8628:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8628:14:7"
																				},
																				"nativeSrc": "8620:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8643:21:7",
																					"nodeType": "YulBlock",
																					"src": "8643:21:7",
																					"statements": [
																						{
																							"nativeSrc": "8645:17:7",
																							"nodeType": "YulAssignment",
																							"src": "8645:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8654:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "8654:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8657:4:7",
																										"nodeType": "YulLiteral",
																										"src": "8657:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8650:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8650:3:7"
																								},
																								"nativeSrc": "8650:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8650:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8645:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "8645:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8624:3:7",
																					"nodeType": "YulBlock",
																					"src": "8624:3:7",
																					"statements": []
																				},
																				"src": "8620:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "8864:156:7",
																					"nodeType": "YulBlock",
																					"src": "8864:156:7",
																					"statements": [
																						{
																							"nativeSrc": "8882:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8882:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8909:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "8909:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8914:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "8914:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8905:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "8905:3:7"
																										},
																										"nativeSrc": "8905:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8905:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8899:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8899:5:7"
																								},
																								"nativeSrc": "8899:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8899:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8886:9:7",
																									"nodeType": "YulTypedName",
																									"src": "8886:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8949:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8949:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8976:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "8976:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8991:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "8991:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8999:4:7",
																														"nodeType": "YulLiteral",
																														"src": "8999:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8987:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "8987:3:7"
																												},
																												"nativeSrc": "8987:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "8987:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8957:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "8957:18:7"
																										},
																										"nativeSrc": "8957:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8957:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8942:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8942:6:7"
																								},
																								"nativeSrc": "8942:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8942:64:7"
																							},
																							"nativeSrc": "8942:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8942:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8847:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8847:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8856:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8856:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8844:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8844:2:7"
																					},
																					"nativeSrc": "8844:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8844:19:7"
																				},
																				"nativeSrc": "8841:179:7",
																				"nodeType": "YulIf",
																				"src": "8841:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9040:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9040:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9054:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "9054:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9062:1:7",
																											"nodeType": "YulLiteral",
																											"src": "9062:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9050:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "9050:3:7"
																									},
																									"nativeSrc": "9050:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "9050:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9066:1:7",
																									"nodeType": "YulLiteral",
																									"src": "9066:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9046:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "9046:3:7"
																							},
																							"nativeSrc": "9046:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9046:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9033:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9033:6:7"
																					},
																					"nativeSrc": "9033:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9033:36:7"
																				},
																				"nativeSrc": "9033:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9033:36:7"
																			}
																		]
																	},
																	"nativeSrc": "8461:618:7",
																	"nodeType": "YulCase",
																	"src": "8461:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8466:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8466:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9096:222:7",
																		"nodeType": "YulBlock",
																		"src": "9096:222:7",
																		"statements": [
																			{
																				"nativeSrc": "9110:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9110:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9123:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9123:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9114:5:7",
																						"nodeType": "YulTypedName",
																						"src": "9114:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9147:67:7",
																					"nodeType": "YulBlock",
																					"src": "9147:67:7",
																					"statements": [
																						{
																							"nativeSrc": "9165:35:7",
																							"nodeType": "YulAssignment",
																							"src": "9165:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9184:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "9184:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9189:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9189:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9180:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "9180:3:7"
																										},
																										"nativeSrc": "9180:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9180:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9174:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9174:5:7"
																								},
																								"nativeSrc": "9174:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9174:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9165:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9165:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9140:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9140:6:7"
																				},
																				"nativeSrc": "9137:77:7",
																				"nodeType": "YulIf",
																				"src": "9137:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9234:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9234:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9293:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9293:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9300:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9300:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9240:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "9240:52:7"
																							},
																							"nativeSrc": "9240:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9240:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9227:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9227:6:7"
																					},
																					"nativeSrc": "9227:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9227:81:7"
																				},
																				"nativeSrc": "9227:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9227:81:7"
																			}
																		]
																	},
																	"nativeSrc": "9088:230:7",
																	"nodeType": "YulCase",
																	"src": "9088:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8441:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8441:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8449:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8449:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8438:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8438:2:7"
																},
																"nativeSrc": "8438:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8438:14:7"
															},
															"nativeSrc": "8431:887:7",
															"nodeType": "YulSwitch",
															"src": "8431:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7929:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8010:4:7",
														"nodeType": "YulTypedName",
														"src": "8010:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8016:3:7",
														"nodeType": "YulTypedName",
														"src": "8016:3:7",
														"type": ""
													}
												],
												"src": "7929:1395:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ERC20_$651(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ERC20_$651(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$651(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ERC20_$651_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC20_$651(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$651t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$651_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b5060405161222538038061222583398181016040528101906100319190610249565b8181816003908161004291906104de565b50806004908161005291906104de565b5050508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505050506105ad565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100cb826100a2565b9050919050565b5f6100dc826100c1565b9050919050565b6100ec816100d2565b81146100f6575f80fd5b50565b5f81519050610107816100e3565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61015b82610115565b810181811067ffffffffffffffff8211171561017a57610179610125565b5b80604052505050565b5f61018c610091565b90506101988282610152565b919050565b5f67ffffffffffffffff8211156101b7576101b6610125565b5b6101c082610115565b9050602081019050919050565b8281835e5f83830152505050565b5f6101ed6101e88461019d565b610183565b90508281526020810184848401111561020957610208610111565b5b6102148482856101cd565b509392505050565b5f82601f8301126102305761022f61010d565b5b81516102408482602086016101db565b91505092915050565b5f805f606084860312156102605761025f61009a565b5b5f61026d868287016100f9565b935050602084015167ffffffffffffffff81111561028e5761028d61009e565b5b61029a8682870161021c565b925050604084015167ffffffffffffffff8111156102bb576102ba61009e565b5b6102c78682870161021c565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061031f57607f821691505b602082108103610332576103316102db565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610359565b61039e8683610359565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6103e26103dd6103d8846103b6565b6103bf565b6103b6565b9050919050565b5f819050919050565b6103fb836103c8565b61040f610407826103e9565b848454610365565b825550505050565b5f90565b610423610417565b61042e8184846103f2565b505050565b5b81811015610451576104465f8261041b565b600181019050610434565b5050565b601f8211156104965761046781610338565b6104708461034a565b8101602085101561047f578190505b61049361048b8561034a565b830182610433565b50505b505050565b5f82821c905092915050565b5f6104b65f198460080261049b565b1980831691505092915050565b5f6104ce83836104a7565b9150826002028217905092915050565b6104e7826102d1565b67ffffffffffffffff811115610500576104ff610125565b5b61050a8254610308565b610515828285610455565b5f60209050601f831160018114610546575f8415610534578287015190505b61053e85826104c3565b8655506105a5565b601f19841661055486610338565b5f5b8281101561057b57848901518255600182019150602085019450602081019050610556565b868310156105985784890151610594601f8916826104a7565b8355505b6001600288020188555050505b505050505050565b608051611c3d6105e85f395f81816105bc0152818161079c015281816108080152818161096e01528181610b9b0152610d110152611c3d5ff3fe608060405234801561000f575f80fd5b5060043610610171575f3560e01c806370a08231116100dc578063ba08765211610095578063ce96cb771161006f578063ce96cb77146104f9578063d905777e14610529578063dd62ed3e14610559578063ef8b30f71461058957610171565b8063ba08765214610469578063c63d75b614610499578063c6e6f592146104c957610171565b806370a082311461035b57806394bf804d1461038b57806395d89b41146103bb578063a9059cbb146103d9578063b3d7f6b914610409578063b460af941461043957610171565b806323b872dd1161012e57806323b872dd1461025f578063313ce5671461028f57806338d52e0f146102ad578063402d267d146102cb5780634cdad506146102fb5780636e553f651461032b57610171565b806301e1d1141461017557806306fdde031461019357806307a2d13a146101b1578063095ea7b3146101e15780630a28a4771461021157806318160ddd14610241575b5f80fd5b61017d6105b9565b60405161018a91906115f0565b60405180910390f35b61019b610657565b6040516101a89190611679565b60405180910390f35b6101cb60048036038101906101c691906116c7565b6106e7565b6040516101d891906115f0565b60405180910390f35b6101fb60048036038101906101f6919061174c565b610727565b60405161020891906117a4565b60405180910390f35b61022b600480360381019061022691906116c7565b610749565b60405161023891906115f0565b60405180910390f35b61024961075a565b60405161025691906115f0565b60405180910390f35b610279600480360381019061027491906117bd565b610763565b60405161028691906117a4565b60405180910390f35b610297610791565b6040516102a49190611828565b60405180910390f35b6102b5610799565b6040516102c29190611850565b60405180910390f35b6102e560048036038101906102e09190611869565b6107c0565b6040516102f291906115f0565b60405180910390f35b610315600480360381019061031091906116c7565b6107e9565b60405161032291906115f0565b60405180910390f35b61034560048036038101906103409190611894565b6107fa565b60405161035291906115f0565b60405180910390f35b61037560048036038101906103709190611869565b61091b565b60405161038291906115f0565b60405180910390f35b6103a560048036038101906103a09190611894565b610960565b6040516103b291906115f0565b60405180910390f35b6103c3610a81565b6040516103d09190611679565b60405180910390f35b6103f360048036038101906103ee919061174c565b610b11565b60405161040091906117a4565b60405180910390f35b610423600480360381019061041e91906116c7565b610b33565b60405161043091906115f0565b60405180910390f35b610453600480360381019061044e91906118d2565b610b44565b60405161046091906115f0565b60405180910390f35b610483600480360381019061047e91906118d2565b610cba565b60405161049091906115f0565b60405180910390f35b6104b360048036038101906104ae9190611869565b610e30565b6040516104c091906115f0565b60405180910390f35b6104e360048036038101906104de91906116c7565b610e59565b6040516104f091906115f0565b60405180910390f35b610513600480360381019061050e9190611869565b610e99565b60405161052091906115f0565b60405180910390f35b610543600480360381019061053e9190611869565b610eb2565b60405161055091906115f0565b60405180910390f35b610573600480360381019061056e9190611922565b610ec3565b60405161058091906115f0565b60405180910390f35b6105a3600480360381019061059e91906116c7565b610f45565b6040516105b091906115f0565b60405180910390f35b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106139190611850565b602060405180830381865afa15801561062e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106529190611974565b905090565b606060038054610666906119cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610692906119cc565b80156106dd5780601f106106b4576101008083540402835291602001916106dd565b820191905f5260205f20905b8154815290600101906020018083116106c057829003601f168201915b5050505050905090565b5f806106f161075a565b90505f811461071d57806107036105b9565b8461070e9190611a29565b6107189190611a97565b61071f565b825b915050919050565b5f80610731610f56565b905061073e818585610f5d565b600191505092915050565b5f61075382610e59565b9050919050565b5f600254905090565b5f8061076d610f56565b905061077a858285610f6f565b610785858585611002565b60019150509392505050565b5f6012905090565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b5f6107f3826106e7565b9050919050565b5f61080483610f45565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161086393929190611ac7565b6020604051808303815f875af115801561087f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108a39190611b26565b506108ae82826110f2565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7858460405161090d929190611b51565b60405180910390a392915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f61096a83610b33565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016109c993929190611ac7565b6020604051808303815f875af11580156109e5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a099190611b26565b50610a1482846110f2565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78386604051610a73929190611b51565b60405180910390a392915050565b606060048054610a90906119cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610abc906119cc565b8015610b075780601f10610ade57610100808354040283529160200191610b07565b820191905f5260205f20905b815481529060010190602001808311610aea57829003601f168201915b5050505050905090565b5f80610b1b610f56565b9050610b28818585611002565b600191505092915050565b5f610b3d826106e7565b9050919050565b5f610b4e84610749565b90508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b8f57610b8e823383610f6f565b5b610b998282611171565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84866040518363ffffffff1660e01b8152600401610bf4929190611b78565b6020604051808303815f875af1158015610c10573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c349190611b26565b508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8785604051610cab929190611b51565b60405180910390a49392505050565b5f610cc4846107e9565b90508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d0557610d04823386610f6f565b5b610d0f8285611171565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b8152600401610d6a929190611b78565b6020604051808303815f875af1158015610d86573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610daa9190611b26565b508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8488604051610e21929190611b51565b60405180910390a49392505050565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b5f80610e6361075a565b90505f8114610e8f57610e746105b9565b8184610e809190611a29565b610e8a9190611a97565b610e91565b825b915050919050565b5f610eab610ea68361091b565b6106e7565b9050919050565b5f610ebc8261091b565b9050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f610f4f82610e59565b9050919050565b5f33905090565b610f6a83838360016111f0565b505050565b5f610f7a8484610ec3565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610ffc5781811015610fed578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610fe493929190611b9f565b60405180910390fd5b610ffb84848484035f6111f0565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611072575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110699190611850565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110e2575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110d99190611850565b60405180910390fd5b6110ed8383836113bf565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611162575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016111599190611850565b60405180910390fd5b61116d5f83836113bf565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111e1575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016111d89190611850565b60405180910390fd5b6111ec825f836113bf565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611260575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016112579190611850565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112d0575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016112c79190611850565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156113b9578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113b091906115f0565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361140f578060025f8282546114039190611bd4565b925050819055506114dd565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611498578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161148f93929190611b9f565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611524578060025f828254039250508190555061156e565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115cb91906115f0565b60405180910390a3505050565b5f819050919050565b6115ea816115d8565b82525050565b5f6020820190506116035f8301846115e1565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61164b82611609565b6116558185611613565b9350611665818560208601611623565b61166e81611631565b840191505092915050565b5f6020820190508181035f8301526116918184611641565b905092915050565b5f80fd5b6116a6816115d8565b81146116b0575f80fd5b50565b5f813590506116c18161169d565b92915050565b5f602082840312156116dc576116db611699565b5b5f6116e9848285016116b3565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61171b826116f2565b9050919050565b61172b81611711565b8114611735575f80fd5b50565b5f8135905061174681611722565b92915050565b5f806040838503121561176257611761611699565b5b5f61176f85828601611738565b9250506020611780858286016116b3565b9150509250929050565b5f8115159050919050565b61179e8161178a565b82525050565b5f6020820190506117b75f830184611795565b92915050565b5f805f606084860312156117d4576117d3611699565b5b5f6117e186828701611738565b93505060206117f286828701611738565b9250506040611803868287016116b3565b9150509250925092565b5f60ff82169050919050565b6118228161180d565b82525050565b5f60208201905061183b5f830184611819565b92915050565b61184a81611711565b82525050565b5f6020820190506118635f830184611841565b92915050565b5f6020828403121561187e5761187d611699565b5b5f61188b84828501611738565b91505092915050565b5f80604083850312156118aa576118a9611699565b5b5f6118b7858286016116b3565b92505060206118c885828601611738565b9150509250929050565b5f805f606084860312156118e9576118e8611699565b5b5f6118f6868287016116b3565b935050602061190786828701611738565b925050604061191886828701611738565b9150509250925092565b5f806040838503121561193857611937611699565b5b5f61194585828601611738565b925050602061195685828601611738565b9150509250929050565b5f8151905061196e8161169d565b92915050565b5f6020828403121561198957611988611699565b5b5f61199684828501611960565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806119e357607f821691505b6020821081036119f6576119f561199f565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a33826115d8565b9150611a3e836115d8565b9250828202611a4c816115d8565b91508282048414831517611a6357611a626119fc565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611aa1826115d8565b9150611aac836115d8565b925082611abc57611abb611a6a565b5b828204905092915050565b5f606082019050611ada5f830186611841565b611ae76020830185611841565b611af460408301846115e1565b949350505050565b611b058161178a565b8114611b0f575f80fd5b50565b5f81519050611b2081611afc565b92915050565b5f60208284031215611b3b57611b3a611699565b5b5f611b4884828501611b12565b91505092915050565b5f604082019050611b645f8301856115e1565b611b7160208301846115e1565b9392505050565b5f604082019050611b8b5f830185611841565b611b9860208301846115e1565b9392505050565b5f606082019050611bb25f830186611841565b611bbf60208301856115e1565b611bcc60408301846115e1565b949350505050565b5f611bde826115d8565b9150611be9836115d8565b9250828201905080821115611c0157611c006119fc565b5b9291505056fea2646970667358221220258142a7eb067e2e8a157fdafb01d7a976ac5a61c3b6b0fd8ecaa275b0736a6f64736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2225 CODESIZE SUB DUP1 PUSH2 0x2225 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x249 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x4DE JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x52 SWAP2 SWAP1 PUSH2 0x4DE JUMP JUMPDEST POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH2 0x5AD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCB DUP3 PUSH2 0xA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDC DUP3 PUSH2 0xC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEC DUP2 PUSH2 0xD2 JUMP JUMPDEST DUP2 EQ PUSH2 0xF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x107 DUP2 PUSH2 0xE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x15B DUP3 PUSH2 0x115 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x17A JUMPI PUSH2 0x179 PUSH2 0x125 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18C PUSH2 0x91 JUMP JUMPDEST SWAP1 POP PUSH2 0x198 DUP3 DUP3 PUSH2 0x152 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B7 JUMPI PUSH2 0x1B6 PUSH2 0x125 JUMP JUMPDEST JUMPDEST PUSH2 0x1C0 DUP3 PUSH2 0x115 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1ED PUSH2 0x1E8 DUP5 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x209 JUMPI PUSH2 0x208 PUSH2 0x111 JUMP JUMPDEST JUMPDEST PUSH2 0x214 DUP5 DUP3 DUP6 PUSH2 0x1CD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x230 JUMPI PUSH2 0x22F PUSH2 0x10D JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x240 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x260 JUMPI PUSH2 0x25F PUSH2 0x9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26D DUP7 DUP3 DUP8 ADD PUSH2 0xF9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28E JUMPI PUSH2 0x28D PUSH2 0x9E JUMP JUMPDEST JUMPDEST PUSH2 0x29A DUP7 DUP3 DUP8 ADD PUSH2 0x21C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BB JUMPI PUSH2 0x2BA PUSH2 0x9E JUMP JUMPDEST JUMPDEST PUSH2 0x2C7 DUP7 DUP3 DUP8 ADD PUSH2 0x21C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x31F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x332 JUMPI PUSH2 0x331 PUSH2 0x2DB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x394 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x359 JUMP JUMPDEST PUSH2 0x39E DUP7 DUP4 PUSH2 0x359 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3E2 PUSH2 0x3DD PUSH2 0x3D8 DUP5 PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH2 0x3B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FB DUP4 PUSH2 0x3C8 JUMP JUMPDEST PUSH2 0x40F PUSH2 0x407 DUP3 PUSH2 0x3E9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x365 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x423 PUSH2 0x417 JUMP JUMPDEST PUSH2 0x42E DUP2 DUP5 DUP5 PUSH2 0x3F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x451 JUMPI PUSH2 0x446 PUSH0 DUP3 PUSH2 0x41B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x434 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x496 JUMPI PUSH2 0x467 DUP2 PUSH2 0x338 JUMP JUMPDEST PUSH2 0x470 DUP5 PUSH2 0x34A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x47F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x493 PUSH2 0x48B DUP6 PUSH2 0x34A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x433 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4B6 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x49B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4CE DUP4 DUP4 PUSH2 0x4A7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4E7 DUP3 PUSH2 0x2D1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x500 JUMPI PUSH2 0x4FF PUSH2 0x125 JUMP JUMPDEST JUMPDEST PUSH2 0x50A DUP3 SLOAD PUSH2 0x308 JUMP JUMPDEST PUSH2 0x515 DUP3 DUP3 DUP6 PUSH2 0x455 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x546 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x534 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x53E DUP6 DUP3 PUSH2 0x4C3 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x554 DUP7 PUSH2 0x338 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x57B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x556 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4A7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1C3D PUSH2 0x5E8 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x5BC ADD MSTORE DUP2 DUP2 PUSH2 0x79C ADD MSTORE DUP2 DUP2 PUSH2 0x808 ADD MSTORE DUP2 DUP2 PUSH2 0x96E ADD MSTORE DUP2 DUP2 PUSH2 0xB9B ADD MSTORE PUSH2 0xD11 ADD MSTORE PUSH2 0x1C3D PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x171 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xBA087652 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xCE96CB77 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCE96CB77 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0xD905777E EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0xEF8B30F7 EQ PUSH2 0x589 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0xBA087652 EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0xC63D75B6 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0xC6E6F592 EQ PUSH2 0x4C9 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x94BF804D EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xB3D7F6B9 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xB460AF94 EQ PUSH2 0x439 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x402D267D EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x4CDAD506 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x6E553F65 EQ PUSH2 0x32B JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x1E1D114 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x7A2D13A EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xA28A477 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x241 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17D PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x17BD JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH2 0x791 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x960 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C3 PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x423 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x453 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0xB44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x483 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x513 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x520 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x543 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x573 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x1922 JUMP JUMPDEST PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59E SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x613 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x62E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x652 SWAP2 SWAP1 PUSH2 0x1974 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x666 SWAP1 PUSH2 0x19CC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x692 SWAP1 PUSH2 0x19CC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6F1 PUSH2 0x75A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 EQ PUSH2 0x71D JUMPI DUP1 PUSH2 0x703 PUSH2 0x5B9 JUMP JUMPDEST DUP5 PUSH2 0x70E SWAP2 SWAP1 PUSH2 0x1A29 JUMP JUMPDEST PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST DUP3 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x731 PUSH2 0xF56 JUMP JUMPDEST SWAP1 POP PUSH2 0x73E DUP2 DUP6 DUP6 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x753 DUP3 PUSH2 0xE59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x76D PUSH2 0xF56 JUMP JUMPDEST SWAP1 POP PUSH2 0x77A DUP6 DUP3 DUP6 PUSH2 0xF6F JUMP JUMPDEST PUSH2 0x785 DUP6 DUP6 DUP6 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7F3 DUP3 PUSH2 0x6E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x804 DUP4 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x863 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x87F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST POP PUSH2 0x8AE DUP3 DUP3 PUSH2 0x10F2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x90D SWAP3 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x96A DUP4 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9E5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST POP PUSH2 0xA14 DUP3 DUP5 PUSH2 0x10F2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP4 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA73 SWAP3 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA90 SWAP1 PUSH2 0x19CC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xABC SWAP1 PUSH2 0x19CC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB07 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xADE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB07 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAEA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB1B PUSH2 0xF56 JUMP JUMPDEST SWAP1 POP PUSH2 0xB28 DUP2 DUP6 DUP6 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB3D DUP3 PUSH2 0x6E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB4E DUP5 PUSH2 0x749 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB8F JUMPI PUSH2 0xB8E DUP3 CALLER DUP4 PUSH2 0xF6F JUMP JUMPDEST JUMPDEST PUSH2 0xB99 DUP3 DUP3 PUSH2 0x1171 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B78 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC10 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC34 SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0xCAB SWAP3 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCC4 DUP5 PUSH2 0x7E9 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD05 JUMPI PUSH2 0xD04 DUP3 CALLER DUP7 PUSH2 0xF6F JUMP JUMPDEST JUMPDEST PUSH2 0xD0F DUP3 DUP6 PUSH2 0x1171 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6A SWAP3 SWAP2 SWAP1 PUSH2 0x1B78 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD86 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDAA SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB DUP5 DUP9 PUSH1 0x40 MLOAD PUSH2 0xE21 SWAP3 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE63 PUSH2 0x75A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 EQ PUSH2 0xE8F JUMPI PUSH2 0xE74 PUSH2 0x5B9 JUMP JUMPDEST DUP2 DUP5 PUSH2 0xE80 SWAP2 SWAP1 PUSH2 0x1A29 JUMP JUMPDEST PUSH2 0xE8A SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0xE91 JUMP JUMPDEST DUP3 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEAB PUSH2 0xEA6 DUP4 PUSH2 0x91B JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEBC DUP3 PUSH2 0x91B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF4F DUP3 PUSH2 0xE59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF6A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF7A DUP5 DUP5 PUSH2 0xEC3 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xFFC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xFED JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFFB DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1072 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10ED DUP4 DUP4 DUP4 PUSH2 0x13BF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1162 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1159 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x116D PUSH0 DUP4 DUP4 PUSH2 0x13BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11E1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D8 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11EC DUP3 PUSH0 DUP4 PUSH2 0x13BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1260 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1257 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12D0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C7 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x13B9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13B0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x140F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1403 SWAP2 SWAP1 PUSH2 0x1BD4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x14DD JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1498 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1524 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x156E JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x15CB SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15EA DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1603 PUSH0 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x164B DUP3 PUSH2 0x1609 JUMP JUMPDEST PUSH2 0x1655 DUP2 DUP6 PUSH2 0x1613 JUMP JUMPDEST SWAP4 POP PUSH2 0x1665 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1623 JUMP JUMPDEST PUSH2 0x166E DUP2 PUSH2 0x1631 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1691 DUP2 DUP5 PUSH2 0x1641 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16A6 DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x16B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16C1 DUP2 PUSH2 0x169D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16DC JUMPI PUSH2 0x16DB PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16E9 DUP5 DUP3 DUP6 ADD PUSH2 0x16B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x171B DUP3 PUSH2 0x16F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x172B DUP2 PUSH2 0x1711 JUMP JUMPDEST DUP2 EQ PUSH2 0x1735 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1746 DUP2 PUSH2 0x1722 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1762 JUMPI PUSH2 0x1761 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x176F DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1780 DUP6 DUP3 DUP7 ADD PUSH2 0x16B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x179E DUP2 PUSH2 0x178A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17B7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1795 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17D4 JUMPI PUSH2 0x17D3 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17E1 DUP7 DUP3 DUP8 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x17F2 DUP7 DUP3 DUP8 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1803 DUP7 DUP3 DUP8 ADD PUSH2 0x16B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1822 DUP2 PUSH2 0x180D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x183B PUSH0 DUP4 ADD DUP5 PUSH2 0x1819 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x184A DUP2 PUSH2 0x1711 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1863 PUSH0 DUP4 ADD DUP5 PUSH2 0x1841 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x187E JUMPI PUSH2 0x187D PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x188B DUP5 DUP3 DUP6 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18A9 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18B7 DUP6 DUP3 DUP7 ADD PUSH2 0x16B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18C8 DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18E9 JUMPI PUSH2 0x18E8 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18F6 DUP7 DUP3 DUP8 ADD PUSH2 0x16B3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1907 DUP7 DUP3 DUP8 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1918 DUP7 DUP3 DUP8 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1938 JUMPI PUSH2 0x1937 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1945 DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1956 DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x196E DUP2 PUSH2 0x169D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1989 JUMPI PUSH2 0x1988 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1996 DUP5 DUP3 DUP6 ADD PUSH2 0x1960 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19E3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19F6 JUMPI PUSH2 0x19F5 PUSH2 0x199F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A33 DUP3 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3E DUP4 PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1A4C DUP2 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1A63 JUMPI PUSH2 0x1A62 PUSH2 0x19FC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AA1 DUP3 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AAC DUP4 PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1ABC JUMPI PUSH2 0x1ABB PUSH2 0x1A6A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1ADA PUSH0 DUP4 ADD DUP7 PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x1AE7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x1AF4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1B05 DUP2 PUSH2 0x178A JUMP JUMPDEST DUP2 EQ PUSH2 0x1B0F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B20 DUP2 PUSH2 0x1AFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B3B JUMPI PUSH2 0x1B3A PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B48 DUP5 DUP3 DUP6 ADD PUSH2 0x1B12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B64 PUSH0 DUP4 ADD DUP6 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x1B71 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B8B PUSH0 DUP4 ADD DUP6 PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x1B98 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BB2 PUSH0 DUP4 ADD DUP7 PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x1BBF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x1BCC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BDE DUP3 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE9 DUP4 PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C01 JUMPI PUSH2 0x1C00 PUSH2 0x19FC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 DUP2 TIMESTAMP 0xA7 0xEB MOD PUSH31 0x2E8A157FDAFB01D7A976AC5A61C3B6B0FD8ECAA275B0736A6F64736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1004:4595:5:-:0;;;1088:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1195:4;1201:6;1675:5:1;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1229:5:5::1;1220:14;;;;;;;;::::0;::::1;1088:154:::0;;;1004:4595;;7:75:7;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:109::-;618:7;647:24;665:5;647:24;:::i;:::-;636:35;;568:109;;;:::o;683:148::-;769:37;800:5;769:37;:::i;:::-;762:5;759:48;749:76;;821:1;818;811:12;749:76;683:148;:::o;837:169::-;907:5;938:6;932:13;923:22;;954:46;994:5;954:46;:::i;:::-;837:169;;;;:::o;1012:117::-;1121:1;1118;1111:12;1135:117;1244:1;1241;1234:12;1258:102;1299:6;1350:2;1346:7;1341:2;1334:5;1330:14;1326:28;1316:38;;1258:102;;;:::o;1366:180::-;1414:77;1411:1;1404:88;1511:4;1508:1;1501:15;1535:4;1532:1;1525:15;1552:281;1635:27;1657:4;1635:27;:::i;:::-;1627:6;1623:40;1765:6;1753:10;1750:22;1729:18;1717:10;1714:34;1711:62;1708:88;;;1776:18;;:::i;:::-;1708:88;1816:10;1812:2;1805:22;1595:238;1552:281;;:::o;1839:129::-;1873:6;1900:20;;:::i;:::-;1890:30;;1929:33;1957:4;1949:6;1929:33;:::i;:::-;1839:129;;;:::o;1974:308::-;2036:4;2126:18;2118:6;2115:30;2112:56;;;2148:18;;:::i;:::-;2112:56;2186:29;2208:6;2186:29;:::i;:::-;2178:37;;2270:4;2264;2260:15;2252:23;;1974:308;;;:::o;2288:139::-;2377:6;2372:3;2367;2361:23;2418:1;2409:6;2404:3;2400:16;2393:27;2288:139;;;:::o;2433:434::-;2522:5;2547:66;2563:49;2605:6;2563:49;:::i;:::-;2547:66;:::i;:::-;2538:75;;2636:6;2629:5;2622:21;2674:4;2667:5;2663:16;2712:3;2703:6;2698:3;2694:16;2691:25;2688:112;;;2719:79;;:::i;:::-;2688:112;2809:52;2854:6;2849:3;2844;2809:52;:::i;:::-;2528:339;2433:434;;;;;:::o;2887:355::-;2954:5;3003:3;2996:4;2988:6;2984:17;2980:27;2970:122;;3011:79;;:::i;:::-;2970:122;3121:6;3115:13;3146:90;3232:3;3224:6;3217:4;3209:6;3205:17;3146:90;:::i;:::-;3137:99;;2960:282;2887:355;;;;:::o;3248:1035::-;3369:6;3377;3385;3434:2;3422:9;3413:7;3409:23;3405:32;3402:119;;;3440:79;;:::i;:::-;3402:119;3560:1;3585:77;3654:7;3645:6;3634:9;3630:22;3585:77;:::i;:::-;3575:87;;3531:141;3732:2;3721:9;3717:18;3711:25;3763:18;3755:6;3752:30;3749:117;;;3785:79;;:::i;:::-;3749:117;3890:74;3956:7;3947:6;3936:9;3932:22;3890:74;:::i;:::-;3880:84;;3682:292;4034:2;4023:9;4019:18;4013:25;4065:18;4057:6;4054:30;4051:117;;;4087:79;;:::i;:::-;4051:117;4192:74;4258:7;4249:6;4238:9;4234:22;4192:74;:::i;:::-;4182:84;;3984:292;3248:1035;;;;;:::o;4289:99::-;4341:6;4375:5;4369:12;4359:22;;4289:99;;;:::o;4394:180::-;4442:77;4439:1;4432:88;4539:4;4536:1;4529:15;4563:4;4560:1;4553:15;4580:320;4624:6;4661:1;4655:4;4651:12;4641:22;;4708:1;4702:4;4698:12;4729:18;4719:81;;4785:4;4777:6;4773:17;4763:27;;4719:81;4847:2;4839:6;4836:14;4816:18;4813:38;4810:84;;4866:18;;:::i;:::-;4810:84;4631:269;4580:320;;;:::o;4906:141::-;4955:4;4978:3;4970:11;;5001:3;4998:1;4991:14;5035:4;5032:1;5022:18;5014:26;;4906:141;;;:::o;5053:93::-;5090:6;5137:2;5132;5125:5;5121:14;5117:23;5107:33;;5053:93;;;:::o;5152:107::-;5196:8;5246:5;5240:4;5236:16;5215:37;;5152:107;;;;:::o;5265:393::-;5334:6;5384:1;5372:10;5368:18;5407:97;5437:66;5426:9;5407:97;:::i;:::-;5525:39;5555:8;5544:9;5525:39;:::i;:::-;5513:51;;5597:4;5593:9;5586:5;5582:21;5573:30;;5646:4;5636:8;5632:19;5625:5;5622:30;5612:40;;5341:317;;5265:393;;;;;:::o;5664:77::-;5701:7;5730:5;5719:16;;5664:77;;;:::o;5747:60::-;5775:3;5796:5;5789:12;;5747:60;;;:::o;5813:142::-;5863:9;5896:53;5914:34;5923:24;5941:5;5923:24;:::i;:::-;5914:34;:::i;:::-;5896:53;:::i;:::-;5883:66;;5813:142;;;:::o;5961:75::-;6004:3;6025:5;6018:12;;5961:75;;;:::o;6042:269::-;6152:39;6183:7;6152:39;:::i;:::-;6213:91;6262:41;6286:16;6262:41;:::i;:::-;6254:6;6247:4;6241:11;6213:91;:::i;:::-;6207:4;6200:105;6118:193;6042:269;;;:::o;6317:73::-;6362:3;6317:73;:::o;6396:189::-;6473:32;;:::i;:::-;6514:65;6572:6;6564;6558:4;6514:65;:::i;:::-;6449:136;6396:189;;:::o;6591:186::-;6651:120;6668:3;6661:5;6658:14;6651:120;;;6722:39;6759:1;6752:5;6722:39;:::i;:::-;6695:1;6688:5;6684:13;6675:22;;6651:120;;;6591:186;;:::o;6783:543::-;6884:2;6879:3;6876:11;6873:446;;;6918:38;6950:5;6918:38;:::i;:::-;7002:29;7020:10;7002:29;:::i;:::-;6992:8;6988:44;7185:2;7173:10;7170:18;7167:49;;;7206:8;7191:23;;7167:49;7229:80;7285:22;7303:3;7285:22;:::i;:::-;7275:8;7271:37;7258:11;7229:80;:::i;:::-;6888:431;;6873:446;6783:543;;;:::o;7332:117::-;7386:8;7436:5;7430:4;7426:16;7405:37;;7332:117;;;;:::o;7455:169::-;7499:6;7532:51;7580:1;7576:6;7568:5;7565:1;7561:13;7532:51;:::i;:::-;7528:56;7613:4;7607;7603:15;7593:25;;7506:118;7455:169;;;;:::o;7629:295::-;7705:4;7851:29;7876:3;7870:4;7851:29;:::i;:::-;7843:37;;7913:3;7910:1;7906:11;7900:4;7897:21;7889:29;;7629:295;;;;:::o;7929:1395::-;8046:37;8079:3;8046:37;:::i;:::-;8148:18;8140:6;8137:30;8134:56;;;8170:18;;:::i;:::-;8134:56;8214:38;8246:4;8240:11;8214:38;:::i;:::-;8299:67;8359:6;8351;8345:4;8299:67;:::i;:::-;8393:1;8417:4;8404:17;;8449:2;8441:6;8438:14;8466:1;8461:618;;;;9123:1;9140:6;9137:77;;;9189:9;9184:3;9180:19;9174:26;9165:35;;9137:77;9240:67;9300:6;9293:5;9240:67;:::i;:::-;9234:4;9227:81;9096:222;8431:887;;8461:618;8513:4;8509:9;8501:6;8497:22;8547:37;8579:4;8547:37;:::i;:::-;8606:1;8620:208;8634:7;8631:1;8628:14;8620:208;;;8713:9;8708:3;8704:19;8698:26;8690:6;8683:42;8764:1;8756:6;8752:14;8742:24;;8811:2;8800:9;8796:18;8783:31;;8657:4;8654:1;8650:12;8645:17;;8620:208;;;8856:6;8847:7;8844:19;8841:179;;;8914:9;8909:3;8905:19;8899:26;8957:48;8999:4;8991:6;8987:17;8976:9;8957:48;:::i;:::-;8949:6;8942:64;8864:156;8841:179;9066:1;9062;9054:6;9050:14;9046:22;9040:4;9033:36;8468:611;;;8431:887;;8021:1303;;;7929:1395;;:::o;1004:4595:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 3933,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 4592,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_524": {
									"entryPoint": 4465,
									"id": 524,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 4338,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 3926,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 3951,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 4098,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 5055,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 3779,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 1831,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@asset_830": {
									"entryPoint": 1945,
									"id": 830,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 2331,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@convertToAssets_1080": {
									"entryPoint": 1767,
									"id": 1080,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@convertToShares_1055": {
									"entryPoint": 3673,
									"id": 1055,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 1937,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@deposit_871": {
									"entryPoint": 2042,
									"id": 871,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@maxDeposit_1142": {
									"entryPoint": 1984,
									"id": 1142,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxMint_1156": {
									"entryPoint": 3632,
									"id": 1156,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxRedeem_1182": {
									"entryPoint": 3762,
									"id": 1182,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxWithdraw_1170": {
									"entryPoint": 3737,
									"id": 1170,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_912": {
									"entryPoint": 2400,
									"id": 912,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 1623,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@previewDeposit_1092": {
									"entryPoint": 3909,
									"id": 1092,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@previewMint_1104": {
									"entryPoint": 2867,
									"id": 1104,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@previewRedeem_1128": {
									"entryPoint": 2025,
									"id": 1128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@previewWithdraw_1116": {
									"entryPoint": 1865,
									"id": 1116,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@redeem_1016": {
									"entryPoint": 3258,
									"id": 1016,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 2689,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalAssets_1030": {
									"entryPoint": 1465,
									"id": 1030,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": 1882,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 1891,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 2833,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdraw_964": {
									"entryPoint": 2884,
									"id": 964,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 6292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_addresst_address": {
									"entryPoint": 6354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6855,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7032,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7071,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6993,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5667,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6652,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6762,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6559,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5785,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11732:7",
										"nodeType": "YulBlock",
										"src": "0:11732:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:7",
													"nodeType": "YulBlock",
													"src": "52:32:7",
													"statements": [
														{
															"nativeSrc": "62:16:7",
															"nodeType": "YulAssignment",
															"src": "62:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:7",
																"nodeType": "YulIdentifier",
																"src": "73:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:7",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:7",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:77:7"
											},
											{
												"body": {
													"nativeSrc": "155:53:7",
													"nodeType": "YulBlock",
													"src": "155:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:7"
																		},
																		"nativeSrc": "177:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:7"
																},
																"nativeSrc": "165:37:7",
																"nodeType": "YulFunctionCall",
																"src": "165:37:7"
															},
															"nativeSrc": "165:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:7",
														"nodeType": "YulTypedName",
														"src": "143:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:7",
														"nodeType": "YulTypedName",
														"src": "150:3:7",
														"type": ""
													}
												],
												"src": "90:118:7"
											},
											{
												"body": {
													"nativeSrc": "312:124:7",
													"nodeType": "YulBlock",
													"src": "312:124:7",
													"statements": [
														{
															"nativeSrc": "322:26:7",
															"nodeType": "YulAssignment",
															"src": "322:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:7",
																		"nodeType": "YulLiteral",
																		"src": "345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:7"
																},
																"nativeSrc": "330:18:7",
																"nodeType": "YulFunctionCall",
																"src": "330:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:7",
																				"nodeType": "YulLiteral",
																				"src": "426:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:7"
																		},
																		"nativeSrc": "411:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:7"
																},
																"nativeSrc": "358:71:7",
																"nodeType": "YulFunctionCall",
																"src": "358:71:7"
															},
															"nativeSrc": "358:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:7",
														"nodeType": "YulTypedName",
														"src": "284:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:7",
														"nodeType": "YulTypedName",
														"src": "296:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:7",
														"nodeType": "YulTypedName",
														"src": "307:4:7",
														"type": ""
													}
												],
												"src": "214:222:7"
											},
											{
												"body": {
													"nativeSrc": "501:40:7",
													"nodeType": "YulBlock",
													"src": "501:40:7",
													"statements": [
														{
															"nativeSrc": "512:22:7",
															"nodeType": "YulAssignment",
															"src": "512:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "528:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "528:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "522:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:7"
																},
																"nativeSrc": "522:12:7",
																"nodeType": "YulFunctionCall",
																"src": "522:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "512:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "512:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "442:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "484:5:7",
														"nodeType": "YulTypedName",
														"src": "484:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "494:6:7",
														"nodeType": "YulTypedName",
														"src": "494:6:7",
														"type": ""
													}
												],
												"src": "442:99:7"
											},
											{
												"body": {
													"nativeSrc": "643:73:7",
													"nodeType": "YulBlock",
													"src": "643:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "660:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "660:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "665:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "665:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "653:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:7"
																},
																"nativeSrc": "653:19:7",
																"nodeType": "YulFunctionCall",
																"src": "653:19:7"
															},
															"nativeSrc": "653:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "653:19:7"
														},
														{
															"nativeSrc": "681:29:7",
															"nodeType": "YulAssignment",
															"src": "681:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "700:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "700:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "705:4:7",
																		"nodeType": "YulLiteral",
																		"src": "705:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "696:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "696:3:7"
																},
																"nativeSrc": "696:14:7",
																"nodeType": "YulFunctionCall",
																"src": "696:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "681:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "681:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "547:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "615:3:7",
														"nodeType": "YulTypedName",
														"src": "615:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "620:6:7",
														"nodeType": "YulTypedName",
														"src": "620:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "631:11:7",
														"nodeType": "YulTypedName",
														"src": "631:11:7",
														"type": ""
													}
												],
												"src": "547:169:7"
											},
											{
												"body": {
													"nativeSrc": "784:77:7",
													"nodeType": "YulBlock",
													"src": "784:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "801:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "801:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "806:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "806:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "811:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "811:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "795:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "795:5:7"
																},
																"nativeSrc": "795:23:7",
																"nodeType": "YulFunctionCall",
																"src": "795:23:7"
															},
															"nativeSrc": "795:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "795:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "838:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "838:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "843:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "843:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "834:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "834:3:7"
																		},
																		"nativeSrc": "834:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "834:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "852:1:7",
																		"nodeType": "YulLiteral",
																		"src": "852:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "827:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "827:6:7"
																},
																"nativeSrc": "827:27:7",
																"nodeType": "YulFunctionCall",
																"src": "827:27:7"
															},
															"nativeSrc": "827:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "827:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "722:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "766:3:7",
														"nodeType": "YulTypedName",
														"src": "766:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "771:3:7",
														"nodeType": "YulTypedName",
														"src": "771:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "776:6:7",
														"nodeType": "YulTypedName",
														"src": "776:6:7",
														"type": ""
													}
												],
												"src": "722:139:7"
											},
											{
												"body": {
													"nativeSrc": "915:54:7",
													"nodeType": "YulBlock",
													"src": "915:54:7",
													"statements": [
														{
															"nativeSrc": "925:38:7",
															"nodeType": "YulAssignment",
															"src": "925:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "943:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "943:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "950:2:7",
																				"nodeType": "YulLiteral",
																				"src": "950:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "939:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:7"
																		},
																		"nativeSrc": "939:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "939:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "959:2:7",
																				"nodeType": "YulLiteral",
																				"src": "959:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "955:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:7"
																		},
																		"nativeSrc": "955:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "955:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "935:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:7"
																},
																"nativeSrc": "935:28:7",
																"nodeType": "YulFunctionCall",
																"src": "935:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "925:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "925:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "867:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "898:5:7",
														"nodeType": "YulTypedName",
														"src": "898:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "908:6:7",
														"nodeType": "YulTypedName",
														"src": "908:6:7",
														"type": ""
													}
												],
												"src": "867:102:7"
											},
											{
												"body": {
													"nativeSrc": "1067:285:7",
													"nodeType": "YulBlock",
													"src": "1067:285:7",
													"statements": [
														{
															"nativeSrc": "1077:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1077:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1124:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1124:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1091:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "1091:32:7"
																},
																"nativeSrc": "1091:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1091:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1081:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1081:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1139:78:7",
															"nodeType": "YulAssignment",
															"src": "1139:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1205:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1205:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1210:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1210:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1146:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "1146:58:7"
																},
																"nativeSrc": "1146:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1146:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1139:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1139:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1265:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1265:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1272:4:7",
																				"nodeType": "YulLiteral",
																				"src": "1272:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1261:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1261:3:7"
																		},
																		"nativeSrc": "1261:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1261:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1279:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1279:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1284:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1284:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1226:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "1226:34:7"
																},
																"nativeSrc": "1226:65:7",
																"nodeType": "YulFunctionCall",
																"src": "1226:65:7"
															},
															"nativeSrc": "1226:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "1226:65:7"
														},
														{
															"nativeSrc": "1300:46:7",
															"nodeType": "YulAssignment",
															"src": "1300:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1311:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1311:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1338:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1338:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1316:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "1316:21:7"
																		},
																		"nativeSrc": "1316:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1307:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1307:3:7"
																},
																"nativeSrc": "1307:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1307:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1300:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1300:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "975:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1048:5:7",
														"nodeType": "YulTypedName",
														"src": "1048:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1055:3:7",
														"nodeType": "YulTypedName",
														"src": "1055:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1063:3:7",
														"nodeType": "YulTypedName",
														"src": "1063:3:7",
														"type": ""
													}
												],
												"src": "975:377:7"
											},
											{
												"body": {
													"nativeSrc": "1476:195:7",
													"nodeType": "YulBlock",
													"src": "1476:195:7",
													"statements": [
														{
															"nativeSrc": "1486:26:7",
															"nodeType": "YulAssignment",
															"src": "1486:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1509:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1509:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1494:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1494:3:7"
																},
																"nativeSrc": "1494:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1494:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1486:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1486:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1533:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1533:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1544:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1544:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1529:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:7"
																		},
																		"nativeSrc": "1529:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1529:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1552:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1552:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1558:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1558:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1548:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:7"
																		},
																		"nativeSrc": "1548:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1548:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1522:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1522:6:7"
																},
																"nativeSrc": "1522:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1522:47:7"
															},
															"nativeSrc": "1522:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1522:47:7"
														},
														{
															"nativeSrc": "1578:86:7",
															"nodeType": "YulAssignment",
															"src": "1578:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1650:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1650:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1659:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1659:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1586:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1586:63:7"
																},
																"nativeSrc": "1586:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1586:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1578:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1578:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1358:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1448:9:7",
														"nodeType": "YulTypedName",
														"src": "1448:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1460:6:7",
														"nodeType": "YulTypedName",
														"src": "1460:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1471:4:7",
														"nodeType": "YulTypedName",
														"src": "1471:4:7",
														"type": ""
													}
												],
												"src": "1358:313:7"
											},
											{
												"body": {
													"nativeSrc": "1717:35:7",
													"nodeType": "YulBlock",
													"src": "1717:35:7",
													"statements": [
														{
															"nativeSrc": "1727:19:7",
															"nodeType": "YulAssignment",
															"src": "1727:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1743:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1743:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1737:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1737:5:7"
																},
																"nativeSrc": "1737:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1737:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1727:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1727:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1677:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1710:6:7",
														"nodeType": "YulTypedName",
														"src": "1710:6:7",
														"type": ""
													}
												],
												"src": "1677:75:7"
											},
											{
												"body": {
													"nativeSrc": "1847:28:7",
													"nodeType": "YulBlock",
													"src": "1847:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1864:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1864:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1867:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1867:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1857:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1857:6:7"
																},
																"nativeSrc": "1857:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1857:12:7"
															},
															"nativeSrc": "1857:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1857:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1758:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1758:117:7"
											},
											{
												"body": {
													"nativeSrc": "1970:28:7",
													"nodeType": "YulBlock",
													"src": "1970:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1987:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1987:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1990:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1990:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1980:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:7"
																},
																"nativeSrc": "1980:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1980:12:7"
															},
															"nativeSrc": "1980:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1980:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1881:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1881:117:7"
											},
											{
												"body": {
													"nativeSrc": "2047:79:7",
													"nodeType": "YulBlock",
													"src": "2047:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2104:16:7",
																"nodeType": "YulBlock",
																"src": "2104:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2113:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2113:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2116:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2116:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2106:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2106:6:7"
																			},
																			"nativeSrc": "2106:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2106:12:7"
																		},
																		"nativeSrc": "2106:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2106:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2070:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2070:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2095:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2095:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2077:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2077:17:7"
																				},
																				"nativeSrc": "2077:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2077:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2067:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2067:2:7"
																		},
																		"nativeSrc": "2067:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2067:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2060:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2060:6:7"
																},
																"nativeSrc": "2060:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2060:43:7"
															},
															"nativeSrc": "2057:63:7",
															"nodeType": "YulIf",
															"src": "2057:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2004:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2040:5:7",
														"nodeType": "YulTypedName",
														"src": "2040:5:7",
														"type": ""
													}
												],
												"src": "2004:122:7"
											},
											{
												"body": {
													"nativeSrc": "2184:87:7",
													"nodeType": "YulBlock",
													"src": "2184:87:7",
													"statements": [
														{
															"nativeSrc": "2194:29:7",
															"nodeType": "YulAssignment",
															"src": "2194:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2216:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2216:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2203:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2203:12:7"
																},
																"nativeSrc": "2203:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2203:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2194:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2194:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2259:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2259:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2232:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2232:26:7"
																},
																"nativeSrc": "2232:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2232:33:7"
															},
															"nativeSrc": "2232:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2232:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2132:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2162:6:7",
														"nodeType": "YulTypedName",
														"src": "2162:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2170:3:7",
														"nodeType": "YulTypedName",
														"src": "2170:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2178:5:7",
														"nodeType": "YulTypedName",
														"src": "2178:5:7",
														"type": ""
													}
												],
												"src": "2132:139:7"
											},
											{
												"body": {
													"nativeSrc": "2343:263:7",
													"nodeType": "YulBlock",
													"src": "2343:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2389:83:7",
																"nodeType": "YulBlock",
																"src": "2389:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2391:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2391:77:7"
																			},
																			"nativeSrc": "2391:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2391:79:7"
																		},
																		"nativeSrc": "2391:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2391:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2364:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2364:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2373:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2373:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2360:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2360:3:7"
																		},
																		"nativeSrc": "2360:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2360:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2385:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2385:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2356:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2356:3:7"
																},
																"nativeSrc": "2356:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2356:32:7"
															},
															"nativeSrc": "2353:119:7",
															"nodeType": "YulIf",
															"src": "2353:119:7"
														},
														{
															"nativeSrc": "2482:117:7",
															"nodeType": "YulBlock",
															"src": "2482:117:7",
															"statements": [
																{
																	"nativeSrc": "2497:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2497:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2511:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2511:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2501:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2501:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2526:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2526:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2561:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2561:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2572:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2572:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2557:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2557:3:7"
																				},
																				"nativeSrc": "2557:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2557:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2581:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2581:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2536:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2536:20:7"
																		},
																		"nativeSrc": "2536:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2536:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2526:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2526:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2277:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2313:9:7",
														"nodeType": "YulTypedName",
														"src": "2313:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2324:7:7",
														"nodeType": "YulTypedName",
														"src": "2324:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2336:6:7",
														"nodeType": "YulTypedName",
														"src": "2336:6:7",
														"type": ""
													}
												],
												"src": "2277:329:7"
											},
											{
												"body": {
													"nativeSrc": "2657:81:7",
													"nodeType": "YulBlock",
													"src": "2657:81:7",
													"statements": [
														{
															"nativeSrc": "2667:65:7",
															"nodeType": "YulAssignment",
															"src": "2667:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2682:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2682:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2689:42:7",
																		"nodeType": "YulLiteral",
																		"src": "2689:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2678:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2678:3:7"
																},
																"nativeSrc": "2678:54:7",
																"nodeType": "YulFunctionCall",
																"src": "2678:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2667:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2667:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2612:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2639:5:7",
														"nodeType": "YulTypedName",
														"src": "2639:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2649:7:7",
														"nodeType": "YulTypedName",
														"src": "2649:7:7",
														"type": ""
													}
												],
												"src": "2612:126:7"
											},
											{
												"body": {
													"nativeSrc": "2789:51:7",
													"nodeType": "YulBlock",
													"src": "2789:51:7",
													"statements": [
														{
															"nativeSrc": "2799:35:7",
															"nodeType": "YulAssignment",
															"src": "2799:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2828:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2828:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2810:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2810:17:7"
																},
																"nativeSrc": "2810:24:7",
																"nodeType": "YulFunctionCall",
																"src": "2810:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2799:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2799:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2744:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2771:5:7",
														"nodeType": "YulTypedName",
														"src": "2771:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2781:7:7",
														"nodeType": "YulTypedName",
														"src": "2781:7:7",
														"type": ""
													}
												],
												"src": "2744:96:7"
											},
											{
												"body": {
													"nativeSrc": "2889:79:7",
													"nodeType": "YulBlock",
													"src": "2889:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2946:16:7",
																"nodeType": "YulBlock",
																"src": "2946:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2955:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2955:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2958:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2958:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2948:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2948:6:7"
																			},
																			"nativeSrc": "2948:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2948:12:7"
																		},
																		"nativeSrc": "2948:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2948:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2912:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2912:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2937:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2937:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2919:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2919:17:7"
																				},
																				"nativeSrc": "2919:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2919:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2909:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2909:2:7"
																		},
																		"nativeSrc": "2909:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2909:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2902:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2902:6:7"
																},
																"nativeSrc": "2902:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2902:43:7"
															},
															"nativeSrc": "2899:63:7",
															"nodeType": "YulIf",
															"src": "2899:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2846:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2882:5:7",
														"nodeType": "YulTypedName",
														"src": "2882:5:7",
														"type": ""
													}
												],
												"src": "2846:122:7"
											},
											{
												"body": {
													"nativeSrc": "3026:87:7",
													"nodeType": "YulBlock",
													"src": "3026:87:7",
													"statements": [
														{
															"nativeSrc": "3036:29:7",
															"nodeType": "YulAssignment",
															"src": "3036:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3058:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3058:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3045:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3045:12:7"
																},
																"nativeSrc": "3045:20:7",
																"nodeType": "YulFunctionCall",
																"src": "3045:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3036:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3036:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3101:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3101:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3074:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3074:26:7"
																},
																"nativeSrc": "3074:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3074:33:7"
															},
															"nativeSrc": "3074:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3074:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2974:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3004:6:7",
														"nodeType": "YulTypedName",
														"src": "3004:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3012:3:7",
														"nodeType": "YulTypedName",
														"src": "3012:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3020:5:7",
														"nodeType": "YulTypedName",
														"src": "3020:5:7",
														"type": ""
													}
												],
												"src": "2974:139:7"
											},
											{
												"body": {
													"nativeSrc": "3202:391:7",
													"nodeType": "YulBlock",
													"src": "3202:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3248:83:7",
																"nodeType": "YulBlock",
																"src": "3248:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3250:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3250:77:7"
																			},
																			"nativeSrc": "3250:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3250:79:7"
																		},
																		"nativeSrc": "3250:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3250:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3223:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3223:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3232:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3219:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3219:3:7"
																		},
																		"nativeSrc": "3219:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3219:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3244:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3244:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3215:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3215:3:7"
																},
																"nativeSrc": "3215:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3215:32:7"
															},
															"nativeSrc": "3212:119:7",
															"nodeType": "YulIf",
															"src": "3212:119:7"
														},
														{
															"nativeSrc": "3341:117:7",
															"nodeType": "YulBlock",
															"src": "3341:117:7",
															"statements": [
																{
																	"nativeSrc": "3356:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3356:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3370:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3370:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3360:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3360:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3385:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3385:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3420:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3420:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3431:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3431:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3416:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3416:3:7"
																				},
																				"nativeSrc": "3416:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3440:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3440:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3395:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3395:20:7"
																		},
																		"nativeSrc": "3395:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3395:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3385:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3385:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3468:118:7",
															"nodeType": "YulBlock",
															"src": "3468:118:7",
															"statements": [
																{
																	"nativeSrc": "3483:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3483:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3497:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3497:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3487:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3487:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3513:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3513:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3548:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3548:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3559:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3559:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3544:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3544:3:7"
																				},
																				"nativeSrc": "3544:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3544:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3568:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3568:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3523:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3523:20:7"
																		},
																		"nativeSrc": "3523:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3523:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3513:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3513:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3119:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3164:9:7",
														"nodeType": "YulTypedName",
														"src": "3164:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3175:7:7",
														"nodeType": "YulTypedName",
														"src": "3175:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3187:6:7",
														"nodeType": "YulTypedName",
														"src": "3187:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3195:6:7",
														"nodeType": "YulTypedName",
														"src": "3195:6:7",
														"type": ""
													}
												],
												"src": "3119:474:7"
											},
											{
												"body": {
													"nativeSrc": "3641:48:7",
													"nodeType": "YulBlock",
													"src": "3641:48:7",
													"statements": [
														{
															"nativeSrc": "3651:32:7",
															"nodeType": "YulAssignment",
															"src": "3651:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3676:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3676:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3669:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3669:6:7"
																		},
																		"nativeSrc": "3669:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3669:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3662:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3662:6:7"
																},
																"nativeSrc": "3662:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3662:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3651:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3651:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3599:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3623:5:7",
														"nodeType": "YulTypedName",
														"src": "3623:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3633:7:7",
														"nodeType": "YulTypedName",
														"src": "3633:7:7",
														"type": ""
													}
												],
												"src": "3599:90:7"
											},
											{
												"body": {
													"nativeSrc": "3754:50:7",
													"nodeType": "YulBlock",
													"src": "3754:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3771:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3771:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3791:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3791:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3776:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3776:14:7"
																		},
																		"nativeSrc": "3776:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3776:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3764:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3764:6:7"
																},
																"nativeSrc": "3764:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3764:34:7"
															},
															"nativeSrc": "3764:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3764:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3695:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3742:5:7",
														"nodeType": "YulTypedName",
														"src": "3742:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3749:3:7",
														"nodeType": "YulTypedName",
														"src": "3749:3:7",
														"type": ""
													}
												],
												"src": "3695:109:7"
											},
											{
												"body": {
													"nativeSrc": "3902:118:7",
													"nodeType": "YulBlock",
													"src": "3902:118:7",
													"statements": [
														{
															"nativeSrc": "3912:26:7",
															"nodeType": "YulAssignment",
															"src": "3912:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3924:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3924:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3935:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3935:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3920:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:7"
																},
																"nativeSrc": "3920:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3920:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3912:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3912:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3986:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3986:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3999:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3999:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4010:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4010:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3995:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3995:3:7"
																		},
																		"nativeSrc": "3995:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3995:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3948:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3948:37:7"
																},
																"nativeSrc": "3948:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3948:65:7"
															},
															"nativeSrc": "3948:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3948:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3810:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3874:9:7",
														"nodeType": "YulTypedName",
														"src": "3874:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3886:6:7",
														"nodeType": "YulTypedName",
														"src": "3886:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3897:4:7",
														"nodeType": "YulTypedName",
														"src": "3897:4:7",
														"type": ""
													}
												],
												"src": "3810:210:7"
											},
											{
												"body": {
													"nativeSrc": "4126:519:7",
													"nodeType": "YulBlock",
													"src": "4126:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4172:83:7",
																"nodeType": "YulBlock",
																"src": "4172:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4174:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4174:77:7"
																			},
																			"nativeSrc": "4174:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4174:79:7"
																		},
																		"nativeSrc": "4174:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4147:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4147:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4156:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4143:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:7"
																		},
																		"nativeSrc": "4143:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4168:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4139:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:7"
																},
																"nativeSrc": "4139:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4139:32:7"
															},
															"nativeSrc": "4136:119:7",
															"nodeType": "YulIf",
															"src": "4136:119:7"
														},
														{
															"nativeSrc": "4265:117:7",
															"nodeType": "YulBlock",
															"src": "4265:117:7",
															"statements": [
																{
																	"nativeSrc": "4280:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4280:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4294:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4294:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4284:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4284:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4309:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4309:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4344:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4344:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4355:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4355:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4340:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4340:3:7"
																				},
																				"nativeSrc": "4340:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4340:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4364:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4364:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4319:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4319:20:7"
																		},
																		"nativeSrc": "4319:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4309:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4309:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4392:118:7",
															"nodeType": "YulBlock",
															"src": "4392:118:7",
															"statements": [
																{
																	"nativeSrc": "4407:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4407:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4421:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4411:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4411:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4437:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4437:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4472:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4472:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4483:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4483:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4468:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4468:3:7"
																				},
																				"nativeSrc": "4468:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4468:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4492:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4492:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4447:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4447:20:7"
																		},
																		"nativeSrc": "4447:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4437:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4437:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4520:118:7",
															"nodeType": "YulBlock",
															"src": "4520:118:7",
															"statements": [
																{
																	"nativeSrc": "4535:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4535:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4549:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4549:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4539:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4539:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:7"
																				},
																				"nativeSrc": "4596:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:7"
																		},
																		"nativeSrc": "4575:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4565:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4026:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:7",
														"nodeType": "YulTypedName",
														"src": "4080:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4091:7:7",
														"nodeType": "YulTypedName",
														"src": "4091:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4103:6:7",
														"nodeType": "YulTypedName",
														"src": "4103:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4111:6:7",
														"nodeType": "YulTypedName",
														"src": "4111:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4119:6:7",
														"nodeType": "YulTypedName",
														"src": "4119:6:7",
														"type": ""
													}
												],
												"src": "4026:619:7"
											},
											{
												"body": {
													"nativeSrc": "4694:43:7",
													"nodeType": "YulBlock",
													"src": "4694:43:7",
													"statements": [
														{
															"nativeSrc": "4704:27:7",
															"nodeType": "YulAssignment",
															"src": "4704:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:7"
																},
																"nativeSrc": "4715:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:7",
														"nodeType": "YulTypedName",
														"src": "4676:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:7",
														"nodeType": "YulTypedName",
														"src": "4686:7:7",
														"type": ""
													}
												],
												"src": "4651:86:7"
											},
											{
												"body": {
													"nativeSrc": "4804:51:7",
													"nodeType": "YulBlock",
													"src": "4804:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:7"
																		},
																		"nativeSrc": "4826:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:7"
																},
																"nativeSrc": "4814:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:7"
															},
															"nativeSrc": "4814:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:7",
														"nodeType": "YulTypedName",
														"src": "4792:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:7",
														"nodeType": "YulTypedName",
														"src": "4799:3:7",
														"type": ""
													}
												],
												"src": "4743:112:7"
											},
											{
												"body": {
													"nativeSrc": "4955:120:7",
													"nodeType": "YulBlock",
													"src": "4955:120:7",
													"statements": [
														{
															"nativeSrc": "4965:26:7",
															"nodeType": "YulAssignment",
															"src": "4965:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:7"
																},
																"nativeSrc": "4973:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:7"
																		},
																		"nativeSrc": "5050:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:7"
																},
																"nativeSrc": "5001:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:7"
															},
															"nativeSrc": "5001:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:7",
														"nodeType": "YulTypedName",
														"src": "4927:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:7",
														"nodeType": "YulTypedName",
														"src": "4939:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:7",
														"nodeType": "YulTypedName",
														"src": "4950:4:7",
														"type": ""
													}
												],
												"src": "4861:214:7"
											},
											{
												"body": {
													"nativeSrc": "5146:53:7",
													"nodeType": "YulBlock",
													"src": "5146:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5186:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5186:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5168:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:7"
																		},
																		"nativeSrc": "5168:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:7"
																},
																"nativeSrc": "5156:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5156:37:7"
															},
															"nativeSrc": "5156:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5156:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5081:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:7",
														"nodeType": "YulTypedName",
														"src": "5134:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:7",
														"nodeType": "YulTypedName",
														"src": "5141:3:7",
														"type": ""
													}
												],
												"src": "5081:118:7"
											},
											{
												"body": {
													"nativeSrc": "5303:124:7",
													"nodeType": "YulBlock",
													"src": "5303:124:7",
													"statements": [
														{
															"nativeSrc": "5313:26:7",
															"nodeType": "YulAssignment",
															"src": "5313:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:7"
																},
																"nativeSrc": "5321:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:7"
																		},
																		"nativeSrc": "5402:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5349:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5349:43:7"
																},
																"nativeSrc": "5349:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5349:71:7"
															},
															"nativeSrc": "5349:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5349:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5205:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5275:9:7",
														"nodeType": "YulTypedName",
														"src": "5275:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5287:6:7",
														"nodeType": "YulTypedName",
														"src": "5287:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5298:4:7",
														"nodeType": "YulTypedName",
														"src": "5298:4:7",
														"type": ""
													}
												],
												"src": "5205:222:7"
											},
											{
												"body": {
													"nativeSrc": "5499:263:7",
													"nodeType": "YulBlock",
													"src": "5499:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5545:83:7",
																"nodeType": "YulBlock",
																"src": "5545:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5547:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5547:77:7"
																			},
																			"nativeSrc": "5547:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5547:79:7"
																		},
																		"nativeSrc": "5547:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5547:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5520:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5520:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5529:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5529:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5516:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5516:3:7"
																		},
																		"nativeSrc": "5516:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5516:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5512:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5512:3:7"
																},
																"nativeSrc": "5512:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5512:32:7"
															},
															"nativeSrc": "5509:119:7",
															"nodeType": "YulIf",
															"src": "5509:119:7"
														},
														{
															"nativeSrc": "5638:117:7",
															"nodeType": "YulBlock",
															"src": "5638:117:7",
															"statements": [
																{
																	"nativeSrc": "5653:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5653:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5667:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5667:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5657:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5657:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5682:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5682:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5717:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5717:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5728:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5728:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5713:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5713:3:7"
																				},
																				"nativeSrc": "5713:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5713:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5737:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5737:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5692:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5692:20:7"
																		},
																		"nativeSrc": "5692:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5692:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5682:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5682:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5433:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5469:9:7",
														"nodeType": "YulTypedName",
														"src": "5469:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5480:7:7",
														"nodeType": "YulTypedName",
														"src": "5480:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5492:6:7",
														"nodeType": "YulTypedName",
														"src": "5492:6:7",
														"type": ""
													}
												],
												"src": "5433:329:7"
											},
											{
												"body": {
													"nativeSrc": "5851:391:7",
													"nodeType": "YulBlock",
													"src": "5851:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:7",
																"nodeType": "YulBlock",
																"src": "5897:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:7"
																			},
																			"nativeSrc": "5899:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:7"
																		},
																		"nativeSrc": "5899:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:7"
																		},
																		"nativeSrc": "5868:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:7"
																},
																"nativeSrc": "5864:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:7"
															},
															"nativeSrc": "5861:119:7",
															"nodeType": "YulIf",
															"src": "5861:119:7"
														},
														{
															"nativeSrc": "5990:117:7",
															"nodeType": "YulBlock",
															"src": "5990:117:7",
															"statements": [
																{
																	"nativeSrc": "6005:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:7"
																				},
																				"nativeSrc": "6065:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6044:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:7"
																		},
																		"nativeSrc": "6044:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:7",
															"nodeType": "YulBlock",
															"src": "6117:118:7",
															"statements": [
																{
																	"nativeSrc": "6132:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:7"
																				},
																				"nativeSrc": "6193:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:7"
																		},
																		"nativeSrc": "6172:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "5768:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:7",
														"nodeType": "YulTypedName",
														"src": "5813:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:7",
														"nodeType": "YulTypedName",
														"src": "5824:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:7",
														"nodeType": "YulTypedName",
														"src": "5836:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:7",
														"nodeType": "YulTypedName",
														"src": "5844:6:7",
														"type": ""
													}
												],
												"src": "5768:474:7"
											},
											{
												"body": {
													"nativeSrc": "6348:519:7",
													"nodeType": "YulBlock",
													"src": "6348:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6394:83:7",
																"nodeType": "YulBlock",
																"src": "6394:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6396:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6396:77:7"
																			},
																			"nativeSrc": "6396:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6396:79:7"
																		},
																		"nativeSrc": "6396:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6396:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6369:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6369:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6378:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6378:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6365:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6365:3:7"
																		},
																		"nativeSrc": "6365:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6365:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6390:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6390:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6361:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6361:3:7"
																},
																"nativeSrc": "6361:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6361:32:7"
															},
															"nativeSrc": "6358:119:7",
															"nodeType": "YulIf",
															"src": "6358:119:7"
														},
														{
															"nativeSrc": "6487:117:7",
															"nodeType": "YulBlock",
															"src": "6487:117:7",
															"statements": [
																{
																	"nativeSrc": "6502:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6502:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6516:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6516:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6506:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6506:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6531:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6531:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6566:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6566:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6577:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6577:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6562:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6562:3:7"
																				},
																				"nativeSrc": "6562:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6562:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6586:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6586:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6541:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6541:20:7"
																		},
																		"nativeSrc": "6541:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6541:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6531:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6531:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6614:118:7",
															"nodeType": "YulBlock",
															"src": "6614:118:7",
															"statements": [
																{
																	"nativeSrc": "6629:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6629:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6643:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6643:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6633:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6633:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6659:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6659:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6694:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6694:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6705:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6705:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6690:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6690:3:7"
																				},
																				"nativeSrc": "6690:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6690:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6714:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6714:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6669:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6669:20:7"
																		},
																		"nativeSrc": "6669:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6669:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6659:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6659:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6742:118:7",
															"nodeType": "YulBlock",
															"src": "6742:118:7",
															"statements": [
																{
																	"nativeSrc": "6757:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6757:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6771:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6771:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6761:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6761:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6787:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6787:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6822:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6822:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6833:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6833:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6818:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6818:3:7"
																				},
																				"nativeSrc": "6818:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6818:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6842:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6842:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6797:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6797:20:7"
																		},
																		"nativeSrc": "6797:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6797:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6787:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6787:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_address",
												"nativeSrc": "6248:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6302:9:7",
														"nodeType": "YulTypedName",
														"src": "6302:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6313:7:7",
														"nodeType": "YulTypedName",
														"src": "6313:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6325:6:7",
														"nodeType": "YulTypedName",
														"src": "6325:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6333:6:7",
														"nodeType": "YulTypedName",
														"src": "6333:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6341:6:7",
														"nodeType": "YulTypedName",
														"src": "6341:6:7",
														"type": ""
													}
												],
												"src": "6248:619:7"
											},
											{
												"body": {
													"nativeSrc": "6956:391:7",
													"nodeType": "YulBlock",
													"src": "6956:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7002:83:7",
																"nodeType": "YulBlock",
																"src": "7002:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7004:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7004:77:7"
																			},
																			"nativeSrc": "7004:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7004:79:7"
																		},
																		"nativeSrc": "7004:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7004:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6977:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6977:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6986:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6986:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6973:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6973:3:7"
																		},
																		"nativeSrc": "6973:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6973:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6998:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6998:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6969:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6969:3:7"
																},
																"nativeSrc": "6969:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6969:32:7"
															},
															"nativeSrc": "6966:119:7",
															"nodeType": "YulIf",
															"src": "6966:119:7"
														},
														{
															"nativeSrc": "7095:117:7",
															"nodeType": "YulBlock",
															"src": "7095:117:7",
															"statements": [
																{
																	"nativeSrc": "7110:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7110:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7124:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7124:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7114:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7114:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7139:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7139:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7174:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7174:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7185:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7185:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7170:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7170:3:7"
																				},
																				"nativeSrc": "7170:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7170:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7194:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7194:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7149:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7149:20:7"
																		},
																		"nativeSrc": "7149:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7149:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7139:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7139:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7222:118:7",
															"nodeType": "YulBlock",
															"src": "7222:118:7",
															"statements": [
																{
																	"nativeSrc": "7237:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7237:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7251:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7251:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7241:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7241:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7267:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7267:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7302:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7302:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7313:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7313:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7298:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7298:3:7"
																				},
																				"nativeSrc": "7298:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7298:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7322:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7322:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7277:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7277:20:7"
																		},
																		"nativeSrc": "7277:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7277:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7267:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7267:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6873:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6918:9:7",
														"nodeType": "YulTypedName",
														"src": "6918:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6929:7:7",
														"nodeType": "YulTypedName",
														"src": "6929:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6941:6:7",
														"nodeType": "YulTypedName",
														"src": "6941:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6949:6:7",
														"nodeType": "YulTypedName",
														"src": "6949:6:7",
														"type": ""
													}
												],
												"src": "6873:474:7"
											},
											{
												"body": {
													"nativeSrc": "7416:80:7",
													"nodeType": "YulBlock",
													"src": "7416:80:7",
													"statements": [
														{
															"nativeSrc": "7426:22:7",
															"nodeType": "YulAssignment",
															"src": "7426:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7441:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7441:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7435:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7435:5:7"
																},
																"nativeSrc": "7435:13:7",
																"nodeType": "YulFunctionCall",
																"src": "7435:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7426:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7426:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7484:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7484:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7457:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "7457:26:7"
																},
																"nativeSrc": "7457:33:7",
																"nodeType": "YulFunctionCall",
																"src": "7457:33:7"
															},
															"nativeSrc": "7457:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "7457:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7353:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7394:6:7",
														"nodeType": "YulTypedName",
														"src": "7394:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7402:3:7",
														"nodeType": "YulTypedName",
														"src": "7402:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7410:5:7",
														"nodeType": "YulTypedName",
														"src": "7410:5:7",
														"type": ""
													}
												],
												"src": "7353:143:7"
											},
											{
												"body": {
													"nativeSrc": "7579:274:7",
													"nodeType": "YulBlock",
													"src": "7579:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7625:83:7",
																"nodeType": "YulBlock",
																"src": "7625:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7627:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7627:77:7"
																			},
																			"nativeSrc": "7627:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7627:79:7"
																		},
																		"nativeSrc": "7627:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7627:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7600:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7600:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7609:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7609:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7596:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7596:3:7"
																		},
																		"nativeSrc": "7596:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7596:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7621:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7621:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7592:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7592:3:7"
																},
																"nativeSrc": "7592:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7592:32:7"
															},
															"nativeSrc": "7589:119:7",
															"nodeType": "YulIf",
															"src": "7589:119:7"
														},
														{
															"nativeSrc": "7718:128:7",
															"nodeType": "YulBlock",
															"src": "7718:128:7",
															"statements": [
																{
																	"nativeSrc": "7733:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7733:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7747:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7747:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7737:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7737:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7762:74:7",
																	"nodeType": "YulAssignment",
																	"src": "7762:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7808:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7808:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7819:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7819:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7804:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7804:3:7"
																				},
																				"nativeSrc": "7804:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7804:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7828:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7828:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "7772:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "7772:31:7"
																		},
																		"nativeSrc": "7772:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7772:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7762:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7762:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7502:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7549:9:7",
														"nodeType": "YulTypedName",
														"src": "7549:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7560:7:7",
														"nodeType": "YulTypedName",
														"src": "7560:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7572:6:7",
														"nodeType": "YulTypedName",
														"src": "7572:6:7",
														"type": ""
													}
												],
												"src": "7502:351:7"
											},
											{
												"body": {
													"nativeSrc": "7887:152:7",
													"nodeType": "YulBlock",
													"src": "7887:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7904:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7904:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7907:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7907:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7897:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7897:6:7"
																},
																"nativeSrc": "7897:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7897:88:7"
															},
															"nativeSrc": "7897:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7897:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8001:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8001:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8004:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8004:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7994:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7994:6:7"
																},
																"nativeSrc": "7994:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7994:15:7"
															},
															"nativeSrc": "7994:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7994:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8025:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8025:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8028:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8028:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8018:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8018:6:7"
																},
																"nativeSrc": "8018:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8018:15:7"
															},
															"nativeSrc": "8018:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8018:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7859:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7859:180:7"
											},
											{
												"body": {
													"nativeSrc": "8096:269:7",
													"nodeType": "YulBlock",
													"src": "8096:269:7",
													"statements": [
														{
															"nativeSrc": "8106:22:7",
															"nodeType": "YulAssignment",
															"src": "8106:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8120:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8120:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8126:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8126:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8116:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8116:3:7"
																},
																"nativeSrc": "8116:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8116:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8106:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8106:6:7"
																}
															]
														},
														{
															"nativeSrc": "8137:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8137:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8167:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8167:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8173:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8173:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8163:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8163:3:7"
																},
																"nativeSrc": "8163:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8163:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8141:18:7",
																	"nodeType": "YulTypedName",
																	"src": "8141:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8214:51:7",
																"nodeType": "YulBlock",
																"src": "8214:51:7",
																"statements": [
																	{
																		"nativeSrc": "8228:27:7",
																		"nodeType": "YulAssignment",
																		"src": "8228:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8242:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8242:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8250:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8250:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8238:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8238:3:7"
																			},
																			"nativeSrc": "8238:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8238:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8228:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8228:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8194:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "8194:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8187:6:7"
																},
																"nativeSrc": "8187:26:7",
																"nodeType": "YulFunctionCall",
																"src": "8187:26:7"
															},
															"nativeSrc": "8184:81:7",
															"nodeType": "YulIf",
															"src": "8184:81:7"
														},
														{
															"body": {
																"nativeSrc": "8317:42:7",
																"nodeType": "YulBlock",
																"src": "8317:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8331:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8331:16:7"
																			},
																			"nativeSrc": "8331:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8331:18:7"
																		},
																		"nativeSrc": "8331:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8331:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8281:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "8281:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8304:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8304:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8312:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8312:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8301:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8301:2:7"
																		},
																		"nativeSrc": "8301:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8301:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8278:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8278:2:7"
																},
																"nativeSrc": "8278:38:7",
																"nodeType": "YulFunctionCall",
																"src": "8278:38:7"
															},
															"nativeSrc": "8275:84:7",
															"nodeType": "YulIf",
															"src": "8275:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8045:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8080:4:7",
														"nodeType": "YulTypedName",
														"src": "8080:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8089:6:7",
														"nodeType": "YulTypedName",
														"src": "8089:6:7",
														"type": ""
													}
												],
												"src": "8045:320:7"
											},
											{
												"body": {
													"nativeSrc": "8399:152:7",
													"nodeType": "YulBlock",
													"src": "8399:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8416:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8416:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8419:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8419:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8409:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8409:6:7"
																},
																"nativeSrc": "8409:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8409:88:7"
															},
															"nativeSrc": "8409:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8409:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8513:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8513:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8516:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8516:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8506:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8506:6:7"
																},
																"nativeSrc": "8506:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8506:15:7"
															},
															"nativeSrc": "8506:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8506:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8537:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8537:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8540:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8540:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8530:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8530:6:7"
																},
																"nativeSrc": "8530:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8530:15:7"
															},
															"nativeSrc": "8530:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8530:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8371:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8371:180:7"
											},
											{
												"body": {
													"nativeSrc": "8605:362:7",
													"nodeType": "YulBlock",
													"src": "8605:362:7",
													"statements": [
														{
															"nativeSrc": "8615:25:7",
															"nodeType": "YulAssignment",
															"src": "8615:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8638:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8638:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8620:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8620:17:7"
																},
																"nativeSrc": "8620:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8620:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8615:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8615:1:7"
																}
															]
														},
														{
															"nativeSrc": "8649:25:7",
															"nodeType": "YulAssignment",
															"src": "8649:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8672:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8672:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8654:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8654:17:7"
																},
																"nativeSrc": "8654:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8654:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8649:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8649:1:7"
																}
															]
														},
														{
															"nativeSrc": "8683:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8683:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8706:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8706:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8709:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8709:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8702:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8702:3:7"
																},
																"nativeSrc": "8702:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8702:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8687:11:7",
																	"nodeType": "YulTypedName",
																	"src": "8687:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8720:41:7",
															"nodeType": "YulAssignment",
															"src": "8720:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8749:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "8749:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8731:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8731:17:7"
																},
																"nativeSrc": "8731:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8731:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8720:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8720:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8938:22:7",
																"nodeType": "YulBlock",
																"src": "8938:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8940:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8940:16:7"
																			},
																			"nativeSrc": "8940:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8940:18:7"
																		},
																		"nativeSrc": "8940:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8940:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8871:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8871:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8864:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8864:6:7"
																				},
																				"nativeSrc": "8864:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8864:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8894:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8894:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8901:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "8901:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8910:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "8910:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8897:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8897:3:7"
																						},
																						"nativeSrc": "8897:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "8897:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8891:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8891:2:7"
																				},
																				"nativeSrc": "8891:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8891:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8844:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8844:2:7"
																		},
																		"nativeSrc": "8844:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8844:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8824:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8824:6:7"
																},
																"nativeSrc": "8824:113:7",
																"nodeType": "YulFunctionCall",
																"src": "8824:113:7"
															},
															"nativeSrc": "8821:139:7",
															"nodeType": "YulIf",
															"src": "8821:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8557:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8588:1:7",
														"nodeType": "YulTypedName",
														"src": "8588:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8591:1:7",
														"nodeType": "YulTypedName",
														"src": "8591:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8597:7:7",
														"nodeType": "YulTypedName",
														"src": "8597:7:7",
														"type": ""
													}
												],
												"src": "8557:410:7"
											},
											{
												"body": {
													"nativeSrc": "9001:152:7",
													"nodeType": "YulBlock",
													"src": "9001:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9018:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9018:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9021:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9021:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9011:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9011:6:7"
																},
																"nativeSrc": "9011:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9011:88:7"
															},
															"nativeSrc": "9011:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9011:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9115:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9115:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9118:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9118:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9108:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9108:6:7"
																},
																"nativeSrc": "9108:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9108:15:7"
															},
															"nativeSrc": "9108:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9108:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9139:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9139:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9142:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9142:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9132:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9132:6:7"
																},
																"nativeSrc": "9132:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9132:15:7"
															},
															"nativeSrc": "9132:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9132:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8973:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8973:180:7"
											},
											{
												"body": {
													"nativeSrc": "9201:143:7",
													"nodeType": "YulBlock",
													"src": "9201:143:7",
													"statements": [
														{
															"nativeSrc": "9211:25:7",
															"nodeType": "YulAssignment",
															"src": "9211:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9234:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9234:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9216:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9216:17:7"
																},
																"nativeSrc": "9216:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9216:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9211:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9211:1:7"
																}
															]
														},
														{
															"nativeSrc": "9245:25:7",
															"nodeType": "YulAssignment",
															"src": "9245:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9268:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9268:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9250:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9250:17:7"
																},
																"nativeSrc": "9250:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9250:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9245:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9245:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9292:22:7",
																"nodeType": "YulBlock",
																"src": "9292:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9294:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9294:16:7"
																			},
																			"nativeSrc": "9294:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9294:18:7"
																		},
																		"nativeSrc": "9294:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9294:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9289:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9289:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9282:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9282:6:7"
																},
																"nativeSrc": "9282:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9282:9:7"
															},
															"nativeSrc": "9279:35:7",
															"nodeType": "YulIf",
															"src": "9279:35:7"
														},
														{
															"nativeSrc": "9324:14:7",
															"nodeType": "YulAssignment",
															"src": "9324:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9333:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9333:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9336:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9336:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9329:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9329:3:7"
																},
																"nativeSrc": "9329:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9329:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9324:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9324:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9159:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9190:1:7",
														"nodeType": "YulTypedName",
														"src": "9190:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9193:1:7",
														"nodeType": "YulTypedName",
														"src": "9193:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9199:1:7",
														"nodeType": "YulTypedName",
														"src": "9199:1:7",
														"type": ""
													}
												],
												"src": "9159:185:7"
											},
											{
												"body": {
													"nativeSrc": "9504:288:7",
													"nodeType": "YulBlock",
													"src": "9504:288:7",
													"statements": [
														{
															"nativeSrc": "9514:26:7",
															"nodeType": "YulAssignment",
															"src": "9514:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9526:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9526:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9537:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9537:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9522:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9522:3:7"
																},
																"nativeSrc": "9522:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9522:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9514:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9514:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9594:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9594:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9607:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9607:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9618:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9618:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9603:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9603:3:7"
																		},
																		"nativeSrc": "9603:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9603:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9550:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9550:43:7"
																},
																"nativeSrc": "9550:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9550:71:7"
															},
															"nativeSrc": "9550:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9550:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9675:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9675:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9688:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9688:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9699:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9699:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9684:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9684:3:7"
																		},
																		"nativeSrc": "9684:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9684:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9631:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9631:43:7"
																},
																"nativeSrc": "9631:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9631:72:7"
															},
															"nativeSrc": "9631:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9631:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9757:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9757:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9770:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9770:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9781:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9781:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9766:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9766:3:7"
																		},
																		"nativeSrc": "9766:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9766:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9713:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9713:43:7"
																},
																"nativeSrc": "9713:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9713:72:7"
															},
															"nativeSrc": "9713:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9713:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9350:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9460:9:7",
														"nodeType": "YulTypedName",
														"src": "9460:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9472:6:7",
														"nodeType": "YulTypedName",
														"src": "9472:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9480:6:7",
														"nodeType": "YulTypedName",
														"src": "9480:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9488:6:7",
														"nodeType": "YulTypedName",
														"src": "9488:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9499:4:7",
														"nodeType": "YulTypedName",
														"src": "9499:4:7",
														"type": ""
													}
												],
												"src": "9350:442:7"
											},
											{
												"body": {
													"nativeSrc": "9838:76:7",
													"nodeType": "YulBlock",
													"src": "9838:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9892:16:7",
																"nodeType": "YulBlock",
																"src": "9892:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9901:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9901:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9904:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9904:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9894:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9894:6:7"
																			},
																			"nativeSrc": "9894:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9894:12:7"
																		},
																		"nativeSrc": "9894:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9894:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9861:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9861:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9883:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "9883:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9868:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "9868:14:7"
																				},
																				"nativeSrc": "9868:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9868:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9858:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "9858:2:7"
																		},
																		"nativeSrc": "9858:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9858:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9851:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9851:6:7"
																},
																"nativeSrc": "9851:40:7",
																"nodeType": "YulFunctionCall",
																"src": "9851:40:7"
															},
															"nativeSrc": "9848:60:7",
															"nodeType": "YulIf",
															"src": "9848:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9798:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9831:5:7",
														"nodeType": "YulTypedName",
														"src": "9831:5:7",
														"type": ""
													}
												],
												"src": "9798:116:7"
											},
											{
												"body": {
													"nativeSrc": "9980:77:7",
													"nodeType": "YulBlock",
													"src": "9980:77:7",
													"statements": [
														{
															"nativeSrc": "9990:22:7",
															"nodeType": "YulAssignment",
															"src": "9990:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10005:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10005:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9999:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9999:5:7"
																},
																"nativeSrc": "9999:13:7",
																"nodeType": "YulFunctionCall",
																"src": "9999:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9990:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9990:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10045:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "10045:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "10021:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "10021:23:7"
																},
																"nativeSrc": "10021:30:7",
																"nodeType": "YulFunctionCall",
																"src": "10021:30:7"
															},
															"nativeSrc": "10021:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "10021:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "9920:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9958:6:7",
														"nodeType": "YulTypedName",
														"src": "9958:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9966:3:7",
														"nodeType": "YulTypedName",
														"src": "9966:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9974:5:7",
														"nodeType": "YulTypedName",
														"src": "9974:5:7",
														"type": ""
													}
												],
												"src": "9920:137:7"
											},
											{
												"body": {
													"nativeSrc": "10137:271:7",
													"nodeType": "YulBlock",
													"src": "10137:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "10183:83:7",
																"nodeType": "YulBlock",
																"src": "10183:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10185:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "10185:77:7"
																			},
																			"nativeSrc": "10185:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10185:79:7"
																		},
																		"nativeSrc": "10185:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10185:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10158:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10158:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10167:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10167:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10154:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10154:3:7"
																		},
																		"nativeSrc": "10154:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10154:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10179:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10179:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10150:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10150:3:7"
																},
																"nativeSrc": "10150:32:7",
																"nodeType": "YulFunctionCall",
																"src": "10150:32:7"
															},
															"nativeSrc": "10147:119:7",
															"nodeType": "YulIf",
															"src": "10147:119:7"
														},
														{
															"nativeSrc": "10276:125:7",
															"nodeType": "YulBlock",
															"src": "10276:125:7",
															"statements": [
																{
																	"nativeSrc": "10291:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10291:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10305:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10305:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10295:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10295:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10320:71:7",
																	"nodeType": "YulAssignment",
																	"src": "10320:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10363:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10363:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10374:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10374:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10359:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10359:3:7"
																				},
																				"nativeSrc": "10359:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10359:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10383:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10383:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "10330:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "10330:28:7"
																		},
																		"nativeSrc": "10330:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10330:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10320:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10320:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "10063:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10107:9:7",
														"nodeType": "YulTypedName",
														"src": "10107:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10118:7:7",
														"nodeType": "YulTypedName",
														"src": "10118:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10130:6:7",
														"nodeType": "YulTypedName",
														"src": "10130:6:7",
														"type": ""
													}
												],
												"src": "10063:345:7"
											},
											{
												"body": {
													"nativeSrc": "10540:206:7",
													"nodeType": "YulBlock",
													"src": "10540:206:7",
													"statements": [
														{
															"nativeSrc": "10550:26:7",
															"nodeType": "YulAssignment",
															"src": "10550:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10562:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10562:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10573:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10573:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10558:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10558:3:7"
																},
																"nativeSrc": "10558:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10558:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10550:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10550:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10630:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10630:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10643:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10643:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10654:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10654:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10639:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10639:3:7"
																		},
																		"nativeSrc": "10639:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10639:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10586:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10586:43:7"
																},
																"nativeSrc": "10586:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10586:71:7"
															},
															"nativeSrc": "10586:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10586:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10711:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10711:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10724:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10724:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10735:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10735:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10720:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10720:3:7"
																		},
																		"nativeSrc": "10720:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10720:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10667:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10667:43:7"
																},
																"nativeSrc": "10667:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10667:72:7"
															},
															"nativeSrc": "10667:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10667:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10414:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10504:9:7",
														"nodeType": "YulTypedName",
														"src": "10504:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10516:6:7",
														"nodeType": "YulTypedName",
														"src": "10516:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10524:6:7",
														"nodeType": "YulTypedName",
														"src": "10524:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10535:4:7",
														"nodeType": "YulTypedName",
														"src": "10535:4:7",
														"type": ""
													}
												],
												"src": "10414:332:7"
											},
											{
												"body": {
													"nativeSrc": "10878:206:7",
													"nodeType": "YulBlock",
													"src": "10878:206:7",
													"statements": [
														{
															"nativeSrc": "10888:26:7",
															"nodeType": "YulAssignment",
															"src": "10888:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10900:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10900:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10911:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10911:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10896:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10896:3:7"
																},
																"nativeSrc": "10896:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10896:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10888:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10888:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10968:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10968:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10981:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10981:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10992:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10992:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10977:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10977:3:7"
																		},
																		"nativeSrc": "10977:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10977:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10924:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10924:43:7"
																},
																"nativeSrc": "10924:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10924:71:7"
															},
															"nativeSrc": "10924:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10924:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11049:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11049:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11062:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11062:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11073:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11073:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11058:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11058:3:7"
																		},
																		"nativeSrc": "11058:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11058:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11005:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11005:43:7"
																},
																"nativeSrc": "11005:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11005:72:7"
															},
															"nativeSrc": "11005:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11005:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10752:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10842:9:7",
														"nodeType": "YulTypedName",
														"src": "10842:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10854:6:7",
														"nodeType": "YulTypedName",
														"src": "10854:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10862:6:7",
														"nodeType": "YulTypedName",
														"src": "10862:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10873:4:7",
														"nodeType": "YulTypedName",
														"src": "10873:4:7",
														"type": ""
													}
												],
												"src": "10752:332:7"
											},
											{
												"body": {
													"nativeSrc": "11244:288:7",
													"nodeType": "YulBlock",
													"src": "11244:288:7",
													"statements": [
														{
															"nativeSrc": "11254:26:7",
															"nodeType": "YulAssignment",
															"src": "11254:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11266:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11266:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11277:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11277:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11262:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11262:3:7"
																},
																"nativeSrc": "11262:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11262:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11254:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11254:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11334:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11334:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11347:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11347:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11358:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11358:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11343:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11343:3:7"
																		},
																		"nativeSrc": "11343:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11343:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11290:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11290:43:7"
																},
																"nativeSrc": "11290:71:7",
																"nodeType": "YulFunctionCall",
																"src": "11290:71:7"
															},
															"nativeSrc": "11290:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "11290:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11415:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11415:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11428:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11428:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11439:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11439:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11424:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11424:3:7"
																		},
																		"nativeSrc": "11424:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11424:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11371:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11371:43:7"
																},
																"nativeSrc": "11371:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11371:72:7"
															},
															"nativeSrc": "11371:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11371:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11497:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11497:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11510:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11510:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11521:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11521:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11506:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11506:3:7"
																		},
																		"nativeSrc": "11506:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11506:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11453:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11453:43:7"
																},
																"nativeSrc": "11453:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11453:72:7"
															},
															"nativeSrc": "11453:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11453:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11090:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11200:9:7",
														"nodeType": "YulTypedName",
														"src": "11200:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11212:6:7",
														"nodeType": "YulTypedName",
														"src": "11212:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11220:6:7",
														"nodeType": "YulTypedName",
														"src": "11220:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11228:6:7",
														"nodeType": "YulTypedName",
														"src": "11228:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11239:4:7",
														"nodeType": "YulTypedName",
														"src": "11239:4:7",
														"type": ""
													}
												],
												"src": "11090:442:7"
											},
											{
												"body": {
													"nativeSrc": "11582:147:7",
													"nodeType": "YulBlock",
													"src": "11582:147:7",
													"statements": [
														{
															"nativeSrc": "11592:25:7",
															"nodeType": "YulAssignment",
															"src": "11592:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11615:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11615:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11597:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11597:17:7"
																},
																"nativeSrc": "11597:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11597:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11592:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11592:1:7"
																}
															]
														},
														{
															"nativeSrc": "11626:25:7",
															"nodeType": "YulAssignment",
															"src": "11626:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11649:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11649:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11631:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11631:17:7"
																},
																"nativeSrc": "11631:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11631:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11626:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11626:1:7"
																}
															]
														},
														{
															"nativeSrc": "11660:16:7",
															"nodeType": "YulAssignment",
															"src": "11660:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11671:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11671:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11674:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11674:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11667:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11667:3:7"
																},
																"nativeSrc": "11667:9:7",
																"nodeType": "YulFunctionCall",
																"src": "11667:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11660:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11660:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11700:22:7",
																"nodeType": "YulBlock",
																"src": "11700:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11702:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11702:16:7"
																			},
																			"nativeSrc": "11702:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11702:18:7"
																		},
																		"nativeSrc": "11702:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11702:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11692:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11692:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11695:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11695:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11689:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11689:2:7"
																},
																"nativeSrc": "11689:10:7",
																"nodeType": "YulFunctionCall",
																"src": "11689:10:7"
															},
															"nativeSrc": "11686:36:7",
															"nodeType": "YulIf",
															"src": "11686:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11538:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11569:1:7",
														"nodeType": "YulTypedName",
														"src": "11569:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11572:1:7",
														"nodeType": "YulTypedName",
														"src": "11572:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11578:3:7",
														"nodeType": "YulTypedName",
														"src": "11578:3:7",
														"type": ""
													}
												],
												"src": "11538:191:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"799": [
									{
										"length": 32,
										"start": 1468
									},
									{
										"length": 32,
										"start": 1948
									},
									{
										"length": 32,
										"start": 2056
									},
									{
										"length": 32,
										"start": 2414
									},
									{
										"length": 32,
										"start": 2971
									},
									{
										"length": 32,
										"start": 3345
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610171575f3560e01c806370a08231116100dc578063ba08765211610095578063ce96cb771161006f578063ce96cb77146104f9578063d905777e14610529578063dd62ed3e14610559578063ef8b30f71461058957610171565b8063ba08765214610469578063c63d75b614610499578063c6e6f592146104c957610171565b806370a082311461035b57806394bf804d1461038b57806395d89b41146103bb578063a9059cbb146103d9578063b3d7f6b914610409578063b460af941461043957610171565b806323b872dd1161012e57806323b872dd1461025f578063313ce5671461028f57806338d52e0f146102ad578063402d267d146102cb5780634cdad506146102fb5780636e553f651461032b57610171565b806301e1d1141461017557806306fdde031461019357806307a2d13a146101b1578063095ea7b3146101e15780630a28a4771461021157806318160ddd14610241575b5f80fd5b61017d6105b9565b60405161018a91906115f0565b60405180910390f35b61019b610657565b6040516101a89190611679565b60405180910390f35b6101cb60048036038101906101c691906116c7565b6106e7565b6040516101d891906115f0565b60405180910390f35b6101fb60048036038101906101f6919061174c565b610727565b60405161020891906117a4565b60405180910390f35b61022b600480360381019061022691906116c7565b610749565b60405161023891906115f0565b60405180910390f35b61024961075a565b60405161025691906115f0565b60405180910390f35b610279600480360381019061027491906117bd565b610763565b60405161028691906117a4565b60405180910390f35b610297610791565b6040516102a49190611828565b60405180910390f35b6102b5610799565b6040516102c29190611850565b60405180910390f35b6102e560048036038101906102e09190611869565b6107c0565b6040516102f291906115f0565b60405180910390f35b610315600480360381019061031091906116c7565b6107e9565b60405161032291906115f0565b60405180910390f35b61034560048036038101906103409190611894565b6107fa565b60405161035291906115f0565b60405180910390f35b61037560048036038101906103709190611869565b61091b565b60405161038291906115f0565b60405180910390f35b6103a560048036038101906103a09190611894565b610960565b6040516103b291906115f0565b60405180910390f35b6103c3610a81565b6040516103d09190611679565b60405180910390f35b6103f360048036038101906103ee919061174c565b610b11565b60405161040091906117a4565b60405180910390f35b610423600480360381019061041e91906116c7565b610b33565b60405161043091906115f0565b60405180910390f35b610453600480360381019061044e91906118d2565b610b44565b60405161046091906115f0565b60405180910390f35b610483600480360381019061047e91906118d2565b610cba565b60405161049091906115f0565b60405180910390f35b6104b360048036038101906104ae9190611869565b610e30565b6040516104c091906115f0565b60405180910390f35b6104e360048036038101906104de91906116c7565b610e59565b6040516104f091906115f0565b60405180910390f35b610513600480360381019061050e9190611869565b610e99565b60405161052091906115f0565b60405180910390f35b610543600480360381019061053e9190611869565b610eb2565b60405161055091906115f0565b60405180910390f35b610573600480360381019061056e9190611922565b610ec3565b60405161058091906115f0565b60405180910390f35b6105a3600480360381019061059e91906116c7565b610f45565b6040516105b091906115f0565b60405180910390f35b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106139190611850565b602060405180830381865afa15801561062e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106529190611974565b905090565b606060038054610666906119cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610692906119cc565b80156106dd5780601f106106b4576101008083540402835291602001916106dd565b820191905f5260205f20905b8154815290600101906020018083116106c057829003601f168201915b5050505050905090565b5f806106f161075a565b90505f811461071d57806107036105b9565b8461070e9190611a29565b6107189190611a97565b61071f565b825b915050919050565b5f80610731610f56565b905061073e818585610f5d565b600191505092915050565b5f61075382610e59565b9050919050565b5f600254905090565b5f8061076d610f56565b905061077a858285610f6f565b610785858585611002565b60019150509392505050565b5f6012905090565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b5f6107f3826106e7565b9050919050565b5f61080483610f45565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161086393929190611ac7565b6020604051808303815f875af115801561087f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108a39190611b26565b506108ae82826110f2565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7858460405161090d929190611b51565b60405180910390a392915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f61096a83610b33565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016109c993929190611ac7565b6020604051808303815f875af11580156109e5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a099190611b26565b50610a1482846110f2565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78386604051610a73929190611b51565b60405180910390a392915050565b606060048054610a90906119cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610abc906119cc565b8015610b075780601f10610ade57610100808354040283529160200191610b07565b820191905f5260205f20905b815481529060010190602001808311610aea57829003601f168201915b5050505050905090565b5f80610b1b610f56565b9050610b28818585611002565b600191505092915050565b5f610b3d826106e7565b9050919050565b5f610b4e84610749565b90508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b8f57610b8e823383610f6f565b5b610b998282611171565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84866040518363ffffffff1660e01b8152600401610bf4929190611b78565b6020604051808303815f875af1158015610c10573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c349190611b26565b508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8785604051610cab929190611b51565b60405180910390a49392505050565b5f610cc4846107e9565b90508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d0557610d04823386610f6f565b5b610d0f8285611171565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b8152600401610d6a929190611b78565b6020604051808303815f875af1158015610d86573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610daa9190611b26565b508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8488604051610e21929190611b51565b60405180910390a49392505050565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b5f80610e6361075a565b90505f8114610e8f57610e746105b9565b8184610e809190611a29565b610e8a9190611a97565b610e91565b825b915050919050565b5f610eab610ea68361091b565b6106e7565b9050919050565b5f610ebc8261091b565b9050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f610f4f82610e59565b9050919050565b5f33905090565b610f6a83838360016111f0565b505050565b5f610f7a8484610ec3565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610ffc5781811015610fed578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610fe493929190611b9f565b60405180910390fd5b610ffb84848484035f6111f0565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611072575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110699190611850565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110e2575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110d99190611850565b60405180910390fd5b6110ed8383836113bf565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611162575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016111599190611850565b60405180910390fd5b61116d5f83836113bf565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111e1575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016111d89190611850565b60405180910390fd5b6111ec825f836113bf565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611260575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016112579190611850565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112d0575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016112c79190611850565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156113b9578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113b091906115f0565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361140f578060025f8282546114039190611bd4565b925050819055506114dd565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611498578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161148f93929190611b9f565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611524578060025f828254039250508190555061156e565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115cb91906115f0565b60405180910390a3505050565b5f819050919050565b6115ea816115d8565b82525050565b5f6020820190506116035f8301846115e1565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61164b82611609565b6116558185611613565b9350611665818560208601611623565b61166e81611631565b840191505092915050565b5f6020820190508181035f8301526116918184611641565b905092915050565b5f80fd5b6116a6816115d8565b81146116b0575f80fd5b50565b5f813590506116c18161169d565b92915050565b5f602082840312156116dc576116db611699565b5b5f6116e9848285016116b3565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61171b826116f2565b9050919050565b61172b81611711565b8114611735575f80fd5b50565b5f8135905061174681611722565b92915050565b5f806040838503121561176257611761611699565b5b5f61176f85828601611738565b9250506020611780858286016116b3565b9150509250929050565b5f8115159050919050565b61179e8161178a565b82525050565b5f6020820190506117b75f830184611795565b92915050565b5f805f606084860312156117d4576117d3611699565b5b5f6117e186828701611738565b93505060206117f286828701611738565b9250506040611803868287016116b3565b9150509250925092565b5f60ff82169050919050565b6118228161180d565b82525050565b5f60208201905061183b5f830184611819565b92915050565b61184a81611711565b82525050565b5f6020820190506118635f830184611841565b92915050565b5f6020828403121561187e5761187d611699565b5b5f61188b84828501611738565b91505092915050565b5f80604083850312156118aa576118a9611699565b5b5f6118b7858286016116b3565b92505060206118c885828601611738565b9150509250929050565b5f805f606084860312156118e9576118e8611699565b5b5f6118f6868287016116b3565b935050602061190786828701611738565b925050604061191886828701611738565b9150509250925092565b5f806040838503121561193857611937611699565b5b5f61194585828601611738565b925050602061195685828601611738565b9150509250929050565b5f8151905061196e8161169d565b92915050565b5f6020828403121561198957611988611699565b5b5f61199684828501611960565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806119e357607f821691505b6020821081036119f6576119f561199f565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a33826115d8565b9150611a3e836115d8565b9250828202611a4c816115d8565b91508282048414831517611a6357611a626119fc565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611aa1826115d8565b9150611aac836115d8565b925082611abc57611abb611a6a565b5b828204905092915050565b5f606082019050611ada5f830186611841565b611ae76020830185611841565b611af460408301846115e1565b949350505050565b611b058161178a565b8114611b0f575f80fd5b50565b5f81519050611b2081611afc565b92915050565b5f60208284031215611b3b57611b3a611699565b5b5f611b4884828501611b12565b91505092915050565b5f604082019050611b645f8301856115e1565b611b7160208301846115e1565b9392505050565b5f604082019050611b8b5f830185611841565b611b9860208301846115e1565b9392505050565b5f606082019050611bb25f830186611841565b611bbf60208301856115e1565b611bcc60408301846115e1565b949350505050565b5f611bde826115d8565b9150611be9836115d8565b9250828201905080821115611c0157611c006119fc565b5b9291505056fea2646970667358221220258142a7eb067e2e8a157fdafb01d7a976ac5a61c3b6b0fd8ecaa275b0736a6f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x171 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xBA087652 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xCE96CB77 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCE96CB77 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0xD905777E EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0xEF8B30F7 EQ PUSH2 0x589 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0xBA087652 EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0xC63D75B6 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0xC6E6F592 EQ PUSH2 0x4C9 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x94BF804D EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xB3D7F6B9 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xB460AF94 EQ PUSH2 0x439 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x402D267D EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x4CDAD506 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x6E553F65 EQ PUSH2 0x32B JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x1E1D114 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x7A2D13A EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xA28A477 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x241 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17D PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x17BD JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH2 0x791 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x960 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C3 PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x423 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x453 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0xB44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x483 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x513 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x520 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x543 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x573 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x1922 JUMP JUMPDEST PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59E SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x613 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x62E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x652 SWAP2 SWAP1 PUSH2 0x1974 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x666 SWAP1 PUSH2 0x19CC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x692 SWAP1 PUSH2 0x19CC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6F1 PUSH2 0x75A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 EQ PUSH2 0x71D JUMPI DUP1 PUSH2 0x703 PUSH2 0x5B9 JUMP JUMPDEST DUP5 PUSH2 0x70E SWAP2 SWAP1 PUSH2 0x1A29 JUMP JUMPDEST PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST DUP3 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x731 PUSH2 0xF56 JUMP JUMPDEST SWAP1 POP PUSH2 0x73E DUP2 DUP6 DUP6 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x753 DUP3 PUSH2 0xE59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x76D PUSH2 0xF56 JUMP JUMPDEST SWAP1 POP PUSH2 0x77A DUP6 DUP3 DUP6 PUSH2 0xF6F JUMP JUMPDEST PUSH2 0x785 DUP6 DUP6 DUP6 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7F3 DUP3 PUSH2 0x6E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x804 DUP4 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x863 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x87F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST POP PUSH2 0x8AE DUP3 DUP3 PUSH2 0x10F2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x90D SWAP3 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x96A DUP4 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9E5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST POP PUSH2 0xA14 DUP3 DUP5 PUSH2 0x10F2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP4 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA73 SWAP3 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA90 SWAP1 PUSH2 0x19CC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xABC SWAP1 PUSH2 0x19CC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB07 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xADE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB07 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAEA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB1B PUSH2 0xF56 JUMP JUMPDEST SWAP1 POP PUSH2 0xB28 DUP2 DUP6 DUP6 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB3D DUP3 PUSH2 0x6E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB4E DUP5 PUSH2 0x749 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB8F JUMPI PUSH2 0xB8E DUP3 CALLER DUP4 PUSH2 0xF6F JUMP JUMPDEST JUMPDEST PUSH2 0xB99 DUP3 DUP3 PUSH2 0x1171 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B78 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC10 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC34 SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0xCAB SWAP3 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCC4 DUP5 PUSH2 0x7E9 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD05 JUMPI PUSH2 0xD04 DUP3 CALLER DUP7 PUSH2 0xF6F JUMP JUMPDEST JUMPDEST PUSH2 0xD0F DUP3 DUP6 PUSH2 0x1171 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6A SWAP3 SWAP2 SWAP1 PUSH2 0x1B78 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD86 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDAA SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB DUP5 DUP9 PUSH1 0x40 MLOAD PUSH2 0xE21 SWAP3 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE63 PUSH2 0x75A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 EQ PUSH2 0xE8F JUMPI PUSH2 0xE74 PUSH2 0x5B9 JUMP JUMPDEST DUP2 DUP5 PUSH2 0xE80 SWAP2 SWAP1 PUSH2 0x1A29 JUMP JUMPDEST PUSH2 0xE8A SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0xE91 JUMP JUMPDEST DUP3 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEAB PUSH2 0xEA6 DUP4 PUSH2 0x91B JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEBC DUP3 PUSH2 0x91B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF4F DUP3 PUSH2 0xE59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF6A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF7A DUP5 DUP5 PUSH2 0xEC3 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xFFC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xFED JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFFB DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1072 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10ED DUP4 DUP4 DUP4 PUSH2 0x13BF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1162 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1159 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x116D PUSH0 DUP4 DUP4 PUSH2 0x13BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11E1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D8 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11EC DUP3 PUSH0 DUP4 PUSH2 0x13BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1260 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1257 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12D0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C7 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x13B9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13B0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x140F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1403 SWAP2 SWAP1 PUSH2 0x1BD4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x14DD JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1498 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1524 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x156E JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x15CB SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15EA DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1603 PUSH0 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x164B DUP3 PUSH2 0x1609 JUMP JUMPDEST PUSH2 0x1655 DUP2 DUP6 PUSH2 0x1613 JUMP JUMPDEST SWAP4 POP PUSH2 0x1665 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1623 JUMP JUMPDEST PUSH2 0x166E DUP2 PUSH2 0x1631 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1691 DUP2 DUP5 PUSH2 0x1641 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16A6 DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x16B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16C1 DUP2 PUSH2 0x169D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16DC JUMPI PUSH2 0x16DB PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16E9 DUP5 DUP3 DUP6 ADD PUSH2 0x16B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x171B DUP3 PUSH2 0x16F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x172B DUP2 PUSH2 0x1711 JUMP JUMPDEST DUP2 EQ PUSH2 0x1735 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1746 DUP2 PUSH2 0x1722 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1762 JUMPI PUSH2 0x1761 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x176F DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1780 DUP6 DUP3 DUP7 ADD PUSH2 0x16B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x179E DUP2 PUSH2 0x178A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17B7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1795 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17D4 JUMPI PUSH2 0x17D3 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17E1 DUP7 DUP3 DUP8 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x17F2 DUP7 DUP3 DUP8 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1803 DUP7 DUP3 DUP8 ADD PUSH2 0x16B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1822 DUP2 PUSH2 0x180D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x183B PUSH0 DUP4 ADD DUP5 PUSH2 0x1819 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x184A DUP2 PUSH2 0x1711 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1863 PUSH0 DUP4 ADD DUP5 PUSH2 0x1841 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x187E JUMPI PUSH2 0x187D PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x188B DUP5 DUP3 DUP6 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18A9 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18B7 DUP6 DUP3 DUP7 ADD PUSH2 0x16B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18C8 DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18E9 JUMPI PUSH2 0x18E8 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18F6 DUP7 DUP3 DUP8 ADD PUSH2 0x16B3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1907 DUP7 DUP3 DUP8 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1918 DUP7 DUP3 DUP8 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1938 JUMPI PUSH2 0x1937 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1945 DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1956 DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x196E DUP2 PUSH2 0x169D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1989 JUMPI PUSH2 0x1988 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1996 DUP5 DUP3 DUP6 ADD PUSH2 0x1960 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19E3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19F6 JUMPI PUSH2 0x19F5 PUSH2 0x199F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A33 DUP3 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3E DUP4 PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1A4C DUP2 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1A63 JUMPI PUSH2 0x1A62 PUSH2 0x19FC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AA1 DUP3 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AAC DUP4 PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1ABC JUMPI PUSH2 0x1ABB PUSH2 0x1A6A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1ADA PUSH0 DUP4 ADD DUP7 PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x1AE7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x1AF4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1B05 DUP2 PUSH2 0x178A JUMP JUMPDEST DUP2 EQ PUSH2 0x1B0F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B20 DUP2 PUSH2 0x1AFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B3B JUMPI PUSH2 0x1B3A PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B48 DUP5 DUP3 DUP6 ADD PUSH2 0x1B12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B64 PUSH0 DUP4 ADD DUP6 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x1B71 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B8B PUSH0 DUP4 ADD DUP6 PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x1B98 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BB2 PUSH0 DUP4 ADD DUP7 PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x1BBF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x1BCC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BDE DUP3 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE9 DUP4 PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C01 JUMPI PUSH2 0x1C00 PUSH2 0x19FC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 DUP2 TIMESTAMP 0xA7 0xEB MOD PUSH31 0x2E8A157FDAFB01D7A976AC5A61C3B6B0FD8ECAA275B0736A6F64736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1004:4595:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3641:163;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4190:368:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4836:128:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1254:105:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5106:110;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4972:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1367:450;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1827:450:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4704:124:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2287:664;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2959:672;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5224:107;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3814:368;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5339:133;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5480:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4569:127:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3641:163;3693:7;3765:6;:16;;;3790:4;3765:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3758:38;;3641:163;:::o;1779:89:1:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;4190:368:5:-;4260:7;4326:14;4343:13;:11;:13::i;:::-;4326:30;;4506:1;4496:6;:11;:54;;4544:6;4528:13;:11;:13::i;:::-;4519:6;:22;;;;:::i;:::-;:31;;;;:::i;:::-;4496:54;;;4510:6;4496:54;4489:61;;;4190:368;;;:::o;3998:186:1:-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;4836:128:5:-;4906:7;4933:23;4949:6;4933:15;:23::i;:::-;4926:30;;4836:128;;;:::o;2849:97:1:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;1254:105:5:-;1309:7;1344:6;1329:22;;1254:105;:::o;5106:110::-;5164:7;5191:17;5184:24;;5106:110;;;:::o;4972:126::-;5040:7;5067:23;5083:6;5067:15;:23::i;:::-;5060:30;;4972:126;;;:::o;1367:450::-;1441:14;1543:22;1558:6;1543:14;:22::i;:::-;1534:31;;1622:6;:19;;;1642:10;1662:4;1669:6;1622:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1689:23;1695:8;1705:6;1689:5;:23::i;:::-;1782:8;1762:45;;1770:10;1762:45;;;1792:6;1800;1762:45;;;;;;;:::i;:::-;;;;;;;;1367:450;;;;:::o;3004:116:1:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;1827:450:5:-;1899:14;2006:19;2018:6;2006:11;:19::i;:::-;1997:28;;2084:6;:19;;;2104:10;2124:4;2131:6;2084:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2151:23;2157:8;2167:6;2151:5;:23::i;:::-;2244:8;2224:45;;2232:10;2224:45;;;2254:6;2262;2224:45;;;;;;;:::i;:::-;;;;;;;;1827:450;;;;:::o;1981:93:1:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;4704:124:5:-;4770:7;4797:23;4813:6;4797:15;:23::i;:::-;4790:30;;4704:124;;;:::o;2287:664::-;2412:14;2516:23;2532:6;2516:15;:23::i;:::-;2507:32;;2637:5;2623:19;;:10;:19;;;2619:94;;2659:42;2675:5;2682:10;2694:6;2659:15;:42::i;:::-;2619:94;2773:20;2779:5;2786:6;2773:5;:20::i;:::-;2804:6;:15;;;2820:8;2830:6;2804:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2921:5;2890:53;;2911:8;2890:53;;2899:10;2890:53;;;2928:6;2936;2890:53;;;;;;;:::i;:::-;;;;;;;;2287:664;;;;;:::o;2959:672::-;3082:14;3190:21;3204:6;3190:13;:21::i;:::-;3181:30;;3309:5;3295:19;;:10;:19;;;3291:94;;3331:42;3347:5;3354:10;3366:6;3331:15;:42::i;:::-;3291:94;3446:20;3452:5;3459:6;3446:5;:20::i;:::-;3477:6;:15;;;3493:8;3503:6;3477:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3601:5;3570:53;;3591:8;3570:53;;3579:10;3570:53;;;3608:6;3616;3570:53;;;;;;;:::i;:::-;;;;;;;;2959:672;;;;;:::o;5224:107::-;5279:7;5306:17;5299:24;;5224:107;;;:::o;3814:368::-;3884:7;3950:14;3967:13;:11;:13::i;:::-;3950:30;;4130:1;4120:6;:11;:54;;4161:13;:11;:13::i;:::-;4152:6;4143;:15;;;;:::i;:::-;:31;;;;:::i;:::-;4120:54;;;4134:6;4120:54;4113:61;;;3814:368;;;:::o;5339:133::-;5404:7;5431:33;5447:16;5457:5;5447:9;:16::i;:::-;5431:15;:33::i;:::-;5424:40;;5339:133;;;:::o;5480:114::-;5543:7;5570:16;5580:5;5570:9;:16::i;:::-;5563:23;;5480:114;;;:::o;3551:140:1:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;4569:127:5:-;4638:7;4665:23;4681:6;4665:15;:23::i;:::-;4658:30;;4569:127;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8726:128:1:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:77:7:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:139::-;811:6;806:3;801;795:23;852:1;843:6;838:3;834:16;827:27;722:139;;;:::o;867:102::-;908:6;959:2;955:7;950:2;943:5;939:14;935:28;925:38;;867:102;;;:::o;975:377::-;1063:3;1091:39;1124:5;1091:39;:::i;:::-;1146:71;1210:6;1205:3;1146:71;:::i;:::-;1139:78;;1226:65;1284:6;1279:3;1272:4;1265:5;1261:16;1226:65;:::i;:::-;1316:29;1338:6;1316:29;:::i;:::-;1311:3;1307:39;1300:46;;1067:285;975:377;;;;:::o;1358:313::-;1471:4;1509:2;1498:9;1494:18;1486:26;;1558:9;1552:4;1548:20;1544:1;1533:9;1529:17;1522:47;1586:78;1659:4;1650:6;1586:78;:::i;:::-;1578:86;;1358:313;;;;:::o;1758:117::-;1867:1;1864;1857:12;2004:122;2077:24;2095:5;2077:24;:::i;:::-;2070:5;2067:35;2057:63;;2116:1;2113;2106:12;2057:63;2004:122;:::o;2132:139::-;2178:5;2216:6;2203:20;2194:29;;2232:33;2259:5;2232:33;:::i;:::-;2132:139;;;;:::o;2277:329::-;2336:6;2385:2;2373:9;2364:7;2360:23;2356:32;2353:119;;;2391:79;;:::i;:::-;2353:119;2511:1;2536:53;2581:7;2572:6;2561:9;2557:22;2536:53;:::i;:::-;2526:63;;2482:117;2277:329;;;;:::o;2612:126::-;2649:7;2689:42;2682:5;2678:54;2667:65;;2612:126;;;:::o;2744:96::-;2781:7;2810:24;2828:5;2810:24;:::i;:::-;2799:35;;2744:96;;;:::o;2846:122::-;2919:24;2937:5;2919:24;:::i;:::-;2912:5;2909:35;2899:63;;2958:1;2955;2948:12;2899:63;2846:122;:::o;2974:139::-;3020:5;3058:6;3045:20;3036:29;;3074:33;3101:5;3074:33;:::i;:::-;2974:139;;;;:::o;3119:474::-;3187:6;3195;3244:2;3232:9;3223:7;3219:23;3215:32;3212:119;;;3250:79;;:::i;:::-;3212:119;3370:1;3395:53;3440:7;3431:6;3420:9;3416:22;3395:53;:::i;:::-;3385:63;;3341:117;3497:2;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3468:118;3119:474;;;;;:::o;3599:90::-;3633:7;3676:5;3669:13;3662:21;3651:32;;3599:90;;;:::o;3695:109::-;3776:21;3791:5;3776:21;:::i;:::-;3771:3;3764:34;3695:109;;:::o;3810:210::-;3897:4;3935:2;3924:9;3920:18;3912:26;;3948:65;4010:1;3999:9;3995:17;3986:6;3948:65;:::i;:::-;3810:210;;;;:::o;4026:619::-;4103:6;4111;4119;4168:2;4156:9;4147:7;4143:23;4139:32;4136:119;;;4174:79;;:::i;:::-;4136:119;4294:1;4319:53;4364:7;4355:6;4344:9;4340:22;4319:53;:::i;:::-;4309:63;;4265:117;4421:2;4447:53;4492:7;4483:6;4472:9;4468:22;4447:53;:::i;:::-;4437:63;;4392:118;4549:2;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4520:118;4026:619;;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:329::-;5492:6;5541:2;5529:9;5520:7;5516:23;5512:32;5509:119;;;5547:79;;:::i;:::-;5509:119;5667:1;5692:53;5737:7;5728:6;5717:9;5713:22;5692:53;:::i;:::-;5682:63;;5638:117;5433:329;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:619::-;6325:6;6333;6341;6390:2;6378:9;6369:7;6365:23;6361:32;6358:119;;;6396:79;;:::i;:::-;6358:119;6516:1;6541:53;6586:7;6577:6;6566:9;6562:22;6541:53;:::i;:::-;6531:63;;6487:117;6643:2;6669:53;6714:7;6705:6;6694:9;6690:22;6669:53;:::i;:::-;6659:63;;6614:118;6771:2;6797:53;6842:7;6833:6;6822:9;6818:22;6797:53;:::i;:::-;6787:63;;6742:118;6248:619;;;;;:::o;6873:474::-;6941:6;6949;6998:2;6986:9;6977:7;6973:23;6969:32;6966:119;;;7004:79;;:::i;:::-;6966:119;7124:1;7149:53;7194:7;7185:6;7174:9;7170:22;7149:53;:::i;:::-;7139:63;;7095:117;7251:2;7277:53;7322:7;7313:6;7302:9;7298:22;7277:53;:::i;:::-;7267:63;;7222:118;6873:474;;;;;:::o;7353:143::-;7410:5;7441:6;7435:13;7426:22;;7457:33;7484:5;7457:33;:::i;:::-;7353:143;;;;:::o;7502:351::-;7572:6;7621:2;7609:9;7600:7;7596:23;7592:32;7589:119;;;7627:79;;:::i;:::-;7589:119;7747:1;7772:64;7828:7;7819:6;7808:9;7804:22;7772:64;:::i;:::-;7762:74;;7718:128;7502:351;;;;:::o;7859:180::-;7907:77;7904:1;7897:88;8004:4;8001:1;7994:15;8028:4;8025:1;8018:15;8045:320;8089:6;8126:1;8120:4;8116:12;8106:22;;8173:1;8167:4;8163:12;8194:18;8184:81;;8250:4;8242:6;8238:17;8228:27;;8184:81;8312:2;8304:6;8301:14;8281:18;8278:38;8275:84;;8331:18;;:::i;:::-;8275:84;8096:269;8045:320;;;:::o;8371:180::-;8419:77;8416:1;8409:88;8516:4;8513:1;8506:15;8540:4;8537:1;8530:15;8557:410;8597:7;8620:20;8638:1;8620:20;:::i;:::-;8615:25;;8654:20;8672:1;8654:20;:::i;:::-;8649:25;;8709:1;8706;8702:9;8731:30;8749:11;8731:30;:::i;:::-;8720:41;;8910:1;8901:7;8897:15;8894:1;8891:22;8871:1;8864:9;8844:83;8821:139;;8940:18;;:::i;:::-;8821:139;8605:362;8557:410;;;;:::o;8973:180::-;9021:77;9018:1;9011:88;9118:4;9115:1;9108:15;9142:4;9139:1;9132:15;9159:185;9199:1;9216:20;9234:1;9216:20;:::i;:::-;9211:25;;9250:20;9268:1;9250:20;:::i;:::-;9245:25;;9289:1;9279:35;;9294:18;;:::i;:::-;9279:35;9336:1;9333;9329:9;9324:14;;9159:185;;;;:::o;9350:442::-;9499:4;9537:2;9526:9;9522:18;9514:26;;9550:71;9618:1;9607:9;9603:17;9594:6;9550:71;:::i;:::-;9631:72;9699:2;9688:9;9684:18;9675:6;9631:72;:::i;:::-;9713;9781:2;9770:9;9766:18;9757:6;9713:72;:::i;:::-;9350:442;;;;;;:::o;9798:116::-;9868:21;9883:5;9868:21;:::i;:::-;9861:5;9858:32;9848:60;;9904:1;9901;9894:12;9848:60;9798:116;:::o;9920:137::-;9974:5;10005:6;9999:13;9990:22;;10021:30;10045:5;10021:30;:::i;:::-;9920:137;;;;:::o;10063:345::-;10130:6;10179:2;10167:9;10158:7;10154:23;10150:32;10147:119;;;10185:79;;:::i;:::-;10147:119;10305:1;10330:61;10383:7;10374:6;10363:9;10359:22;10330:61;:::i;:::-;10320:71;;10276:125;10063:345;;;;:::o;10414:332::-;10535:4;10573:2;10562:9;10558:18;10550:26;;10586:71;10654:1;10643:9;10639:17;10630:6;10586:71;:::i;:::-;10667:72;10735:2;10724:9;10720:18;10711:6;10667:72;:::i;:::-;10414:332;;;;;:::o;10752:::-;10873:4;10911:2;10900:9;10896:18;10888:26;;10924:71;10992:1;10981:9;10977:17;10968:6;10924:71;:::i;:::-;11005:72;11073:2;11062:9;11058:18;11049:6;11005:72;:::i;:::-;10752:332;;;;;:::o;11090:442::-;11239:4;11277:2;11266:9;11262:18;11254:26;;11290:71;11358:1;11347:9;11343:17;11334:6;11290:71;:::i;:::-;11371:72;11439:2;11428:9;11424:18;11415:6;11371:72;:::i;:::-;11453;11521:2;11510:9;11506:18;11497:6;11453:72;:::i;:::-;11090:442;;;;;;:::o;11538:191::-;11578:3;11597:20;11615:1;11597:20;:::i;:::-;11592:25;;11631:20;11649:1;11631:20;:::i;:::-;11626:25;;11674:1;11671;11667:9;11660:16;;11695:3;11692:1;11689:10;11686:36;;;11702:18;;:::i;:::-;11686:36;11538:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1445800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"asset()": "infinite",
								"balanceOf(address)": "2852",
								"convertToAssets(uint256)": "infinite",
								"convertToShares(uint256)": "infinite",
								"decimals()": "383",
								"deposit(uint256,address)": "infinite",
								"maxDeposit(address)": "730",
								"maxMint(address)": "708",
								"maxRedeem(address)": "2937",
								"maxWithdraw(address)": "infinite",
								"mint(uint256,address)": "infinite",
								"name()": "infinite",
								"previewDeposit(uint256)": "infinite",
								"previewMint(uint256)": "infinite",
								"previewRedeem(uint256)": "infinite",
								"previewWithdraw(uint256)": "infinite",
								"redeem(uint256,address,address)": "infinite",
								"symbol()": "infinite",
								"totalAssets()": "infinite",
								"totalSupply()": "2566",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"withdraw(uint256,address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1004,
									"end": 5599,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 1004,
									"end": 5599,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1004,
									"end": 5599,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1088,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1195,
									"end": 1199,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1201,
									"end": 1207,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1229,
									"end": 1234,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1234,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1220,
									"end": 1234,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1234,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1220,
									"end": 1234,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1234,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1220,
									"end": 1234,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1234,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1234,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1234,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1234,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1242,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1004,
									"end": 5599,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1004,
									"end": 5599,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 677,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 568,
									"end": 677,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 618,
									"end": 625,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 665,
									"end": 670,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 647,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 636,
									"end": 671,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 636,
									"end": 671,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 677,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 568,
									"end": 677,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 568,
									"end": 677,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 677,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 683,
									"end": 831,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 683,
									"end": 831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 769,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 800,
									"end": 805,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 769,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 769,
									"end": 806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 769,
									"end": 806,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 769,
									"end": 806,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 762,
									"end": 767,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 759,
									"end": 807,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 749,
									"end": 825,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 749,
									"end": 825,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 821,
									"end": 822,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 818,
									"end": 819,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 811,
									"end": 823,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 749,
									"end": 825,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 749,
									"end": 825,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 683,
									"end": 831,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 683,
									"end": 831,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 907,
									"end": 912,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 932,
									"end": 945,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 923,
									"end": 945,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 923,
									"end": 945,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 954,
									"end": 1000,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1012,
									"end": 1129,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1012,
									"end": 1129,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1121,
									"end": 1122,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1118,
									"end": 1119,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1111,
									"end": 1123,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1135,
									"end": 1252,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1135,
									"end": 1252,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1244,
									"end": 1245,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 1242,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1234,
									"end": 1246,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1360,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1258,
									"end": 1360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1299,
									"end": 1305,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1350,
									"end": 1352,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1346,
									"end": 1353,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1334,
									"end": 1339,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1330,
									"end": 1344,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1354,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1316,
									"end": 1354,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1316,
									"end": 1354,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1360,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1360,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1360,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1366,
									"end": 1546,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1366,
									"end": 1546,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1491,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1411,
									"end": 1412,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1404,
									"end": 1492,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1511,
									"end": 1515,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1501,
									"end": 1516,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1535,
									"end": 1539,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1532,
									"end": 1533,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1525,
									"end": 1540,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1833,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1552,
									"end": 1833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1635,
									"end": 1662,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1657,
									"end": 1661,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1635,
									"end": 1662,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1662,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1635,
									"end": 1662,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1635,
									"end": 1662,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1627,
									"end": 1633,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1663,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1765,
									"end": 1771,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1753,
									"end": 1763,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1750,
									"end": 1772,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1717,
									"end": 1727,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1714,
									"end": 1748,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1711,
									"end": 1773,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1708,
									"end": 1796,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1708,
									"end": 1796,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1708,
									"end": 1796,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1776,
									"end": 1794,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 1776,
									"end": 1794,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1776,
									"end": 1794,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1776,
									"end": 1794,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 1776,
									"end": 1794,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1708,
									"end": 1796,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1708,
									"end": 1796,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1826,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1812,
									"end": 1814,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1805,
									"end": 1827,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1833,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1833,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1833,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1833,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1839,
									"end": 1968,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1839,
									"end": 1968,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1873,
									"end": 1879,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1900,
									"end": 1920,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 1900,
									"end": 1920,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1900,
									"end": 1920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1900,
									"end": 1920,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 1900,
									"end": 1920,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1890,
									"end": 1920,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1890,
									"end": 1920,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1929,
									"end": 1962,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1957,
									"end": 1961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1949,
									"end": 1955,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1929,
									"end": 1962,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1929,
									"end": 1962,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1929,
									"end": 1962,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1929,
									"end": 1962,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1839,
									"end": 1968,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1839,
									"end": 1968,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1839,
									"end": 1968,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1839,
									"end": 1968,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 2282,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1974,
									"end": 2282,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2036,
									"end": 2040,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2126,
									"end": 2144,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2118,
									"end": 2124,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2115,
									"end": 2145,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2112,
									"end": 2168,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2112,
									"end": 2168,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 2112,
									"end": 2168,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2148,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2148,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2148,
									"end": 2166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2148,
									"end": 2166,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2148,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2112,
									"end": 2168,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 2112,
									"end": 2168,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2186,
									"end": 2215,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2208,
									"end": 2214,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2186,
									"end": 2215,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2186,
									"end": 2215,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2186,
									"end": 2215,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2186,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2178,
									"end": 2215,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2178,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2270,
									"end": 2274,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2264,
									"end": 2268,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2260,
									"end": 2275,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2252,
									"end": 2275,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2252,
									"end": 2275,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 2282,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 2282,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 2282,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 2282,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2288,
									"end": 2427,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 2288,
									"end": 2427,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2383,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2372,
									"end": 2375,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2367,
									"end": 2370,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2361,
									"end": 2384,
									"name": "MCOPY",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2419,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2409,
									"end": 2415,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2404,
									"end": 2407,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2400,
									"end": 2416,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2393,
									"end": 2420,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2288,
									"end": 2427,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2288,
									"end": 2427,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2288,
									"end": 2427,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2288,
									"end": 2427,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2867,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 2433,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2522,
									"end": 2527,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2547,
									"end": 2613,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2563,
									"end": 2612,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 2605,
									"end": 2611,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2563,
									"end": 2612,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 2563,
									"end": 2612,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2563,
									"end": 2612,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 2563,
									"end": 2612,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2547,
									"end": 2613,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2547,
									"end": 2613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2547,
									"end": 2613,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2547,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2538,
									"end": 2613,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2538,
									"end": 2613,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2636,
									"end": 2642,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2629,
									"end": 2634,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2622,
									"end": 2643,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2678,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2667,
									"end": 2672,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2663,
									"end": 2679,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2712,
									"end": 2715,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2703,
									"end": 2709,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2698,
									"end": 2701,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2694,
									"end": 2710,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2691,
									"end": 2716,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2688,
									"end": 2800,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2688,
									"end": 2800,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2688,
									"end": 2800,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2719,
									"end": 2798,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 2719,
									"end": 2798,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 2719,
									"end": 2798,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2719,
									"end": 2798,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 2719,
									"end": 2798,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2688,
									"end": 2800,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2688,
									"end": 2800,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2809,
									"end": 2861,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2854,
									"end": 2860,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2849,
									"end": 2852,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2844,
									"end": 2847,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2809,
									"end": 2861,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 2809,
									"end": 2861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2809,
									"end": 2861,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2809,
									"end": 2861,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2528,
									"end": 2867,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2867,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2867,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2867,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2867,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2867,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2867,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2887,
									"end": 3242,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 2887,
									"end": 3242,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2954,
									"end": 2959,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3003,
									"end": 3006,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2996,
									"end": 3000,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2988,
									"end": 2994,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2984,
									"end": 3001,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2980,
									"end": 3007,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 2970,
									"end": 3092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 2970,
									"end": 3092,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3011,
									"end": 3090,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3011,
									"end": 3090,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3011,
									"end": 3090,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3011,
									"end": 3090,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3011,
									"end": 3090,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2970,
									"end": 3092,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 2970,
									"end": 3092,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3121,
									"end": 3127,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3115,
									"end": 3128,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3146,
									"end": 3236,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3232,
									"end": 3235,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3224,
									"end": 3230,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3217,
									"end": 3221,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3209,
									"end": 3215,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3205,
									"end": 3222,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3146,
									"end": 3236,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 3146,
									"end": 3236,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3146,
									"end": 3236,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3146,
									"end": 3236,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3137,
									"end": 3236,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3137,
									"end": 3236,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2960,
									"end": 3242,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2887,
									"end": 3242,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2887,
									"end": 3242,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2887,
									"end": 3242,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2887,
									"end": 3242,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2887,
									"end": 3242,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 4283,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3248,
									"end": 4283,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3375,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3377,
									"end": 3383,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3385,
									"end": 3391,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3434,
									"end": 3436,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3422,
									"end": 3431,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3413,
									"end": 3420,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3409,
									"end": 3432,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3405,
									"end": 3437,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 3402,
									"end": 3521,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3402,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 3402,
									"end": 3521,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3440,
									"end": 3519,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 3440,
									"end": 3519,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 3440,
									"end": 3519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3440,
									"end": 3519,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 3440,
									"end": 3519,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3402,
									"end": 3521,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 3402,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3560,
									"end": 3561,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3585,
									"end": 3662,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 3654,
									"end": 3661,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3645,
									"end": 3651,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3634,
									"end": 3643,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3630,
									"end": 3652,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3585,
									"end": 3662,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 3585,
									"end": 3662,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3585,
									"end": 3662,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 3585,
									"end": 3662,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3575,
									"end": 3662,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3575,
									"end": 3662,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3531,
									"end": 3672,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3732,
									"end": 3734,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3721,
									"end": 3730,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3717,
									"end": 3735,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3711,
									"end": 3736,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3763,
									"end": 3781,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3755,
									"end": 3761,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3752,
									"end": 3782,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3749,
									"end": 3866,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3749,
									"end": 3866,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 3749,
									"end": 3866,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3785,
									"end": 3864,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3785,
									"end": 3864,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 3785,
									"end": 3864,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3785,
									"end": 3864,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3785,
									"end": 3864,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3749,
									"end": 3866,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 3749,
									"end": 3866,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3890,
									"end": 3964,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 3956,
									"end": 3963,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3947,
									"end": 3953,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3936,
									"end": 3945,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3932,
									"end": 3954,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3890,
									"end": 3964,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 3890,
									"end": 3964,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3890,
									"end": 3964,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 3890,
									"end": 3964,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3880,
									"end": 3964,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3880,
									"end": 3964,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3682,
									"end": 3974,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4034,
									"end": 4036,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4023,
									"end": 4032,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4019,
									"end": 4037,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4013,
									"end": 4038,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4065,
									"end": 4083,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4057,
									"end": 4063,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4054,
									"end": 4084,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4051,
									"end": 4168,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4051,
									"end": 4168,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 4051,
									"end": 4168,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4087,
									"end": 4166,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4087,
									"end": 4166,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 4087,
									"end": 4166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4087,
									"end": 4166,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4087,
									"end": 4166,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4051,
									"end": 4168,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 4051,
									"end": 4168,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4192,
									"end": 4266,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 4258,
									"end": 4265,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4255,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4238,
									"end": 4247,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4234,
									"end": 4256,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4192,
									"end": 4266,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 4192,
									"end": 4266,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4192,
									"end": 4266,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 4192,
									"end": 4266,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4182,
									"end": 4266,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4182,
									"end": 4266,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3984,
									"end": 4276,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 4283,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 4283,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 4283,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 4283,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 4283,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 4283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4289,
									"end": 4388,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 4289,
									"end": 4388,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4341,
									"end": 4347,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4375,
									"end": 4380,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4369,
									"end": 4381,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4359,
									"end": 4381,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4359,
									"end": 4381,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4289,
									"end": 4388,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4289,
									"end": 4388,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4289,
									"end": 4388,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4289,
									"end": 4388,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4394,
									"end": 4574,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 4394,
									"end": 4574,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4442,
									"end": 4519,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4439,
									"end": 4440,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4432,
									"end": 4520,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4539,
									"end": 4543,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 4536,
									"end": 4537,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4529,
									"end": 4544,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4563,
									"end": 4567,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4560,
									"end": 4561,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4553,
									"end": 4568,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4580,
									"end": 4900,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 4580,
									"end": 4900,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4624,
									"end": 4630,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4661,
									"end": 4662,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4655,
									"end": 4659,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4651,
									"end": 4663,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4641,
									"end": 4663,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4641,
									"end": 4663,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4708,
									"end": 4709,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4702,
									"end": 4706,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4698,
									"end": 4710,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4729,
									"end": 4747,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4719,
									"end": 4800,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 4719,
									"end": 4800,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4785,
									"end": 4789,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 4777,
									"end": 4783,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4773,
									"end": 4790,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4763,
									"end": 4790,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4763,
									"end": 4790,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4719,
									"end": 4800,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 4719,
									"end": 4800,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4847,
									"end": 4849,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4839,
									"end": 4845,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4836,
									"end": 4850,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4816,
									"end": 4834,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4813,
									"end": 4851,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4810,
									"end": 4894,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 4810,
									"end": 4894,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 4884,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 4866,
									"end": 4884,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 4866,
									"end": 4884,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 4884,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 4866,
									"end": 4884,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4810,
									"end": 4894,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 4810,
									"end": 4894,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4631,
									"end": 4900,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4580,
									"end": 4900,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4580,
									"end": 4900,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4580,
									"end": 4900,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4580,
									"end": 4900,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4906,
									"end": 5047,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 4906,
									"end": 5047,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4955,
									"end": 4959,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4978,
									"end": 4981,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4970,
									"end": 4981,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4970,
									"end": 4981,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5001,
									"end": 5004,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4998,
									"end": 4999,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4991,
									"end": 5005,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5035,
									"end": 5039,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5032,
									"end": 5033,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5022,
									"end": 5040,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 5014,
									"end": 5040,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5014,
									"end": 5040,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4906,
									"end": 5047,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4906,
									"end": 5047,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4906,
									"end": 5047,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4906,
									"end": 5047,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5053,
									"end": 5146,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 5053,
									"end": 5146,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5090,
									"end": 5096,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5137,
									"end": 5139,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5132,
									"end": 5134,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5125,
									"end": 5130,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5135,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5117,
									"end": 5140,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 5107,
									"end": 5140,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5107,
									"end": 5140,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5053,
									"end": 5146,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5053,
									"end": 5146,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5053,
									"end": 5146,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5053,
									"end": 5146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5152,
									"end": 5259,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 5152,
									"end": 5259,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5196,
									"end": 5204,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5246,
									"end": 5251,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5240,
									"end": 5244,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5236,
									"end": 5252,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 5215,
									"end": 5252,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5215,
									"end": 5252,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5152,
									"end": 5259,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5152,
									"end": 5259,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5152,
									"end": 5259,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5152,
									"end": 5259,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5152,
									"end": 5259,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5265,
									"end": 5658,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 5265,
									"end": 5658,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5334,
									"end": 5340,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5384,
									"end": 5385,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5372,
									"end": 5382,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5368,
									"end": 5386,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5407,
									"end": 5504,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 5437,
									"end": 5503,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5426,
									"end": 5435,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5407,
									"end": 5504,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 5407,
									"end": 5504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5407,
									"end": 5504,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 5407,
									"end": 5504,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5525,
									"end": 5564,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 5555,
									"end": 5563,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5544,
									"end": 5553,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5525,
									"end": 5564,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 5525,
									"end": 5564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5525,
									"end": 5564,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 5525,
									"end": 5564,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5513,
									"end": 5564,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 5513,
									"end": 5564,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5597,
									"end": 5601,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5593,
									"end": 5602,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5586,
									"end": 5591,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5582,
									"end": 5603,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5573,
									"end": 5603,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5573,
									"end": 5603,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5646,
									"end": 5650,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5636,
									"end": 5644,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5632,
									"end": 5651,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 5630,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5622,
									"end": 5652,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5612,
									"end": 5652,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5612,
									"end": 5652,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5341,
									"end": 5658,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5341,
									"end": 5658,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5265,
									"end": 5658,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5265,
									"end": 5658,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5265,
									"end": 5658,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5265,
									"end": 5658,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5265,
									"end": 5658,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5265,
									"end": 5658,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5664,
									"end": 5741,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 5664,
									"end": 5741,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5701,
									"end": 5708,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5730,
									"end": 5735,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5719,
									"end": 5735,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5719,
									"end": 5735,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5664,
									"end": 5741,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5664,
									"end": 5741,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5664,
									"end": 5741,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5664,
									"end": 5741,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5747,
									"end": 5807,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 5747,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5775,
									"end": 5778,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5796,
									"end": 5801,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5789,
									"end": 5801,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5789,
									"end": 5801,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5747,
									"end": 5807,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5747,
									"end": 5807,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5747,
									"end": 5807,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5747,
									"end": 5807,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5813,
									"end": 5955,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 5813,
									"end": 5955,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5863,
									"end": 5872,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5896,
									"end": 5949,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 5914,
									"end": 5948,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 5923,
									"end": 5947,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 5941,
									"end": 5946,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5923,
									"end": 5947,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 5923,
									"end": 5947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5923,
									"end": 5947,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 5923,
									"end": 5947,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5914,
									"end": 5948,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 5914,
									"end": 5948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5914,
									"end": 5948,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 5914,
									"end": 5948,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5896,
									"end": 5949,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 5896,
									"end": 5949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5896,
									"end": 5949,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 5896,
									"end": 5949,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5883,
									"end": 5949,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5883,
									"end": 5949,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5813,
									"end": 5955,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5813,
									"end": 5955,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5813,
									"end": 5955,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5813,
									"end": 5955,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5961,
									"end": 6036,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5961,
									"end": 6036,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6004,
									"end": 6007,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6025,
									"end": 6030,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6018,
									"end": 6030,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6018,
									"end": 6030,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5961,
									"end": 6036,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5961,
									"end": 6036,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5961,
									"end": 6036,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5961,
									"end": 6036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6042,
									"end": 6311,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 6042,
									"end": 6311,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6152,
									"end": 6191,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 6183,
									"end": 6190,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6152,
									"end": 6191,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 6152,
									"end": 6191,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6152,
									"end": 6191,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 6152,
									"end": 6191,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6213,
									"end": 6304,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 6262,
									"end": 6303,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 6286,
									"end": 6302,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6262,
									"end": 6303,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6262,
									"end": 6303,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6262,
									"end": 6303,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 6262,
									"end": 6303,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6254,
									"end": 6260,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6247,
									"end": 6251,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6241,
									"end": 6252,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6213,
									"end": 6304,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 6213,
									"end": 6304,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6213,
									"end": 6304,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 6213,
									"end": 6304,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6207,
									"end": 6211,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6200,
									"end": 6305,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6118,
									"end": 6311,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6042,
									"end": 6311,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6042,
									"end": 6311,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6042,
									"end": 6311,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6042,
									"end": 6311,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6317,
									"end": 6390,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 6317,
									"end": 6390,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6362,
									"end": 6365,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6390,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6317,
									"end": 6390,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6396,
									"end": 6585,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 6396,
									"end": 6585,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6473,
									"end": 6505,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 6473,
									"end": 6505,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 6473,
									"end": 6505,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6473,
									"end": 6505,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 6473,
									"end": 6505,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6514,
									"end": 6579,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 6572,
									"end": 6578,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6564,
									"end": 6570,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6558,
									"end": 6562,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6514,
									"end": 6579,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 6514,
									"end": 6579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6514,
									"end": 6579,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 6514,
									"end": 6579,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6449,
									"end": 6585,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6396,
									"end": 6585,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6396,
									"end": 6585,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6396,
									"end": 6585,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6591,
									"end": 6777,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 6591,
									"end": 6777,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6771,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 6651,
									"end": 6771,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6668,
									"end": 6671,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6661,
									"end": 6666,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6658,
									"end": 6672,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6771,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6771,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 6651,
									"end": 6771,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6722,
									"end": 6761,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 6759,
									"end": 6760,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6752,
									"end": 6757,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6722,
									"end": 6761,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 6722,
									"end": 6761,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6722,
									"end": 6761,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 6722,
									"end": 6761,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6695,
									"end": 6696,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6688,
									"end": 6693,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6684,
									"end": 6697,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6675,
									"end": 6697,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6675,
									"end": 6697,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6771,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 6651,
									"end": 6771,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6771,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 6651,
									"end": 6771,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6591,
									"end": 6777,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6591,
									"end": 6777,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6591,
									"end": 6777,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6783,
									"end": 7326,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 6783,
									"end": 7326,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6884,
									"end": 6886,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6879,
									"end": 6882,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6876,
									"end": 6887,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6873,
									"end": 7319,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6873,
									"end": 7319,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 6873,
									"end": 7319,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6918,
									"end": 6956,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 6950,
									"end": 6955,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6918,
									"end": 6956,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 6918,
									"end": 6956,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6918,
									"end": 6956,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 6918,
									"end": 6956,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7002,
									"end": 7031,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 7020,
									"end": 7030,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7002,
									"end": 7031,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 7002,
									"end": 7031,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7002,
									"end": 7031,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 7002,
									"end": 7031,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6992,
									"end": 7000,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6988,
									"end": 7032,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7185,
									"end": 7187,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7173,
									"end": 7183,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7170,
									"end": 7188,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7167,
									"end": 7216,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7167,
									"end": 7216,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 7167,
									"end": 7216,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7206,
									"end": 7214,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7191,
									"end": 7214,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7191,
									"end": 7214,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7167,
									"end": 7216,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 7167,
									"end": 7216,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7229,
									"end": 7309,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 7285,
									"end": 7307,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 7303,
									"end": 7306,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7285,
									"end": 7307,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 7285,
									"end": 7307,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7285,
									"end": 7307,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 7285,
									"end": 7307,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7275,
									"end": 7283,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7271,
									"end": 7308,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7258,
									"end": 7269,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7229,
									"end": 7309,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 7229,
									"end": 7309,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7229,
									"end": 7309,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 7229,
									"end": 7309,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6888,
									"end": 7319,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6888,
									"end": 7319,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6873,
									"end": 7319,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 6873,
									"end": 7319,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6783,
									"end": 7326,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6783,
									"end": 7326,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6783,
									"end": 7326,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6783,
									"end": 7326,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7332,
									"end": 7449,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 7332,
									"end": 7449,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7386,
									"end": 7394,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7436,
									"end": 7441,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7430,
									"end": 7434,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7426,
									"end": 7442,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 7405,
									"end": 7442,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7405,
									"end": 7442,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7332,
									"end": 7449,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7332,
									"end": 7449,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7332,
									"end": 7449,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7332,
									"end": 7449,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7332,
									"end": 7449,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7455,
									"end": 7624,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 7455,
									"end": 7624,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7499,
									"end": 7505,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7532,
									"end": 7583,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 7580,
									"end": 7581,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7576,
									"end": 7582,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7568,
									"end": 7573,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7565,
									"end": 7566,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7561,
									"end": 7574,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7532,
									"end": 7583,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 7532,
									"end": 7583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7532,
									"end": 7583,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 7532,
									"end": 7583,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7528,
									"end": 7584,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7613,
									"end": 7617,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7607,
									"end": 7611,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7603,
									"end": 7618,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7593,
									"end": 7618,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7593,
									"end": 7618,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7506,
									"end": 7624,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7455,
									"end": 7624,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7455,
									"end": 7624,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7455,
									"end": 7624,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7455,
									"end": 7624,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7455,
									"end": 7624,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7629,
									"end": 7924,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 7629,
									"end": 7924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7705,
									"end": 7709,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7851,
									"end": 7880,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 7876,
									"end": 7879,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7870,
									"end": 7874,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7851,
									"end": 7880,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 7851,
									"end": 7880,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7851,
									"end": 7880,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 7851,
									"end": 7880,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7843,
									"end": 7880,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7843,
									"end": 7880,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7913,
									"end": 7916,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7910,
									"end": 7911,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 7906,
									"end": 7917,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7900,
									"end": 7904,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7897,
									"end": 7918,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 7889,
									"end": 7918,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7889,
									"end": 7918,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7629,
									"end": 7924,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7629,
									"end": 7924,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7629,
									"end": 7924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7629,
									"end": 7924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7629,
									"end": 7924,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7929,
									"end": 9324,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7929,
									"end": 9324,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8046,
									"end": 8083,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 8079,
									"end": 8082,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8046,
									"end": 8083,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 8046,
									"end": 8083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8046,
									"end": 8083,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 8046,
									"end": 8083,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8148,
									"end": 8166,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8140,
									"end": 8146,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8137,
									"end": 8167,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8134,
									"end": 8190,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8134,
									"end": 8190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 8134,
									"end": 8190,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8170,
									"end": 8188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 8170,
									"end": 8188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 8170,
									"end": 8188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8170,
									"end": 8188,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 8170,
									"end": 8188,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8134,
									"end": 8190,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 8134,
									"end": 8190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8214,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8240,
									"end": 8251,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 8214,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 8214,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8214,
									"end": 8252,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 8214,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8299,
									"end": 8366,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 8359,
									"end": 8365,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8351,
									"end": 8357,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8345,
									"end": 8349,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8299,
									"end": 8366,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 8299,
									"end": 8366,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8299,
									"end": 8366,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 8299,
									"end": 8366,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8393,
									"end": 8394,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8417,
									"end": 8421,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8404,
									"end": 8421,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8404,
									"end": 8421,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8449,
									"end": 8451,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8441,
									"end": 8447,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8438,
									"end": 8452,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8466,
									"end": 8467,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8461,
									"end": 9079,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8461,
									"end": 9079,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8461,
									"end": 9079,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 8461,
									"end": 9079,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9123,
									"end": 9124,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9140,
									"end": 9146,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9137,
									"end": 9214,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9137,
									"end": 9214,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 9137,
									"end": 9214,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9189,
									"end": 9198,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9184,
									"end": 9187,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 9180,
									"end": 9199,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9174,
									"end": 9200,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9165,
									"end": 9200,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9165,
									"end": 9200,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9137,
									"end": 9214,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 9137,
									"end": 9214,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9240,
									"end": 9307,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 9300,
									"end": 9306,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9293,
									"end": 9298,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9240,
									"end": 9307,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 9240,
									"end": 9307,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9240,
									"end": 9307,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 9240,
									"end": 9307,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9234,
									"end": 9238,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9227,
									"end": 9308,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9096,
									"end": 9318,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8431,
									"end": 9318,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 8431,
									"end": 9318,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8461,
									"end": 9079,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 8461,
									"end": 9079,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8513,
									"end": 8517,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8509,
									"end": 8518,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 8501,
									"end": 8507,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8497,
									"end": 8519,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8547,
									"end": 8584,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 8579,
									"end": 8583,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8547,
									"end": 8584,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 8547,
									"end": 8584,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8547,
									"end": 8584,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 8547,
									"end": 8584,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8606,
									"end": 8607,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8620,
									"end": 8828,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 8620,
									"end": 8828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8634,
									"end": 8641,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8631,
									"end": 8632,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8628,
									"end": 8642,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8620,
									"end": 8828,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8620,
									"end": 8828,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 8620,
									"end": 8828,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8713,
									"end": 8722,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8708,
									"end": 8711,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8704,
									"end": 8723,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8698,
									"end": 8724,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8690,
									"end": 8696,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8683,
									"end": 8725,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8764,
									"end": 8765,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8756,
									"end": 8762,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8752,
									"end": 8766,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8742,
									"end": 8766,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8742,
									"end": 8766,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8811,
									"end": 8813,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8800,
									"end": 8809,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8796,
									"end": 8814,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8783,
									"end": 8814,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 8783,
									"end": 8814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8657,
									"end": 8661,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8654,
									"end": 8655,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8650,
									"end": 8662,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8645,
									"end": 8662,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8645,
									"end": 8662,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8620,
									"end": 8828,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 8620,
									"end": 8828,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8620,
									"end": 8828,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 8620,
									"end": 8828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8856,
									"end": 8862,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8847,
									"end": 8854,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8844,
									"end": 8863,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8841,
									"end": 9020,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8841,
									"end": 9020,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 8841,
									"end": 9020,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8914,
									"end": 8923,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8909,
									"end": 8912,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8905,
									"end": 8924,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8899,
									"end": 8925,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8957,
									"end": 9005,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 8999,
									"end": 9003,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8991,
									"end": 8997,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8987,
									"end": 9004,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8976,
									"end": 8985,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8957,
									"end": 9005,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 8957,
									"end": 9005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8957,
									"end": 9005,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 8957,
									"end": 9005,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8949,
									"end": 8955,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8864,
									"end": 9020,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8841,
									"end": 9020,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 8841,
									"end": 9020,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9066,
									"end": 9067,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9062,
									"end": 9063,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 9054,
									"end": 9060,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 9050,
									"end": 9064,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 9046,
									"end": 9068,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9040,
									"end": 9044,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 9033,
									"end": 9069,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8468,
									"end": 9079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8468,
									"end": 9079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8468,
									"end": 9079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8431,
									"end": 9318,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 8431,
									"end": 9318,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8431,
									"end": 9318,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8021,
									"end": 9324,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8021,
									"end": 9324,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8021,
									"end": 9324,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7929,
									"end": 9324,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7929,
									"end": 9324,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7929,
									"end": 9324,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 5599,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1004,
									"end": 5599,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1004,
									"end": 5599,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1004,
									"end": 5599,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1004,
									"end": 5599,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1004,
									"end": 5599,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1004,
									"end": 5599,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1004,
									"end": 5599,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1004,
									"end": 5599,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1004,
									"end": 5599,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "799"
								},
								{
									"begin": 1004,
									"end": 5599,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1004,
									"end": 5599,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1004,
									"end": 5599,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220258142a7eb067e2e8a157fdafb01d7a976ac5a61c3b6b0fd8ecaa275b0736a6f64736f6c634300081a0033",
									".code": [
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "BA087652"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "CE96CB77"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "CE96CB77"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "D905777E"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "EF8B30F7"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "BA087652"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "C63D75B6"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "C6E6F592"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "94BF804D"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "B3D7F6B9"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "B460AF94"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "38D52E0F"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "402D267D"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "4CDAD506"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "6E553F65"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "1E1D114"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "7A2D13A"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "A28A477"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 5599,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 3641,
											"end": 3804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3641,
											"end": 3804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 4190,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 4190,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 4190,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 4836,
											"end": 4964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4836,
											"end": 4964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 4836,
											"end": 4964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1254,
											"end": 1359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1254,
											"end": 1359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 5106,
											"end": 5216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 5106,
											"end": 5216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 5106,
											"end": 5216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 4972,
											"end": 5098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 4972,
											"end": 5098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 4972,
											"end": 5098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1367,
											"end": 1817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1367,
											"end": 1817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1367,
											"end": 1817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1827,
											"end": 2277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1827,
											"end": 2277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1827,
											"end": 2277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 4704,
											"end": 4828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4704,
											"end": 4828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 4704,
											"end": 4828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2287,
											"end": 2951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2287,
											"end": 2951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2287,
											"end": 2951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2959,
											"end": 3631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2959,
											"end": 3631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2959,
											"end": 3631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 5224,
											"end": 5331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 5224,
											"end": 5331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 5224,
											"end": 5331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3814,
											"end": 4182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3814,
											"end": 4182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3814,
											"end": 4182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 5339,
											"end": 5472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5339,
											"end": 5472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 5339,
											"end": 5472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 5480,
											"end": 5594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5480,
											"end": 5594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 5480,
											"end": 5594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 4569,
											"end": 4696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4569,
											"end": 4696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 4569,
											"end": 4696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3693,
											"end": 3700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3771,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "799"
										},
										{
											"begin": 3765,
											"end": 3781,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3765,
											"end": 3781,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3781,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3790,
											"end": 3794,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 3765,
											"end": 3796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3765,
											"end": 3796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3758,
											"end": 3796,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3758,
											"end": 3796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 3804,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 3804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4260,
											"end": 4267,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4326,
											"end": 4340,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4343,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4343,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4343,
											"end": 4356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4343,
											"end": 4356,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4343,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4326,
											"end": 4356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4326,
											"end": 4356,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4506,
											"end": 4507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4496,
											"end": 4502,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4496,
											"end": 4507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4496,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4496,
											"end": 4550,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4544,
											"end": 4550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 4528,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 4528,
											"end": 4541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4541,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 4528,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4519,
											"end": 4525,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4519,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4519,
											"end": 4541,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4519,
											"end": 4541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4519,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4519,
											"end": 4541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4519,
											"end": 4541,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4519,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4519,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4519,
											"end": 4550,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4519,
											"end": 4550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4519,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4519,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4519,
											"end": 4550,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4519,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4496,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4496,
											"end": 4550,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4496,
											"end": 4550,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4496,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4516,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4496,
											"end": 4550,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4496,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4489,
											"end": 4550,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4489,
											"end": 4550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4489,
											"end": 4550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4906,
											"end": 4913,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 4949,
											"end": 4955,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4933,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 4933,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4933,
											"end": 4956,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 4933,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4926,
											"end": 4956,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4926,
											"end": 4956,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1344,
											"end": 1350,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "799"
										},
										{
											"begin": 1329,
											"end": 1351,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1329,
											"end": 1351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5171,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5208,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5184,
											"end": 5208,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5184,
											"end": 5208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5040,
											"end": 5047,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5067,
											"end": 5090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 5083,
											"end": 5089,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5067,
											"end": 5082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 5067,
											"end": 5090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5067,
											"end": 5090,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 5067,
											"end": 5090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5060,
											"end": 5090,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5060,
											"end": 5090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 1558,
											"end": 1564,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1543,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1543,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1543,
											"end": 1565,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 1543,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1628,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "799"
										},
										{
											"begin": 1622,
											"end": 1641,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1622,
											"end": 1641,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1641,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1642,
											"end": 1652,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1675,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 1622,
											"end": 1676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1622,
											"end": 1676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 1695,
											"end": 1703,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1705,
											"end": 1711,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1689,
											"end": 1712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1712,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 1689,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1790,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1780,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "DCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7"
										},
										{
											"begin": 1792,
											"end": 1798,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1762,
											"end": 1807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1899,
											"end": 1913,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2018,
											"end": 2024,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2006,
											"end": 2025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "799"
										},
										{
											"begin": 2084,
											"end": 2103,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2084,
											"end": 2103,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2103,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 2104,
											"end": 2114,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2128,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2084,
											"end": 2138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2084,
											"end": 2138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2151,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2157,
											"end": 2165,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 2151,
											"end": 2174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2151,
											"end": 2174,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2151,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2252,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2242,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "PUSH",
											"source": 5,
											"value": "DCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7"
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2262,
											"end": 2268,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2224,
											"end": 2269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4777,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4797,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4797,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 4797,
											"end": 4820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4797,
											"end": 4820,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 4797,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4820,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2532,
											"end": 2538,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2516,
											"end": 2539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2539,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2516,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2539,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2642,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2642,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2623,
											"end": 2642,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2633,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2642,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2623,
											"end": 2642,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2642,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2619,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2619,
											"end": 2713,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2675,
											"end": 2680,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2692,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2694,
											"end": 2700,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2659,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2659,
											"end": 2701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2619,
											"end": 2713,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2619,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2773,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2773,
											"end": 2793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2810,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "799"
										},
										{
											"begin": 2804,
											"end": 2819,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2804,
											"end": 2819,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2819,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2820,
											"end": 2828,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2836,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 2804,
											"end": 2837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2804,
											"end": 2837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2921,
											"end": 2926,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2911,
											"end": 2919,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2899,
											"end": 2909,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH",
											"source": 5,
											"value": "FBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB"
										},
										{
											"begin": 2928,
											"end": 2934,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 2942,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2890,
											"end": 2943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2943,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3082,
											"end": 3096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3190,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 3204,
											"end": 3210,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3190,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3190,
											"end": 3211,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 3190,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3309,
											"end": 3314,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3295,
											"end": 3314,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3295,
											"end": 3314,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3295,
											"end": 3305,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3295,
											"end": 3314,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3295,
											"end": 3314,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3295,
											"end": 3314,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3291,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 3291,
											"end": 3385,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3331,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 3347,
											"end": 3352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3354,
											"end": 3364,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3372,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3331,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3331,
											"end": 3373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3331,
											"end": 3373,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 3331,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3291,
											"end": 3385,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 3291,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 3452,
											"end": 3457,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3465,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 3446,
											"end": 3466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3466,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 3446,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3483,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "799"
										},
										{
											"begin": 3477,
											"end": 3492,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3477,
											"end": 3492,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3492,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 3493,
											"end": 3501,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3477,
											"end": 3510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3477,
											"end": 3510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3510,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3606,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3591,
											"end": 3599,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3589,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "PUSH",
											"source": 5,
											"value": "FBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB"
										},
										{
											"begin": 3608,
											"end": 3614,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3622,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3570,
											"end": 3623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 3631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5279,
											"end": 5286,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5299,
											"end": 5323,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5323,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 3891,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3964,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 3967,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3967,
											"end": 3980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 3980,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 3967,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3950,
											"end": 3980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3950,
											"end": 3980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4130,
											"end": 4131,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4120,
											"end": 4126,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4131,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 4120,
											"end": 4174,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4161,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 4161,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 4161,
											"end": 4174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4161,
											"end": 4174,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 4161,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4158,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4149,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 4143,
											"end": 4158,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4158,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4143,
											"end": 4158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4158,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 4143,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 4143,
											"end": 4174,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4143,
											"end": 4174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4174,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 4143,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 4120,
											"end": 4174,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4174,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 4120,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4134,
											"end": 4140,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4174,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 4120,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4113,
											"end": 4174,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4113,
											"end": 4174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4113,
											"end": 4174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5404,
											"end": 5411,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5431,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 5447,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 5457,
											"end": 5462,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5447,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 5447,
											"end": 5463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5447,
											"end": 5463,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 5447,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5431,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 5431,
											"end": 5464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5431,
											"end": 5464,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 5431,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5424,
											"end": 5464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5424,
											"end": 5464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5543,
											"end": 5550,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5570,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 5580,
											"end": 5585,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5570,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 5570,
											"end": 5586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5570,
											"end": 5586,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 5570,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5563,
											"end": 5586,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5563,
											"end": 5586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4665,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 4681,
											"end": 4687,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 4665,
											"end": 4688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4665,
											"end": 4688,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 4665,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4658,
											"end": 4688,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4658,
											"end": 4688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4569,
											"end": 4696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 442,
											"end": 541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 522,
											"end": 534,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 512,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 512,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 547,
											"end": 716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 631,
											"end": 642,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 660,
											"end": 663,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 653,
											"end": 672,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 703,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 710,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 681,
											"end": 710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 681,
											"end": 710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 861,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 722,
											"end": 861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 811,
											"end": 817,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 806,
											"end": 809,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 801,
											"end": 804,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 795,
											"end": 818,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 852,
											"end": 853,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 849,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 838,
											"end": 841,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 834,
											"end": 850,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 827,
											"end": 854,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 867,
											"end": 969,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 867,
											"end": 969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 908,
											"end": 914,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 961,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 955,
											"end": 962,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 950,
											"end": 952,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 939,
											"end": 953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 935,
											"end": 963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 925,
											"end": 963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 925,
											"end": 963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 867,
											"end": 969,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 867,
											"end": 969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 867,
											"end": 969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 867,
											"end": 969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 1124,
											"end": 1129,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 1091,
											"end": 1130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 1210,
											"end": 1216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 1146,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1139,
											"end": 1217,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1139,
											"end": 1217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1282,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1261,
											"end": 1277,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 1226,
											"end": 1291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 1338,
											"end": 1344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 1316,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1314,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1307,
											"end": 1346,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1346,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1346,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1067,
											"end": 1352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 1511,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1494,
											"end": 1512,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1486,
											"end": 1512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1486,
											"end": 1512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1568,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1544,
											"end": 1545,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1529,
											"end": 1546,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1522,
											"end": 1569,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1659,
											"end": 1663,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 1586,
											"end": 1664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1578,
											"end": 1664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1578,
											"end": 1664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1758,
											"end": 1875,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 1758,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1869,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2126,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 2004,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2077,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 2095,
											"end": 2100,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2077,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 2077,
											"end": 2101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2077,
											"end": 2101,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 2077,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2075,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2102,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2057,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 2057,
											"end": 2120,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2116,
											"end": 2117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2114,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2118,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2057,
											"end": 2120,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 2057,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2271,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 2132,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2178,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2223,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2194,
											"end": 2223,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2194,
											"end": 2223,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 2259,
											"end": 2264,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 2232,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2265,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 2232,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2271,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2271,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2277,
											"end": 2606,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 2277,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2342,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2385,
											"end": 2387,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2373,
											"end": 2382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2371,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2360,
											"end": 2383,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2353,
											"end": 2472,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2353,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 2353,
											"end": 2472,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2391,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 2391,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 2391,
											"end": 2470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2391,
											"end": 2470,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 2391,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2353,
											"end": 2472,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 2353,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2512,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2536,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 2581,
											"end": 2588,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2572,
											"end": 2578,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2570,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2579,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 2536,
											"end": 2589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2589,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 2536,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2526,
											"end": 2589,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2526,
											"end": 2589,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2482,
											"end": 2599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2277,
											"end": 2606,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2277,
											"end": 2606,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2277,
											"end": 2606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2277,
											"end": 2606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2277,
											"end": 2606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2738,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 2612,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2649,
											"end": 2656,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2731,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2682,
											"end": 2687,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2678,
											"end": 2732,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2732,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2732,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2738,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2840,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 2744,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 2828,
											"end": 2833,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 2810,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2834,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 2810,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2799,
											"end": 2834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2799,
											"end": 2834,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2840,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 2937,
											"end": 2942,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 2919,
											"end": 2943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 2944,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2958,
											"end": 2959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2956,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2948,
											"end": 2960,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3020,
											"end": 3025,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3065,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3065,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 3101,
											"end": 3106,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 3074,
											"end": 3107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3193,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3201,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3246,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3232,
											"end": 3241,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3223,
											"end": 3230,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3219,
											"end": 3242,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3215,
											"end": 3247,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 3250,
											"end": 3329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3371,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 3440,
											"end": 3447,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3431,
											"end": 3437,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3429,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3416,
											"end": 3438,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 3395,
											"end": 3448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3448,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3341,
											"end": 3458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3499,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 3568,
											"end": 3575,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3559,
											"end": 3565,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3557,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3566,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 3523,
											"end": 3576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 3586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3633,
											"end": 3640,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3681,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3669,
											"end": 3682,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3662,
											"end": 3683,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3683,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3683,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 3791,
											"end": 3796,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 3776,
											"end": 3797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3771,
											"end": 3774,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 3804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3901,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3937,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3924,
											"end": 3933,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3920,
											"end": 3938,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4012,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 3948,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4170,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4147,
											"end": 4154,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4166,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4171,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 4174,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4340,
											"end": 4362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 4319,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 4492,
											"end": 4499,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 4447,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4510,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 5168,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 5349,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5492,
											"end": 5498,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5529,
											"end": 5538,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5520,
											"end": 5527,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5516,
											"end": 5539,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5512,
											"end": 5544,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 5547,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5668,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 5737,
											"end": 5744,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5717,
											"end": 5726,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5713,
											"end": 5735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 5692,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5638,
											"end": 5755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6867,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 6248,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6325,
											"end": 6331,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6339,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6347,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6390,
											"end": 6392,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6378,
											"end": 6387,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6369,
											"end": 6376,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6388,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6361,
											"end": 6393,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6358,
											"end": 6477,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6358,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 6358,
											"end": 6477,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6396,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 6396,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 6396,
											"end": 6475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6396,
											"end": 6475,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 6396,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6358,
											"end": 6477,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 6358,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6516,
											"end": 6517,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 6586,
											"end": 6593,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6577,
											"end": 6583,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6566,
											"end": 6575,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6562,
											"end": 6584,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6541,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 6541,
											"end": 6594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6541,
											"end": 6594,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 6541,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6594,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6487,
											"end": 6604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6643,
											"end": 6645,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6669,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 6714,
											"end": 6721,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6705,
											"end": 6711,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6694,
											"end": 6703,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6690,
											"end": 6712,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6669,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 6669,
											"end": 6722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6669,
											"end": 6722,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 6669,
											"end": 6722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6659,
											"end": 6722,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6659,
											"end": 6722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6614,
											"end": 6732,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6771,
											"end": 6773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6797,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6833,
											"end": 6839,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6822,
											"end": 6831,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6818,
											"end": 6840,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6797,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 6797,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6797,
											"end": 6850,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 6797,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6787,
											"end": 6850,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6787,
											"end": 6850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6860,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6867,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6867,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6867,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7347,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6873,
											"end": 7347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6941,
											"end": 6947,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6949,
											"end": 6955,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6998,
											"end": 7000,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6986,
											"end": 6995,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6977,
											"end": 6984,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6973,
											"end": 6996,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6969,
											"end": 7001,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6966,
											"end": 7085,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6966,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 6966,
											"end": 7085,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7004,
											"end": 7083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 7004,
											"end": 7083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 7004,
											"end": 7083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7004,
											"end": 7083,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 7004,
											"end": 7083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6966,
											"end": 7085,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 6966,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7124,
											"end": 7125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7149,
											"end": 7202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 7194,
											"end": 7201,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7185,
											"end": 7191,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7174,
											"end": 7183,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7170,
											"end": 7192,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 7149,
											"end": 7202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7202,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 7149,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7139,
											"end": 7202,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7139,
											"end": 7202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7095,
											"end": 7212,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7253,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7277,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 7322,
											"end": 7329,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7313,
											"end": 7319,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7302,
											"end": 7311,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7277,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 7277,
											"end": 7330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7277,
											"end": 7330,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 7277,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7330,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7222,
											"end": 7340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7347,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7347,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7496,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 7353,
											"end": 7496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7410,
											"end": 7415,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7441,
											"end": 7447,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7448,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7426,
											"end": 7448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7426,
											"end": 7448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7457,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 7484,
											"end": 7489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7457,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 7457,
											"end": 7490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7457,
											"end": 7490,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 7457,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7496,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7496,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7496,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7496,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7853,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 7502,
											"end": 7853,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7572,
											"end": 7578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7621,
											"end": 7623,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7609,
											"end": 7618,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7600,
											"end": 7607,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7596,
											"end": 7619,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7592,
											"end": 7624,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7589,
											"end": 7708,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7589,
											"end": 7708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 7589,
											"end": 7708,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7627,
											"end": 7706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 7627,
											"end": 7706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 7627,
											"end": 7706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7627,
											"end": 7706,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 7627,
											"end": 7706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7589,
											"end": 7708,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 7589,
											"end": 7708,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7748,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7772,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 7828,
											"end": 7835,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7819,
											"end": 7825,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7817,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7804,
											"end": 7826,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 7772,
											"end": 7836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7836,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 7772,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7762,
											"end": 7836,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7762,
											"end": 7836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7718,
											"end": 7846,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7853,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7853,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7853,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7853,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 8039,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 7859,
											"end": 8039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7907,
											"end": 7984,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7904,
											"end": 7905,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7897,
											"end": 7985,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8004,
											"end": 8008,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 8001,
											"end": 8002,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7994,
											"end": 8009,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8028,
											"end": 8032,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8025,
											"end": 8026,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8018,
											"end": 8033,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8045,
											"end": 8365,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 8045,
											"end": 8365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8089,
											"end": 8095,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8126,
											"end": 8127,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8120,
											"end": 8124,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8116,
											"end": 8128,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8106,
											"end": 8128,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8106,
											"end": 8128,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8167,
											"end": 8171,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8163,
											"end": 8175,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8194,
											"end": 8212,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8184,
											"end": 8265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 8184,
											"end": 8265,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8250,
											"end": 8254,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 8242,
											"end": 8248,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8238,
											"end": 8255,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8228,
											"end": 8255,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8228,
											"end": 8255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8184,
											"end": 8265,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 8184,
											"end": 8265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8312,
											"end": 8314,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8304,
											"end": 8310,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8301,
											"end": 8315,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8281,
											"end": 8299,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8278,
											"end": 8316,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8275,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 8275,
											"end": 8359,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8331,
											"end": 8349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 8331,
											"end": 8349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 8331,
											"end": 8349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8331,
											"end": 8349,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 8331,
											"end": 8349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8275,
											"end": 8359,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 8275,
											"end": 8359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8096,
											"end": 8365,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8045,
											"end": 8365,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8045,
											"end": 8365,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8045,
											"end": 8365,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8045,
											"end": 8365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8371,
											"end": 8551,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 8371,
											"end": 8551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8419,
											"end": 8496,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8416,
											"end": 8417,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8409,
											"end": 8497,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8516,
											"end": 8520,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8513,
											"end": 8514,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8506,
											"end": 8521,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8544,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8537,
											"end": 8538,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8530,
											"end": 8545,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8967,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 8557,
											"end": 8967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8597,
											"end": 8604,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8620,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 8638,
											"end": 8639,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 8620,
											"end": 8640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8640,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 8620,
											"end": 8640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8615,
											"end": 8640,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8615,
											"end": 8640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8654,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 8672,
											"end": 8673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8654,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 8654,
											"end": 8674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8654,
											"end": 8674,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 8654,
											"end": 8674,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8649,
											"end": 8674,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8649,
											"end": 8674,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8709,
											"end": 8710,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8706,
											"end": 8707,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8702,
											"end": 8711,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8731,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 8749,
											"end": 8760,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8731,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 8731,
											"end": 8761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8731,
											"end": 8761,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 8731,
											"end": 8761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8761,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8910,
											"end": 8911,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8901,
											"end": 8908,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8897,
											"end": 8912,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8894,
											"end": 8895,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8891,
											"end": 8913,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8871,
											"end": 8872,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8864,
											"end": 8873,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8844,
											"end": 8927,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 8821,
											"end": 8960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 8821,
											"end": 8960,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8940,
											"end": 8958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 8940,
											"end": 8958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 8940,
											"end": 8958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8940,
											"end": 8958,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 8940,
											"end": 8958,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8821,
											"end": 8960,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 8821,
											"end": 8960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8605,
											"end": 8967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8967,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8967,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8973,
											"end": 9153,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 8973,
											"end": 9153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9021,
											"end": 9098,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9018,
											"end": 9019,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9011,
											"end": 9099,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9118,
											"end": 9122,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 9115,
											"end": 9116,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9108,
											"end": 9123,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9142,
											"end": 9146,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9139,
											"end": 9140,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9132,
											"end": 9147,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9344,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 9159,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9199,
											"end": 9200,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9216,
											"end": 9236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 9234,
											"end": 9235,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9216,
											"end": 9236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 9216,
											"end": 9236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9216,
											"end": 9236,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 9216,
											"end": 9236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9211,
											"end": 9236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9211,
											"end": 9236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9250,
											"end": 9270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 9268,
											"end": 9269,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9250,
											"end": 9270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 9250,
											"end": 9270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9250,
											"end": 9270,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 9250,
											"end": 9270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9245,
											"end": 9270,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9245,
											"end": 9270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9289,
											"end": 9290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9279,
											"end": 9314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 9279,
											"end": 9314,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 9294,
											"end": 9312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9279,
											"end": 9314,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 9279,
											"end": 9314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9336,
											"end": 9337,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9333,
											"end": 9334,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9344,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9344,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9344,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9344,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9792,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 9350,
											"end": 9792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9499,
											"end": 9503,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9537,
											"end": 9539,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9526,
											"end": 9535,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9514,
											"end": 9540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9514,
											"end": 9540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9550,
											"end": 9621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 9618,
											"end": 9619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9607,
											"end": 9616,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9603,
											"end": 9620,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9594,
											"end": 9600,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9550,
											"end": 9621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 9550,
											"end": 9621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9550,
											"end": 9621,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 9550,
											"end": 9621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9631,
											"end": 9703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 9699,
											"end": 9701,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9688,
											"end": 9697,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9684,
											"end": 9702,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9675,
											"end": 9681,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9631,
											"end": 9703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 9631,
											"end": 9703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9631,
											"end": 9703,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 9631,
											"end": 9703,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9713,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 9781,
											"end": 9783,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9770,
											"end": 9779,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9784,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9757,
											"end": 9763,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9713,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 9713,
											"end": 9785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9713,
											"end": 9785,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 9713,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9792,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9792,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9798,
											"end": 9914,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 9798,
											"end": 9914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9868,
											"end": 9889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 9883,
											"end": 9888,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9868,
											"end": 9889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 9868,
											"end": 9889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9868,
											"end": 9889,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 9868,
											"end": 9889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9861,
											"end": 9866,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9858,
											"end": 9890,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 9908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 9848,
											"end": 9908,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9904,
											"end": 9905,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9901,
											"end": 9902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9894,
											"end": 9906,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 9908,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 9848,
											"end": 9908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9798,
											"end": 9914,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9798,
											"end": 9914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9920,
											"end": 10057,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 9920,
											"end": 10057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9974,
											"end": 9979,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10005,
											"end": 10011,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9999,
											"end": 10012,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9990,
											"end": 10012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9990,
											"end": 10012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10021,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 10045,
											"end": 10050,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10021,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 10021,
											"end": 10051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10021,
											"end": 10051,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 10021,
											"end": 10051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9920,
											"end": 10057,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9920,
											"end": 10057,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9920,
											"end": 10057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9920,
											"end": 10057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9920,
											"end": 10057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10063,
											"end": 10408,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 10063,
											"end": 10408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10130,
											"end": 10136,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10179,
											"end": 10181,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10167,
											"end": 10176,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10158,
											"end": 10165,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10154,
											"end": 10177,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10150,
											"end": 10182,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 10147,
											"end": 10266,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10147,
											"end": 10266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 10147,
											"end": 10266,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10185,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 10185,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 10185,
											"end": 10264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10185,
											"end": 10264,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 10185,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10147,
											"end": 10266,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 10147,
											"end": 10266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10305,
											"end": 10306,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10330,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 10383,
											"end": 10390,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10374,
											"end": 10380,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10363,
											"end": 10372,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10359,
											"end": 10381,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10330,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 10330,
											"end": 10391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10330,
											"end": 10391,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 10330,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10320,
											"end": 10391,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10320,
											"end": 10391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10276,
											"end": 10401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10063,
											"end": 10408,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10063,
											"end": 10408,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10063,
											"end": 10408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10063,
											"end": 10408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10063,
											"end": 10408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10746,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 10414,
											"end": 10746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10535,
											"end": 10539,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10573,
											"end": 10575,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10562,
											"end": 10571,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10558,
											"end": 10576,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10576,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10586,
											"end": 10657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 10654,
											"end": 10655,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10643,
											"end": 10652,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10639,
											"end": 10656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10630,
											"end": 10636,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10586,
											"end": 10657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 10586,
											"end": 10657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10586,
											"end": 10657,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 10586,
											"end": 10657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 10735,
											"end": 10737,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10724,
											"end": 10733,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10720,
											"end": 10738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10711,
											"end": 10717,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 10667,
											"end": 10739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10739,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 10667,
											"end": 10739,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10746,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10746,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10752,
											"end": 11084,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 10752,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10873,
											"end": 10877,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10911,
											"end": 10913,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10900,
											"end": 10909,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10896,
											"end": 10914,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10888,
											"end": 10914,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10888,
											"end": 10914,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10924,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 10992,
											"end": 10993,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10981,
											"end": 10990,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10977,
											"end": 10994,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10968,
											"end": 10974,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10924,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 10924,
											"end": 10995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10924,
											"end": 10995,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 10924,
											"end": 10995,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11005,
											"end": 11077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 11073,
											"end": 11075,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11062,
											"end": 11071,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11076,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11049,
											"end": 11055,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11005,
											"end": 11077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 11005,
											"end": 11077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11005,
											"end": 11077,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 11005,
											"end": 11077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10752,
											"end": 11084,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10752,
											"end": 11084,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10752,
											"end": 11084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10752,
											"end": 11084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10752,
											"end": 11084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10752,
											"end": 11084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11532,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 11090,
											"end": 11532,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11239,
											"end": 11243,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11277,
											"end": 11279,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 11266,
											"end": 11275,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11262,
											"end": 11280,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11254,
											"end": 11280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11254,
											"end": 11280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11290,
											"end": 11361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 11358,
											"end": 11359,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11347,
											"end": 11356,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11343,
											"end": 11360,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11334,
											"end": 11340,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11290,
											"end": 11361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 11290,
											"end": 11361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11290,
											"end": 11361,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 11290,
											"end": 11361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11371,
											"end": 11443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 11439,
											"end": 11441,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11428,
											"end": 11437,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11424,
											"end": 11442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11415,
											"end": 11421,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11371,
											"end": 11443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 11371,
											"end": 11443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11371,
											"end": 11443,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 11371,
											"end": 11443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 11521,
											"end": 11523,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11510,
											"end": 11519,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11506,
											"end": 11524,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11497,
											"end": 11503,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 11453,
											"end": 11525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11525,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 11453,
											"end": 11525,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11532,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11532,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11532,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11532,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11532,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11532,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11538,
											"end": 11729,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 11538,
											"end": 11729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11578,
											"end": 11581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11597,
											"end": 11617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 11615,
											"end": 11616,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11597,
											"end": 11617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 11597,
											"end": 11617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11597,
											"end": 11617,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 11597,
											"end": 11617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11592,
											"end": 11617,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11592,
											"end": 11617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11631,
											"end": 11651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 11649,
											"end": 11650,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11631,
											"end": 11651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 11631,
											"end": 11651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11631,
											"end": 11651,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 11631,
											"end": 11651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11626,
											"end": 11651,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11626,
											"end": 11651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11674,
											"end": 11675,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11671,
											"end": 11672,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11667,
											"end": 11676,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11660,
											"end": 11676,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11660,
											"end": 11676,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11695,
											"end": 11698,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11692,
											"end": 11693,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11689,
											"end": 11699,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11686,
											"end": 11722,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11686,
											"end": 11722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 11686,
											"end": 11722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11702,
											"end": 11720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 11702,
											"end": 11720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 11702,
											"end": 11720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11702,
											"end": 11720,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 11702,
											"end": 11720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11686,
											"end": 11722,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 11686,
											"end": 11722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11538,
											"end": 11729,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11538,
											"end": 11729,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11538,
											"end": 11729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11538,
											"end": 11729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11538,
											"end": 11729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"ERC4626.sol",
								"IERC4626.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"asset()": "38d52e0f",
							"balanceOf(address)": "70a08231",
							"convertToAssets(uint256)": "07a2d13a",
							"convertToShares(uint256)": "c6e6f592",
							"decimals()": "313ce567",
							"deposit(uint256,address)": "6e553f65",
							"maxDeposit(address)": "402d267d",
							"maxMint(address)": "c63d75b6",
							"maxRedeem(address)": "d905777e",
							"maxWithdraw(address)": "ce96cb77",
							"mint(uint256,address)": "94bf804d",
							"name()": "06fdde03",
							"previewDeposit(uint256)": "ef8b30f7",
							"previewMint(uint256)": "b3d7f6b9",
							"previewRedeem(uint256)": "4cdad506",
							"previewWithdraw(uint256)": "0a28a477",
							"redeem(uint256,address,address)": "ba087652",
							"symbol()": "95d89b41",
							"totalAssets()": "01e1d114",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256,address,address)": "b460af94"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"asset()\":{\"details\":\"\\u8fd4\\u56de\\u91d1\\u5e93\\u7684\\u57fa\\u7840\\u8d44\\u4ea7\\u4ee3\\u5e01\\u5730\\u5740\\uff08\\u7528\\u4e8e\\u5b58\\u6b3e\\u3001\\u53d6\\u6b3e\\uff09\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"convertToAssets(uint256)\":{\"details\":\"\\u8fd4\\u56de\\u5229\\u7528\\u4e00\\u5b9a\\u6570\\u989d\\u7684\\u91d1\\u5e93\\u989d\\u5ea6\\u53ef\\u4ee5\\u6362\\u53d6\\u7684\\u57fa\\u7840\\u8d44\\u4ea7 - \\u4e0d\\u8981\\u5305\\u542b\\u8d39\\u7528 - \\u4e0d\\u5305\\u542b\\u6ed1\\u70b9 - \\u4e0d\\u80fdrevert\"},\"convertToShares(uint256)\":{\"details\":\"\\u8fd4\\u56de\\u5229\\u7528\\u4e00\\u5b9a\\u6570\\u989d\\u7684\\u57fa\\u7840\\u8d44\\u4ea7\\u53ef\\u4ee5\\u6362\\u53d6\\u7684\\u91d1\\u5e93\\u989d\\u5ea6 - \\u4e0d\\u8981\\u5305\\u542b\\u8d39\\u7528 - \\u4e0d\\u8981\\u5305\\u542b\\u6ed1\\u70b9 - \\u4e0d\\u80fd revert\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"deposit(uint256,address)\":{\"details\":\"\\u5b58\\u6b3e\\u51fd\\u6570\\uff1a\\u7528\\u6237\\u5411\\u91d1\\u5e93\\u5b58\\u5165assets\\u5355\\u4f4d\\u7684\\u57fa\\u7840\\u8d44\\u4ea7\\uff0c\\u7136\\u540e\\u5408\\u7ea6\\u94f8\\u9020shares\\u5355\\u4f4d\\u7684\\u91d1\\u5e93\\u989d\\u5ea6\\u7ed9receiver\\u5730\\u5740 - \\u5fc5\\u987b\\u662f\\u5426Deposit \\u4e8b\\u4ef6 - \\u5982\\u679c\\u8d44\\u4ea7\\u4e0d\\u80fd\\u5b58\\u5165\\uff0c\\u5fc5\\u987brevert\\uff0c\\u6bd4\\u5982\\u5b58\\u6b3e\\u6570\\u989d\\u5927\\u4e8e\\u4e0a\\u9650\\u7b49\"},\"maxRedeem(address)\":{\"details\":\"\\u8fd4\\u56de\\u67d0\\u4e2a\\u7528\\u6237\\u5730\\u5740\\u5355\\u6b21\\u8d4e\\u56de\\u53ef\\u4ee5\\u9500\\u6bc1\\u7684\\u6700\\u5927\\u91d1\\u5e93\\u989d\\u5ea6 - \\u8fd4\\u56de\\u503c\\u5e94\\u8be5\\u662f\\u4e2a\\u6709\\u9650\\u503c - \\u5982\\u679c\\u6ca1\\u6709\\u5176\\u4ed6\\u9650\\u5236\\uff0c\\u8fd4\\u56de\\u503c\\u5e94\\u8be5\\u662f balanceOf(owner) - \\u4e0d\\u80fdrevert\"},\"maxWithdraw(address)\":{\"details\":\"\\u8fd4\\u56de\\u67d0\\u4e2a\\u7528\\u6237\\u5730\\u5740\\u5355\\u6b21\\u53d6\\u6b3e\\u53ef\\u4ee5\\u63d0\\u53d6\\u7684\\u6700\\u5927\\u57fa\\u7840\\u8d44\\u4ea7\\u989d\\u5ea6 - \\u8fd4\\u56de\\u503c\\u5e94\\u8be5\\u662f\\u4e2a\\u6709\\u9650\\u503c - \\u4e0d\\u80fdrevert\"},\"mint(uint256,address)\":{\"details\":\"\\u94f8\\u9020\\u51fd\\u6570\\uff1a\\u7528\\u6237\\u9700\\u8981\\u5b58\\u5165assets\\u5355\\u4f4d\\u7684\\u57fa\\u7840\\u8d44\\u4ea7\\uff0c\\u7136\\u540e\\u5408\\u7ea6\\u7ed9receiver\\u5730\\u5740\\u94f8\\u9020shares\\u6570\\u91cf\\u7684\\u91d1\\u5e93\\u989d\\u5ea6 - \\u5fc5\\u987b\\u662f\\u5426Deposit\\u4e8b\\u4ef6 - \\u5982\\u679c\\u5168\\u90e8\\u91d1\\u5e93\\u989d\\u5ea6\\u4e0d\\u80fd\\u94f8\\u9020\\uff0c\\u5fc5\\u987b revert, \\u6bd4\\u5982\\u94f8\\u9020\\u6570\\u989d\\u5927\\u4e8e\\u4e0a\\u7ebf\\u7b49\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"previewDeposit(uint256)\":{\"details\":\"\\u7528\\u4e8e\\u94fe\\u4e0a\\u548c\\u94fe\\u4e0b\\u7528\\u6237\\u5728\\u5f53\\u524d\\u94fe\\u4e0a\\u73af\\u5883\\u6a21\\u62df\\u5b58\\u6b3e\\u4e00\\u5b9a\\u6570\\u989d\\u7684\\u57fa\\u7840\\u8d44\\u4ea7\\u80fd\\u591f\\u83b7\\u5f97\\u7684\\u91d1\\u5e93\\u989d\\u5ea6 - \\u8fd4\\u56de\\u503c\\u8981\\u63a5\\u8fd1\\u4e14\\u4e0d\\u5927\\u4e8e\\u5728\\u540c\\u4e00\\u4e2a\\u4ea4\\u6613\\u8fdb\\u884c\\u5b58\\u6b3e\\u5f97\\u5230\\u7684\\u91d1\\u5e93\\u989d\\u5ea6 - \\u4e0d\\u8981\\u8003\\u8651maxDeposit\\u7b49\\u9650\\u5236\\uff0c\\u5047\\u8bbe\\u7528\\u6237\\u7684\\u5b58\\u6b3e\\u4ea4\\u6613\\u4f1a\\u6210\\u529f - \\u8981\\u8003\\u8651\\u8d39\\u7528 - \\u4e0d\\u80fdrevert     \"},\"previewMint(uint256)\":{\"details\":\"\\u7528\\u4e8e\\u94fe\\u4e0a\\u548c\\u94fe\\u4e0b\\u7528\\u6237\\u5728\\u5f53\\u524d\\u94fe\\u4e0a\\u73af\\u5883\\u6a21\\u62df\\u94f8\\u9020 shares \\u6570\\u989d\\u7684\\u91d1\\u5e93\\u989d\\u5ea6\\u9700\\u8981\\u5b58\\u6b3e\\u7684\\u57fa\\u7840\\u8d44\\u4ea7\\u6570\\u91cf - \\u8fd4\\u56de\\u503c\\u8981\\u63a5\\u8fd1\\u4e14\\u4e0d\\u5c0f\\u4e8e\\u5728\\u540c\\u4e00\\u4ea4\\u6613\\u8fdb\\u884c\\u94f8\\u9020\\u4e00\\u5b9a\\u6570\\u989d\\u91d1\\u5e93\\u989d\\u5ea6\\u6240\\u9700\\u7684\\u5b58\\u6b3e\\u6570\\u91cf - \\u4e0d\\u8981\\u8003\\u8651 maxMint \\u7b49\\u9650\\u5236\\uff0c\\u5047\\u8bbe\\u7528\\u6237\\u7684\\u5b58\\u6b3e\\u4ea4\\u6613\\u4f1a\\u6210\\u529f - \\u8981\\u8003\\u8651\\u8d39\\u7528 - \\u4e0d\\u80fdrevert\"},\"previewRedeem(uint256)\":{\"details\":\"\\u7528\\u4e8e\\u94fe\\u4e0a\\u548c\\u94fe\\u4e0b\\u7528\\u6237\\u5728\\u5f53\\u524d\\u94fe\\u4e0a\\u73af\\u5883\\u6a21\\u62df\\u9500\\u6bc1 shares \\u6570\\u989d\\u7684\\u91d1\\u5e93\\u989d\\u5ea6\\u80fd\\u591f\\u8d4e\\u56de\\u7684\\u57fa\\u7840\\u8d44\\u4ea7\\u6570\\u91cf - \\u8fd4\\u56de\\u503c\\u8981\\u63a5\\u8fd1\\u4e14\\u4e0d\\u5c0f\\u4e8e\\u5728\\u540c\\u4e00\\u4ea4\\u6613\\u8fdb\\u884c\\u9500\\u6bc1\\u4e00\\u5b9a\\u6570\\u989d\\u7684\\u91d1\\u5e93\\u989d\\u5ea6\\u6240\\u80fd\\u8d4e\\u56de\\u7684\\u57fa\\u7840\\u8d44\\u4ea7\\u6570\\u91cf - \\u4e0d\\u8981\\u8003\\u8651 maxRedeem \\u7b49\\u9650\\u5236\\uff0c\\u5047\\u8bbe\\u7528\\u6237\\u7684\\u8d4e\\u56de\\u4ea4\\u6613\\u4f1a\\u6210\\u529f - \\u8981\\u8003\\u8651\\u8d39\\u7528 - \\u4e0d\\u80fdrevert.\"},\"previewWithdraw(uint256)\":{\"details\":\"\\u7528\\u4e8e\\u94fe\\u4e0a\\u548c\\u94fe\\u4e0b\\u7528\\u6237\\u5728\\u5f53\\u524d\\u94fe\\u4e0a\\u73af\\u5883\\u6a21\\u62df\\u63d0\\u6b3e assets \\u6570\\u989d\\u7684\\u57fa\\u7840\\u8d44\\u4ea7\\u9700\\u8981\\u8d4e\\u56de\\u7684\\u91d1\\u5e93\\u4efd\\u989d - \\u8fd4\\u56de\\u503c\\u8981\\u63a5\\u8fd1\\u4e14\\u4e0d\\u5927\\u4e8e\\u5728\\u540c\\u4e00\\u4ea4\\u6613\\u8fdb\\u884c\\u63d0\\u6b3e\\u4e00\\u5b9a\\u6570\\u989d\\u57fa\\u7840\\u8d44\\u4ea7\\u6240\\u9700\\u8d4e\\u56de\\u7684\\u91d1\\u5e93\\u4efd\\u989d - \\u4e0d\\u8981\\u8003\\u8651 maxWithdraw \\u7b49\\u9650\\u5236\\uff0c\\u5047\\u8bbe\\u7528\\u6237\\u7684\\u63d0\\u6b3e\\u4ea4\\u6613\\u4f1a\\u6210\\u529f - \\u8981\\u8003\\u8651\\u8d39\\u7528 - \\u4e0d\\u80fdrevert\"},\"redeem(uint256,address,address)\":{\"details\":\"\\u8d4e\\u56de\\u51fd\\u6570\\uff1aowner\\u5730\\u5740\\u9500\\u6bc1shares\\u6570\\u91cf\\u7684\\u91d1\\u989d\\u989d\\u5ea6\\uff0c\\u7136\\u540e\\u5408\\u7ea6\\u5c06asserts\\u5355\\u4f4d\\u7684\\u57fa\\u7840\\u4ee3\\u5e01\\u8d44\\u4ea7\\u53d1\\u7ed9receiver\\u5730\\u5740 - \\u91ca\\u653eWithdraw\\u4e8b\\u4ef6 - \\u5982\\u679c\\u91d1\\u5e93\\u989d\\u5ea6\\u4e0d\\u80fd\\u5168\\u90e8\\u9500\\u6bc1\\uff0c\\u5219revert\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalAssets()\":{\"details\":\"\\u8fd4\\u56de\\u91d1\\u5e93\\u4e2d\\u7ba1\\u7406\\u7684\\u57fa\\u7840\\u8d44\\u4ea7\\u4ee3\\u5e01\\u603b\\u989d - \\u8981\\u5305\\u542b\\u5229\\u606f - \\u8981\\u5305\\u542b\\u8d39\\u7528 - \\u4e0d\\u80fdrevert\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"withdraw(uint256,address,address)\":{\"details\":\"\\u63d0\\u6b3e\\u51fd\\u6570\\uff1aowner\\u5730\\u5740\\u9500\\u6bc1shares\\u5355\\u4f4d\\u7684\\u91d1\\u5e93\\u989d\\u5ea6\\uff0c\\u7136\\u540e\\u5408\\u7ea6\\u5c06assets\\u5355\\u4f4d\\u7684\\u57fa\\u7840\\u8d44\\u4ea7\\u53d1\\u9001\\u7ed9receiver\\u5730\\u5740 - \\u91ca\\u653e withdraw\\u4e8b\\u4ef6 - \\u5982\\u679c\\u5168\\u90e8\\u57fa\\u7840\\u8d44\\u4ea7\\u4e0d\\u80fd\\u63d0\\u53d6\\uff0c\\u5c06revert\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC4626.sol\":\"ERC4626\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"ERC4626.sol\":{\"keccak256\":\"0x79b2694be74f002da3c3068fbbaff04cb8ca09868df1d004ad804fc79c23a5a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7222f8a1d06930a8b4516d976cde9ce62633ffd3b31c7c829119f9b7a779aeab\",\"dweb:/ipfs/QmPRM2xHh7h9EwWNyL4CjTbc7vPWHNbnFbeobBnYxKsoMU\"]},\"IERC4626.sol\":{\"keccak256\":\"0x96d9321fbcc670e3915a0a457f671cae07e73f00610bbfa395a1e31c250935dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d6195a85a281c8fc6eff019b3ffd3fbbd831d4afb1a9f029a75ea8fa292848e\",\"dweb:/ipfs/QmQrCRa7wzDmpUHSkjFRZZa9Q6E7VRbzfUsJ48HMnPE5bj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "ERC4626.sol:ERC4626",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "ERC4626.sol:ERC4626",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "ERC4626.sol:ERC4626",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "ERC4626.sol:ERC4626",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "ERC4626.sol:ERC4626",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC4626.sol": {
				"IERC4626": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "asset",
							"outputs": [
								{
									"internalType": "address",
									"name": "assetTokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "convertToAssets",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"name": "convertToShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "maxDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "maxAssets",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "maxMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "maxShares",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "maxRedeem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "maxShares",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "maxWithdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "maxAssets",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"name": "previewDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "previewMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "previewRedeem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"name": "previewWithdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "redeem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAssets",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalManagedAssets",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"asset()": {
								"details": "返回金库的基础资产代币地址（用于存款、取款）"
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"convertToAssets(uint256)": {
								"details": "返回利用一定数额的金库额度可以换取的基础资产 - 不要包含费用 - 不包含滑点 - 不能revert"
							},
							"convertToShares(uint256)": {
								"details": "返回利用一定数额的基础资产可以换取的金库额度 - 不要包含费用 - 不要包含滑点 - 不能 revert"
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"deposit(uint256,address)": {
								"details": "存款函数：用户向金库存入assets单位的基础资产，然后合约铸造shares单位的金库额度给receiver地址 - 必须是否Deposit 事件 - 如果资产不能存入，必须revert，比如存款数额大于上限等"
							},
							"maxDeposit(address)": {
								"details": "返回某个用户地址单次存款可存的最大基础资产数额。 - 如果有存款上限，那么返回值应该是个有限值 - 返回值不能超过 2 ** 256 - 1  - 不能revert"
							},
							"maxMint(address)": {
								"details": "返回某个用户地址单次铸造可以铸造的最大金库额度 - 如果有铸造上限，那么返回值应该是个有限值 - 返回值不能超过 2 ** 256 - 1  - 不能revert"
							},
							"maxRedeem(address)": {
								"details": "返回某个用户地址单次赎回可以销毁的最大金库额度 - 返回值应该是个有限值 - 如果没有其他限制，返回值应该是 balanceOf(owner) - 不能revert"
							},
							"maxWithdraw(address)": {
								"details": "返回某个用户地址单次取款可以提取的最大基础资产额度 - 返回值应该是个有限值 - 不能revert"
							},
							"mint(uint256,address)": {
								"details": "铸造函数：用户需要存入assets单位的基础资产，然后合约给receiver地址铸造shares数量的金库额度 - 必须是否Deposit事件 - 如果全部金库额度不能铸造，必须 revert, 比如铸造数额大于上线等"
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"previewDeposit(uint256)": {
								"details": "用于链上和链下用户在当前链上环境模拟存款一定数额的基础资产能够获得的金库额度 - 返回值要接近且不大于在同一个交易进行存款得到的金库额度 - 不要考虑maxDeposit等限制，假设用户的存款交易会成功 - 要考虑费用 - 不能revert     "
							},
							"previewMint(uint256)": {
								"details": "用于链上和链下用户在当前链上环境模拟铸造 shares 数额的金库额度需要存款的基础资产数量 - 返回值要接近且不小于在同一交易进行铸造一定数额金库额度所需的存款数量 - 不要考虑 maxMint 等限制，假设用户的存款交易会成功 - 要考虑费用 - 不能revert"
							},
							"previewRedeem(uint256)": {
								"details": "用于链上和链下用户在当前链上环境模拟销毁 shares 数额的金库额度能够赎回的基础资产数量 - 返回值要接近且不小于在同一交易进行销毁一定数额的金库额度所能赎回的基础资产数量 - 不要考虑 maxRedeem 等限制，假设用户的赎回交易会成功 - 要考虑费用 - 不能revert."
							},
							"previewWithdraw(uint256)": {
								"details": "用于链上和链下用户在当前链上环境模拟提款 assets 数额的基础资产需要赎回的金库份额 - 返回值要接近且不大于在同一交易进行提款一定数额基础资产所需赎回的金库份额 - 不要考虑 maxWithdraw 等限制，假设用户的提款交易会成功 - 要考虑费用 - 不能revert"
							},
							"redeem(uint256,address,address)": {
								"details": "赎回函数：owner地址销毁shares数量的金额额度，然后合约将asserts单位的基础代币资产发给receiver地址 - 释放Withdraw事件 - 如果金库额度不能全部销毁，则revert"
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalAssets()": {
								"details": "返回金库中管理的基础资产代币总额 - 要包含利息 - 要包含费用 - 不能revert"
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"withdraw(uint256,address,address)": {
								"details": "提款函数：owner地址销毁shares单位的金库额度，然后合约将assets单位的基础资产发送给receiver地址 - 释放 withdraw事件 - 如果全部基础资产不能提取，将revert"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"asset()": "38d52e0f",
							"balanceOf(address)": "70a08231",
							"convertToAssets(uint256)": "07a2d13a",
							"convertToShares(uint256)": "c6e6f592",
							"decimals()": "313ce567",
							"deposit(uint256,address)": "6e553f65",
							"maxDeposit(address)": "402d267d",
							"maxMint(address)": "c63d75b6",
							"maxRedeem(address)": "d905777e",
							"maxWithdraw(address)": "ce96cb77",
							"mint(uint256,address)": "94bf804d",
							"name()": "06fdde03",
							"previewDeposit(uint256)": "ef8b30f7",
							"previewMint(uint256)": "b3d7f6b9",
							"previewRedeem(uint256)": "4cdad506",
							"previewWithdraw(uint256)": "0a28a477",
							"redeem(uint256,address,address)": "ba087652",
							"symbol()": "95d89b41",
							"totalAssets()": "01e1d114",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256,address,address)": "b460af94"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"assetTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalManagedAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"asset()\":{\"details\":\"\\u8fd4\\u56de\\u91d1\\u5e93\\u7684\\u57fa\\u7840\\u8d44\\u4ea7\\u4ee3\\u5e01\\u5730\\u5740\\uff08\\u7528\\u4e8e\\u5b58\\u6b3e\\u3001\\u53d6\\u6b3e\\uff09\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"convertToAssets(uint256)\":{\"details\":\"\\u8fd4\\u56de\\u5229\\u7528\\u4e00\\u5b9a\\u6570\\u989d\\u7684\\u91d1\\u5e93\\u989d\\u5ea6\\u53ef\\u4ee5\\u6362\\u53d6\\u7684\\u57fa\\u7840\\u8d44\\u4ea7 - \\u4e0d\\u8981\\u5305\\u542b\\u8d39\\u7528 - \\u4e0d\\u5305\\u542b\\u6ed1\\u70b9 - \\u4e0d\\u80fdrevert\"},\"convertToShares(uint256)\":{\"details\":\"\\u8fd4\\u56de\\u5229\\u7528\\u4e00\\u5b9a\\u6570\\u989d\\u7684\\u57fa\\u7840\\u8d44\\u4ea7\\u53ef\\u4ee5\\u6362\\u53d6\\u7684\\u91d1\\u5e93\\u989d\\u5ea6 - \\u4e0d\\u8981\\u5305\\u542b\\u8d39\\u7528 - \\u4e0d\\u8981\\u5305\\u542b\\u6ed1\\u70b9 - \\u4e0d\\u80fd revert\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"deposit(uint256,address)\":{\"details\":\"\\u5b58\\u6b3e\\u51fd\\u6570\\uff1a\\u7528\\u6237\\u5411\\u91d1\\u5e93\\u5b58\\u5165assets\\u5355\\u4f4d\\u7684\\u57fa\\u7840\\u8d44\\u4ea7\\uff0c\\u7136\\u540e\\u5408\\u7ea6\\u94f8\\u9020shares\\u5355\\u4f4d\\u7684\\u91d1\\u5e93\\u989d\\u5ea6\\u7ed9receiver\\u5730\\u5740 - \\u5fc5\\u987b\\u662f\\u5426Deposit \\u4e8b\\u4ef6 - \\u5982\\u679c\\u8d44\\u4ea7\\u4e0d\\u80fd\\u5b58\\u5165\\uff0c\\u5fc5\\u987brevert\\uff0c\\u6bd4\\u5982\\u5b58\\u6b3e\\u6570\\u989d\\u5927\\u4e8e\\u4e0a\\u9650\\u7b49\"},\"maxDeposit(address)\":{\"details\":\"\\u8fd4\\u56de\\u67d0\\u4e2a\\u7528\\u6237\\u5730\\u5740\\u5355\\u6b21\\u5b58\\u6b3e\\u53ef\\u5b58\\u7684\\u6700\\u5927\\u57fa\\u7840\\u8d44\\u4ea7\\u6570\\u989d\\u3002 - \\u5982\\u679c\\u6709\\u5b58\\u6b3e\\u4e0a\\u9650\\uff0c\\u90a3\\u4e48\\u8fd4\\u56de\\u503c\\u5e94\\u8be5\\u662f\\u4e2a\\u6709\\u9650\\u503c - \\u8fd4\\u56de\\u503c\\u4e0d\\u80fd\\u8d85\\u8fc7 2 ** 256 - 1  - \\u4e0d\\u80fdrevert\"},\"maxMint(address)\":{\"details\":\"\\u8fd4\\u56de\\u67d0\\u4e2a\\u7528\\u6237\\u5730\\u5740\\u5355\\u6b21\\u94f8\\u9020\\u53ef\\u4ee5\\u94f8\\u9020\\u7684\\u6700\\u5927\\u91d1\\u5e93\\u989d\\u5ea6 - \\u5982\\u679c\\u6709\\u94f8\\u9020\\u4e0a\\u9650\\uff0c\\u90a3\\u4e48\\u8fd4\\u56de\\u503c\\u5e94\\u8be5\\u662f\\u4e2a\\u6709\\u9650\\u503c - \\u8fd4\\u56de\\u503c\\u4e0d\\u80fd\\u8d85\\u8fc7 2 ** 256 - 1  - \\u4e0d\\u80fdrevert\"},\"maxRedeem(address)\":{\"details\":\"\\u8fd4\\u56de\\u67d0\\u4e2a\\u7528\\u6237\\u5730\\u5740\\u5355\\u6b21\\u8d4e\\u56de\\u53ef\\u4ee5\\u9500\\u6bc1\\u7684\\u6700\\u5927\\u91d1\\u5e93\\u989d\\u5ea6 - \\u8fd4\\u56de\\u503c\\u5e94\\u8be5\\u662f\\u4e2a\\u6709\\u9650\\u503c - \\u5982\\u679c\\u6ca1\\u6709\\u5176\\u4ed6\\u9650\\u5236\\uff0c\\u8fd4\\u56de\\u503c\\u5e94\\u8be5\\u662f balanceOf(owner) - \\u4e0d\\u80fdrevert\"},\"maxWithdraw(address)\":{\"details\":\"\\u8fd4\\u56de\\u67d0\\u4e2a\\u7528\\u6237\\u5730\\u5740\\u5355\\u6b21\\u53d6\\u6b3e\\u53ef\\u4ee5\\u63d0\\u53d6\\u7684\\u6700\\u5927\\u57fa\\u7840\\u8d44\\u4ea7\\u989d\\u5ea6 - \\u8fd4\\u56de\\u503c\\u5e94\\u8be5\\u662f\\u4e2a\\u6709\\u9650\\u503c - \\u4e0d\\u80fdrevert\"},\"mint(uint256,address)\":{\"details\":\"\\u94f8\\u9020\\u51fd\\u6570\\uff1a\\u7528\\u6237\\u9700\\u8981\\u5b58\\u5165assets\\u5355\\u4f4d\\u7684\\u57fa\\u7840\\u8d44\\u4ea7\\uff0c\\u7136\\u540e\\u5408\\u7ea6\\u7ed9receiver\\u5730\\u5740\\u94f8\\u9020shares\\u6570\\u91cf\\u7684\\u91d1\\u5e93\\u989d\\u5ea6 - \\u5fc5\\u987b\\u662f\\u5426Deposit\\u4e8b\\u4ef6 - \\u5982\\u679c\\u5168\\u90e8\\u91d1\\u5e93\\u989d\\u5ea6\\u4e0d\\u80fd\\u94f8\\u9020\\uff0c\\u5fc5\\u987b revert, \\u6bd4\\u5982\\u94f8\\u9020\\u6570\\u989d\\u5927\\u4e8e\\u4e0a\\u7ebf\\u7b49\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"previewDeposit(uint256)\":{\"details\":\"\\u7528\\u4e8e\\u94fe\\u4e0a\\u548c\\u94fe\\u4e0b\\u7528\\u6237\\u5728\\u5f53\\u524d\\u94fe\\u4e0a\\u73af\\u5883\\u6a21\\u62df\\u5b58\\u6b3e\\u4e00\\u5b9a\\u6570\\u989d\\u7684\\u57fa\\u7840\\u8d44\\u4ea7\\u80fd\\u591f\\u83b7\\u5f97\\u7684\\u91d1\\u5e93\\u989d\\u5ea6 - \\u8fd4\\u56de\\u503c\\u8981\\u63a5\\u8fd1\\u4e14\\u4e0d\\u5927\\u4e8e\\u5728\\u540c\\u4e00\\u4e2a\\u4ea4\\u6613\\u8fdb\\u884c\\u5b58\\u6b3e\\u5f97\\u5230\\u7684\\u91d1\\u5e93\\u989d\\u5ea6 - \\u4e0d\\u8981\\u8003\\u8651maxDeposit\\u7b49\\u9650\\u5236\\uff0c\\u5047\\u8bbe\\u7528\\u6237\\u7684\\u5b58\\u6b3e\\u4ea4\\u6613\\u4f1a\\u6210\\u529f - \\u8981\\u8003\\u8651\\u8d39\\u7528 - \\u4e0d\\u80fdrevert     \"},\"previewMint(uint256)\":{\"details\":\"\\u7528\\u4e8e\\u94fe\\u4e0a\\u548c\\u94fe\\u4e0b\\u7528\\u6237\\u5728\\u5f53\\u524d\\u94fe\\u4e0a\\u73af\\u5883\\u6a21\\u62df\\u94f8\\u9020 shares \\u6570\\u989d\\u7684\\u91d1\\u5e93\\u989d\\u5ea6\\u9700\\u8981\\u5b58\\u6b3e\\u7684\\u57fa\\u7840\\u8d44\\u4ea7\\u6570\\u91cf - \\u8fd4\\u56de\\u503c\\u8981\\u63a5\\u8fd1\\u4e14\\u4e0d\\u5c0f\\u4e8e\\u5728\\u540c\\u4e00\\u4ea4\\u6613\\u8fdb\\u884c\\u94f8\\u9020\\u4e00\\u5b9a\\u6570\\u989d\\u91d1\\u5e93\\u989d\\u5ea6\\u6240\\u9700\\u7684\\u5b58\\u6b3e\\u6570\\u91cf - \\u4e0d\\u8981\\u8003\\u8651 maxMint \\u7b49\\u9650\\u5236\\uff0c\\u5047\\u8bbe\\u7528\\u6237\\u7684\\u5b58\\u6b3e\\u4ea4\\u6613\\u4f1a\\u6210\\u529f - \\u8981\\u8003\\u8651\\u8d39\\u7528 - \\u4e0d\\u80fdrevert\"},\"previewRedeem(uint256)\":{\"details\":\"\\u7528\\u4e8e\\u94fe\\u4e0a\\u548c\\u94fe\\u4e0b\\u7528\\u6237\\u5728\\u5f53\\u524d\\u94fe\\u4e0a\\u73af\\u5883\\u6a21\\u62df\\u9500\\u6bc1 shares \\u6570\\u989d\\u7684\\u91d1\\u5e93\\u989d\\u5ea6\\u80fd\\u591f\\u8d4e\\u56de\\u7684\\u57fa\\u7840\\u8d44\\u4ea7\\u6570\\u91cf - \\u8fd4\\u56de\\u503c\\u8981\\u63a5\\u8fd1\\u4e14\\u4e0d\\u5c0f\\u4e8e\\u5728\\u540c\\u4e00\\u4ea4\\u6613\\u8fdb\\u884c\\u9500\\u6bc1\\u4e00\\u5b9a\\u6570\\u989d\\u7684\\u91d1\\u5e93\\u989d\\u5ea6\\u6240\\u80fd\\u8d4e\\u56de\\u7684\\u57fa\\u7840\\u8d44\\u4ea7\\u6570\\u91cf - \\u4e0d\\u8981\\u8003\\u8651 maxRedeem \\u7b49\\u9650\\u5236\\uff0c\\u5047\\u8bbe\\u7528\\u6237\\u7684\\u8d4e\\u56de\\u4ea4\\u6613\\u4f1a\\u6210\\u529f - \\u8981\\u8003\\u8651\\u8d39\\u7528 - \\u4e0d\\u80fdrevert.\"},\"previewWithdraw(uint256)\":{\"details\":\"\\u7528\\u4e8e\\u94fe\\u4e0a\\u548c\\u94fe\\u4e0b\\u7528\\u6237\\u5728\\u5f53\\u524d\\u94fe\\u4e0a\\u73af\\u5883\\u6a21\\u62df\\u63d0\\u6b3e assets \\u6570\\u989d\\u7684\\u57fa\\u7840\\u8d44\\u4ea7\\u9700\\u8981\\u8d4e\\u56de\\u7684\\u91d1\\u5e93\\u4efd\\u989d - \\u8fd4\\u56de\\u503c\\u8981\\u63a5\\u8fd1\\u4e14\\u4e0d\\u5927\\u4e8e\\u5728\\u540c\\u4e00\\u4ea4\\u6613\\u8fdb\\u884c\\u63d0\\u6b3e\\u4e00\\u5b9a\\u6570\\u989d\\u57fa\\u7840\\u8d44\\u4ea7\\u6240\\u9700\\u8d4e\\u56de\\u7684\\u91d1\\u5e93\\u4efd\\u989d - \\u4e0d\\u8981\\u8003\\u8651 maxWithdraw \\u7b49\\u9650\\u5236\\uff0c\\u5047\\u8bbe\\u7528\\u6237\\u7684\\u63d0\\u6b3e\\u4ea4\\u6613\\u4f1a\\u6210\\u529f - \\u8981\\u8003\\u8651\\u8d39\\u7528 - \\u4e0d\\u80fdrevert\"},\"redeem(uint256,address,address)\":{\"details\":\"\\u8d4e\\u56de\\u51fd\\u6570\\uff1aowner\\u5730\\u5740\\u9500\\u6bc1shares\\u6570\\u91cf\\u7684\\u91d1\\u989d\\u989d\\u5ea6\\uff0c\\u7136\\u540e\\u5408\\u7ea6\\u5c06asserts\\u5355\\u4f4d\\u7684\\u57fa\\u7840\\u4ee3\\u5e01\\u8d44\\u4ea7\\u53d1\\u7ed9receiver\\u5730\\u5740 - \\u91ca\\u653eWithdraw\\u4e8b\\u4ef6 - \\u5982\\u679c\\u91d1\\u5e93\\u989d\\u5ea6\\u4e0d\\u80fd\\u5168\\u90e8\\u9500\\u6bc1\\uff0c\\u5219revert\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalAssets()\":{\"details\":\"\\u8fd4\\u56de\\u91d1\\u5e93\\u4e2d\\u7ba1\\u7406\\u7684\\u57fa\\u7840\\u8d44\\u4ea7\\u4ee3\\u5e01\\u603b\\u989d - \\u8981\\u5305\\u542b\\u5229\\u606f - \\u8981\\u5305\\u542b\\u8d39\\u7528 - \\u4e0d\\u80fdrevert\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"withdraw(uint256,address,address)\":{\"details\":\"\\u63d0\\u6b3e\\u51fd\\u6570\\uff1aowner\\u5730\\u5740\\u9500\\u6bc1shares\\u5355\\u4f4d\\u7684\\u91d1\\u5e93\\u989d\\u5ea6\\uff0c\\u7136\\u540e\\u5408\\u7ea6\\u5c06assets\\u5355\\u4f4d\\u7684\\u57fa\\u7840\\u8d44\\u4ea7\\u53d1\\u9001\\u7ed9receiver\\u5730\\u5740 - \\u91ca\\u653e withdraw\\u4e8b\\u4ef6 - \\u5982\\u679c\\u5168\\u90e8\\u57fa\\u7840\\u8d44\\u4ea7\\u4e0d\\u80fd\\u63d0\\u53d6\\uff0c\\u5c06revert\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC4626.sol\":\"IERC4626\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"IERC4626.sol\":{\"keccak256\":\"0x96d9321fbcc670e3915a0a457f671cae07e73f00610bbfa395a1e31c250935dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d6195a85a281c8fc6eff019b3ffd3fbbd831d4afb1a9f029a75ea8fa292848e\",\"dweb:/ipfs/QmQrCRa7wzDmpUHSkjFRZZa9Q6E7VRbzfUsJ48HMnPE5bj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> ERC4626.sol:25:9:\n   |\n25 |         ERC20 asset,\n   |         ^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> ERC4626.sol:34:5:\n   |\n34 |     function asset() public view virtual override returns (address) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 1359,
						"file": "ERC4626.sol",
						"message": "The shadowed declaration is here:",
						"start": 1254
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1121,
					"file": "ERC4626.sol",
					"start": 1110
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10618:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10636:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10655:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10632:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10662:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10714:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10723:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10741:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10687:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10812:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10819:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10828:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10847:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10803:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9787:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10789:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"ERC4626.sol": {
				"ast": {
					"absolutePath": "ERC4626.sol",
					"exportedSymbols": {
						"ERC20": [
							651
						],
						"ERC4626": [
							1183
						],
						"IERC20Metadata": [
							755
						],
						"IERC4626": [
							1350
						]
					},
					"id": 1184,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "IERC4626.sol",
							"file": "IERC4626.sol",
							"id": 789,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1184,
							"sourceUnit": 1351,
							"src": "59:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 788,
										"name": "IERC4626",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1350,
										"src": "67:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 792,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1184,
							"sourceUnit": 652,
							"src": "99:84:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 790,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 651,
										"src": "107:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 791,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "114:14:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 793,
										"name": "ERC20",
										"nameLocations": [
											"1024:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "1024:5:5"
									},
									"id": 794,
									"nodeType": "InheritanceSpecifier",
									"src": "1024:5:5"
								},
								{
									"baseName": {
										"id": 795,
										"name": "IERC4626",
										"nameLocations": [
											"1031:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1350,
										"src": "1031:8:5"
									},
									"id": 796,
									"nodeType": "InheritanceSpecifier",
									"src": "1031:8:5"
								}
							],
							"canonicalName": "ERC4626",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1183,
							"linearizedBaseContracts": [
								1183,
								1350,
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC4626",
							"nameLocation": "1013:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 799,
									"mutability": "immutable",
									"name": "_asset",
									"nameLocation": "1073:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1183,
									"src": "1049:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$651",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 798,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 797,
											"name": "ERC20",
											"nameLocations": [
												"1049:5:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 651,
											"src": "1049:5:5"
										},
										"referencedDeclaration": 651,
										"src": "1049:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$651",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "1209:33:5",
										"statements": [
											{
												"expression": {
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 813,
														"name": "_asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "1220:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$651",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 814,
														"name": "asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1229:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$651",
															"typeString": "contract ERC20"
														}
													},
													"src": "1220:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$651",
														"typeString": "contract ERC20"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "1220:14:5"
											}
										]
									},
									"id": 818,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 809,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 804,
													"src": "1195:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 810,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 806,
													"src": "1201:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 811,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 808,
												"name": "ERC20",
												"nameLocations": [
													"1189:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "1189:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1189:19:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "1116:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "1110:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$651",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 801,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 800,
														"name": "ERC20",
														"nameLocations": [
															"1110:5:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 651,
														"src": "1110:5:5"
													},
													"referencedDeclaration": 651,
													"src": "1110:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$651",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1146:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "1132:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 803,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1132:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1175:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "1161:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 805,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1161:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1099:89:5"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1209:0:5"
									},
									"scope": 1183,
									"src": "1088:154:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1219
									],
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "1318:41:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 826,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "1344:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														],
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1336:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 824,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1336:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1336:15:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 823,
												"id": 828,
												"nodeType": "Return",
												"src": "1329:22:5"
											}
										]
									},
									"functionSelector": "38d52e0f",
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "asset",
									"nameLocation": "1263:5:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 820,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1291:8:5"
									},
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1268:2:5"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "1309:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:9:5"
									},
									"scope": 1183,
									"src": "1254:105:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1229
									],
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "1457:360:5",
										"statements": [
											{
												"expression": {
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 839,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "1534:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 841,
																"name": "assets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 832,
																"src": "1558:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 840,
															"name": "previewDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "1543:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1543:22:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1534:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "1534:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 848,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1642:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1646:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1642:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 852,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1662:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC4626_$1183",
																		"typeString": "contract ERC4626"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC4626_$1183",
																		"typeString": "contract ERC4626"
																	}
																],
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1654:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 850,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1654:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1654:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 854,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "1669:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 845,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "1622:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1629:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 334,
														"src": "1622:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1622:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "1622:54:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 858,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "1695:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 859,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "1705:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 857,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "1689:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1689:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "1689:23:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 863,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1770:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1774:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1770:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "1782:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "1792:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 867,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "1800:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 862,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "1762:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1762:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 869,
												"nodeType": "EmitStatement",
												"src": "1757:50:5"
											}
										]
									},
									"functionSelector": "6e553f65",
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1376:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "1392:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1384:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1384:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1408:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1400:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1383:34:5"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "1449:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1441:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1441:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1440:16:5"
									},
									"scope": 1183,
									"src": "1367:450:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1239
									],
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "1915:362:5",
										"statements": [
											{
												"expression": {
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 880,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "1997:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 882,
																"name": "shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "2018:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 881,
															"name": "previewMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "2006:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2006:19:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1997:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "1997:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 889,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2104:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2108:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2104:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 893,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2124:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC4626_$1183",
																		"typeString": "contract ERC4626"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC4626_$1183",
																		"typeString": "contract ERC4626"
																	}
																],
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2116:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 891,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2116:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2116:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 895,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "2131:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 886,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "2084:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2091:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 334,
														"src": "2084:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2084:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "2084:54:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 899,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "2157:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 900,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "2167:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 898,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "2151:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2151:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "2151:23:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 904,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2232:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2236:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2232:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 906,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "2244:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 907,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "2254:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 908,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "2262:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 903,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "2224:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2224:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "EmitStatement",
												"src": "2219:50:5"
											}
										]
									},
									"functionSelector": "94bf804d",
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1836:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "1849:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "1841:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1841:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1865:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "1857:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1857:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1840:34:5"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "1907:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "1899:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1899:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1898:16:5"
									},
									"scope": 1183,
									"src": "1827:450:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1251
									],
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "2428:523:5",
										"statements": [
											{
												"expression": {
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 923,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "2507:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 925,
																"name": "assets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "2532:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 924,
															"name": "previewWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "2516:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2516:23:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2507:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "2507:32:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 929,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2623:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2627:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2623:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 931,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "2637:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2623:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 941,
												"nodeType": "IfStatement",
												"src": "2619:94:5",
												"trueBody": {
													"id": 940,
													"nodeType": "Block",
													"src": "2644:69:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 934,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 918,
																		"src": "2675:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 935,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2682:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2686:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2682:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 937,
																		"name": "shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 921,
																		"src": "2694:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 933,
																	"name": "_spendAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 650,
																	"src": "2659:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2659:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 939,
															"nodeType": "ExpressionStatement",
															"src": "2659:42:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 943,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "2779:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 944,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "2786:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 942,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "2773:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2773:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "2773:20:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 950,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "2820:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 951,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "2830:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 947,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "2804:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2811:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 261,
														"src": "2804:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2804:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "2804:33:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 955,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2899:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2903:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2899:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "2911:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 958,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "2921:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "2928:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 960,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "2936:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 954,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "2890:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2890:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 962,
												"nodeType": "EmitStatement",
												"src": "2885:58:5"
											}
										]
									},
									"functionSelector": "b460af94",
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "2296:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "2323:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "2315:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2315:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "2348:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "2340:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2340:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2375:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "2367:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2367:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2304:83:5"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "2420:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "2412:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2412:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2411:16:5"
									},
									"scope": 1183,
									"src": "2287:664:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1263
									],
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "3098:533:5",
										"statements": [
											{
												"expression": {
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 975,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 973,
														"src": "3181:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 977,
																"name": "shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "3204:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 976,
															"name": "previewRedeem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "3190:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3190:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3181:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "3181:30:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 981,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3295:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3299:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3295:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 983,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "3309:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3295:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 993,
												"nodeType": "IfStatement",
												"src": "3291:94:5",
												"trueBody": {
													"id": 992,
													"nodeType": "Block",
													"src": "3316:69:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 986,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 970,
																		"src": "3347:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 987,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3354:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3358:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3354:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 989,
																		"name": "shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "3366:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 985,
																	"name": "_spendAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 650,
																	"src": "3331:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3331:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 991,
															"nodeType": "ExpressionStatement",
															"src": "3331:42:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 995,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "3452:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 996,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "3459:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 994,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "3446:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3446:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "3446:20:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1002,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "3493:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "3503:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 999,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "3477:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3484:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 261,
														"src": "3477:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3477:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "3477:33:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1007,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3579:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3583:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3579:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1009,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "3591:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1010,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "3601:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1011,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "3608:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1012,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "3616:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1006,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "3570:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3570:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "EmitStatement",
												"src": "3565:58:5"
											}
										]
									},
									"functionSelector": "ba087652",
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "redeem",
									"nameLocation": "2968:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "2993:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "2985:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2985:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3018:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "3010:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3010:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3045:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "3037:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3037:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2974:83:5"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "3090:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "3082:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3081:16:5"
									},
									"scope": 1183,
									"src": "2959:672:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1269
									],
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "3701:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1025,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3790:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC4626_$1183",
																		"typeString": "contract ERC4626"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC4626_$1183",
																		"typeString": "contract ERC4626"
																	}
																],
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3782:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1023,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3782:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3782:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1021,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "3765:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3772:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 237,
														"src": "3765:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3765:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1020,
												"id": 1028,
												"nodeType": "Return",
												"src": "3758:38:5"
											}
										]
									},
									"functionSelector": "01e1d114",
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalAssets",
									"nameLocation": "3650:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3661:2:5"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "3693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3693:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3692:9:5"
									},
									"scope": 1183,
									"src": "3641:163:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1285
									],
									"body": {
										"id": 1054,
										"nodeType": "Block",
										"src": "3893:289:5",
										"statements": [
											{
												"assignments": [
													1038
												],
												"declarations": [
													{
														"constant": false,
														"id": 1038,
														"mutability": "mutable",
														"name": "supply",
														"nameLocation": "3958:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1054,
														"src": "3950:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1037,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3950:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1039,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "3967:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3967:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3950:30:5"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1042,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "4120:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4130:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4120:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1046,
																"name": "assets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1032,
																"src": "4143:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1047,
																"name": "supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "4152:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4143:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1049,
																"name": "totalAssets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "4161:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4161:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4143:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4120:54:5",
													"trueExpression": {
														"id": 1045,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "4134:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1036,
												"id": 1053,
												"nodeType": "Return",
												"src": "4113:61:5"
											}
										]
									},
									"functionSelector": "c6e6f592",
									"id": 1055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "convertToShares",
									"nameLocation": "3823:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "3847:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "3839:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3839:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3838:16:5"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "3884:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3884:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3883:9:5"
									},
									"scope": 1183,
									"src": "3814:368:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1277
									],
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "4269:289:5",
										"statements": [
											{
												"assignments": [
													1063
												],
												"declarations": [
													{
														"constant": false,
														"id": 1063,
														"mutability": "mutable",
														"name": "supply",
														"nameLocation": "4334:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "4326:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1062,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4326:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1066,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1064,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4343:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4343:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4326:30:5"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1067,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "4496:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4506:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4496:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1071,
																"name": "shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1057,
																"src": "4519:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1072,
																	"name": "totalAssets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "4528:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4528:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4519:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1075,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "4544:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4519:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4496:54:5",
													"trueExpression": {
														"id": 1070,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "4510:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1061,
												"id": 1078,
												"nodeType": "Return",
												"src": "4489:61:5"
											}
										]
									},
									"functionSelector": "07a2d13a",
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "convertToAssets",
									"nameLocation": "4199:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "4223:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "4215:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4215:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4214:16:5"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "4260:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4260:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4259:9:5"
									},
									"scope": 1183,
									"src": "4190:368:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "4647:49:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1088,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "4681:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1087,
														"name": "convertToShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "4665:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4665:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1086,
												"id": 1090,
												"nodeType": "Return",
												"src": "4658:30:5"
											}
										]
									},
									"functionSelector": "ef8b30f7",
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "previewDeposit",
									"nameLocation": "4578:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "4601:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "4593:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4592:16:5"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "4638:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:9:5"
									},
									"scope": 1183,
									"src": "4569:127:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1301
									],
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "4779:49:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1100,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "4813:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1099,
														"name": "convertToAssets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "4797:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4797:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1098,
												"id": 1102,
												"nodeType": "Return",
												"src": "4790:30:5"
											}
										]
									},
									"functionSelector": "b3d7f6b9",
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "previewMint",
									"nameLocation": "4713:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "4733:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "4725:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4725:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4724:16:5"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "4770:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4769:9:5"
									},
									"scope": 1183,
									"src": "4704:124:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1309
									],
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "4915:49:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1112,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "4949:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1111,
														"name": "convertToShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "4933:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4933:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1110,
												"id": 1114,
												"nodeType": "Return",
												"src": "4926:30:5"
											}
										]
									},
									"functionSelector": "0a28a477",
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "previewWithdraw",
									"nameLocation": "4845:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "4869:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "4861:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:16:5"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "4906:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4906:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4905:9:5"
									},
									"scope": 1183,
									"src": "4836:128:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1317
									],
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "5049:49:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1124,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "5083:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1123,
														"name": "convertToAssets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "5067:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5067:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1122,
												"id": 1126,
												"nodeType": "Return",
												"src": "5060:30:5"
											}
										]
									},
									"functionSelector": "4cdad506",
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "previewRedeem",
									"nameLocation": "4981:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "5003:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "4995:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4995:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4994:16:5"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "5040:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5040:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5039:9:5"
									},
									"scope": 1183,
									"src": "4972:126:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1325
									],
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "5173:43:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5196:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1136,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5196:7:5",
																	"typeDescriptions": {}
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																}
															],
															"id": 1135,
															"name": "type",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967269,
															"src": "5191:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5191:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_magic_meta_type_t_uint256",
															"typeString": "type(uint256)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "5205:3:5",
													"memberName": "max",
													"nodeType": "MemberAccess",
													"src": "5191:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1134,
												"id": 1140,
												"nodeType": "Return",
												"src": "5184:24:5"
											}
										]
									},
									"functionSelector": "402d267d",
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxDeposit",
									"nameLocation": "5115:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "5126:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5126:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:9:5"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "5164:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5164:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5163:9:5"
									},
									"scope": 1183,
									"src": "5106:110:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1333
									],
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "5288:43:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5311:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1150,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5311:7:5",
																	"typeDescriptions": {}
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																}
															],
															"id": 1149,
															"name": "type",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967269,
															"src": "5306:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5306:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_magic_meta_type_t_uint256",
															"typeString": "type(uint256)"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "5320:3:5",
													"memberName": "max",
													"nodeType": "MemberAccess",
													"src": "5306:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1148,
												"id": 1154,
												"nodeType": "Return",
												"src": "5299:24:5"
											}
										]
									},
									"functionSelector": "c63d75b6",
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxMint",
									"nameLocation": "5233:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "5241:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5241:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5240:9:5"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "5279:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5279:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5278:9:5"
									},
									"scope": 1183,
									"src": "5224:107:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1341
									],
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "5413:59:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1165,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "5457:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1164,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "5447:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5447:16:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1163,
														"name": "convertToAssets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "5431:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5431:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1162,
												"id": 1168,
												"nodeType": "Return",
												"src": "5424:40:5"
											}
										]
									},
									"functionSelector": "ce96cb77",
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxWithdraw",
									"nameLocation": "5348:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5368:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "5360:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5360:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5359:15:5"
									},
									"returnParameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "5404:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5404:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5403:9:5"
									},
									"scope": 1183,
									"src": "5339:133:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1349
									],
									"body": {
										"id": 1181,
										"nodeType": "Block",
										"src": "5552:42:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1178,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "5580:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1177,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "5570:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5570:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1176,
												"id": 1180,
												"nodeType": "Return",
												"src": "5563:23:5"
											}
										]
									},
									"functionSelector": "d905777e",
									"id": 1182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxRedeem",
									"nameLocation": "5489:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5507:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "5499:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5499:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5498:15:5"
									},
									"returnParameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "5543:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5543:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5542:9:5"
									},
									"scope": 1183,
									"src": "5480:114:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1184,
							"src": "1004:4595:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672,
								1201,
								1213
							]
						}
					],
					"src": "33:6211:5"
				},
				"id": 5
			},
			"IERC4626.sol": {
				"ast": {
					"absolutePath": "IERC4626.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						],
						"IERC4626": [
							1350
						]
					},
					"id": 1351,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1185,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1186,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1351,
							"sourceUnit": 730,
							"src": "61:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 1187,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1351,
							"sourceUnit": 756,
							"src": "119:75:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1188,
										"name": "IERC20",
										"nameLocations": [
											"220:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "220:6:6"
									},
									"id": 1189,
									"nodeType": "InheritanceSpecifier",
									"src": "220:6:6"
								},
								{
									"baseName": {
										"id": 1190,
										"name": "IERC20Metadata",
										"nameLocations": [
											"228:14:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "228:14:6"
									},
									"id": 1191,
									"nodeType": "InheritanceSpecifier",
									"src": "228:14:6"
								}
							],
							"canonicalName": "IERC4626",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1350,
							"linearizedBaseContracts": [
								1350,
								755,
								729
							],
							"name": "IERC4626",
							"nameLocation": "208:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "dcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7",
									"id": 1201,
									"name": "Deposit",
									"nameLocation": "300:7:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "334:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "318:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "318:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "368:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "352:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "352:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"indexed": false,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "393:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "385:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "385:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "419:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "411:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "307:125:6"
									},
									"src": "294:139:6"
								},
								{
									"anonymous": false,
									"eventSelector": "fbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db",
									"id": 1213,
									"name": "Withdraw",
									"nameLocation": "468:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "503:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "487:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"indexed": true,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "537:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "521:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "521:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "572:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "556:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "556:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"indexed": false,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "597:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "589:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "623:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "615:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:160:6"
									},
									"src": "462:175:6"
								},
								{
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "650:90:6",
										"text": " @dev 返回金库的基础资产代币地址（用于存款、取款）"
									},
									"functionSelector": "38d52e0f",
									"id": 1219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asset",
									"nameLocation": "755:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "760:2:6"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "assetTokenAddress",
												"nameLocation": "793:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "785:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "785:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:27:6"
									},
									"scope": 1350,
									"src": "746:66:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "819:273:6",
										"text": " @dev 存款函数：用户向金库存入assets单位的基础资产，然后合约铸造shares单位的金库额度给receiver地址\n - 必须是否Deposit 事件\n - 如果资产不能存入，必须revert，比如存款数额大于上限等"
									},
									"functionSelector": "6e553f65",
									"id": 1229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1110:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "1126:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "1118:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1142:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "1134:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1117:34:6"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "1177:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "1169:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:16:6"
									},
									"scope": 1350,
									"src": "1101:84:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "1192:281:6",
										"text": " @dev 铸造函数：用户需要存入assets单位的基础资产，然后合约给receiver地址铸造shares数量的金库额度\n - 必须是否Deposit事件\n - 如果全部金库额度不能铸造，必须 revert, 比如铸造数额大于上线等"
									},
									"functionSelector": "94bf804d",
									"id": 1239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1489:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "1502:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1494:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1518:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1510:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1510:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1493:34:6"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "1554:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1546:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1546:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1545:16:6"
									},
									"scope": 1350,
									"src": "1480:82:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "1576:244:6",
										"text": " @dev 提款函数：owner地址销毁shares单位的金库额度，然后合约将assets单位的基础资产发送给receiver地址\n - 释放 withdraw事件\n - 如果全部基础资产不能提取，将revert"
									},
									"functionSelector": "b460af94",
									"id": 1251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1835:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "1852:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "1844:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1868:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "1860:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1886:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "1878:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1843:49:6"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "1918:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "1910:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1910:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1909:16:6"
									},
									"scope": 1350,
									"src": "1826:100:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "1934:247:6",
										"text": " @dev 赎回函数：owner地址销毁shares数量的金额额度，然后合约将asserts单位的基础代币资产发给receiver地址\n - 释放Withdraw事件\n - 如果金库额度不能全部销毁，则revert"
									},
									"functionSelector": "ba087652",
									"id": 1263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "redeem",
									"nameLocation": "2196:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "2211:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2203:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2203:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "2227:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2219:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2219:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2245:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2237:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2237:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2202:49:6"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "2277:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2269:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2269:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2268:16:6"
									},
									"scope": 1350,
									"src": "2187:98:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "2295:149:6",
										"text": " @dev 返回金库中管理的基础资产代币总额\n - 要包含利息\n - 要包含费用\n - 不能revert"
									},
									"functionSelector": "01e1d114",
									"id": 1269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalAssets",
									"nameLocation": "2459:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:2:6"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "totalManagedAssets",
												"nameLocation": "2503:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2495:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2495:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2494:28:6"
									},
									"scope": 1350,
									"src": "2450:73:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "2535:170:6",
										"text": " @dev 返回利用一定数额的金库额度可以换取的基础资产\n - 不要包含费用\n - 不包含滑点\n - 不能revert"
									},
									"functionSelector": "07a2d13a",
									"id": 1277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "convertToAssets",
									"nameLocation": "2720:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "2744:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "2736:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2736:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2735:16:6"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "2782:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "2774:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2774:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2773:16:6"
									},
									"scope": 1350,
									"src": "2711:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1278,
										"nodeType": "StructuredDocumentation",
										"src": "2798:174:6",
										"text": " @dev 返回利用一定数额的基础资产可以换取的金库额度\n - 不要包含费用\n - 不要包含滑点\n - 不能 revert"
									},
									"functionSelector": "c6e6f592",
									"id": 1285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "convertToShares",
									"nameLocation": "2987:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "3011:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "3003:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3003:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3002:16:6"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "3049:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "3041:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3040:16:6"
									},
									"scope": 1350,
									"src": "2978:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1286,
										"nodeType": "StructuredDocumentation",
										"src": "3067:367:6",
										"text": " @dev 用于链上和链下用户在当前链上环境模拟存款一定数额的基础资产能够获得的金库额度\n - 返回值要接近且不大于在同一个交易进行存款得到的金库额度\n - 不要考虑maxDeposit等限制，假设用户的存款交易会成功\n - 要考虑费用\n - 不能revert     "
									},
									"functionSelector": "ef8b30f7",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "previewDeposit",
									"nameLocation": "3449:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "3472:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3464:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:16:6"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "3510:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3502:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3502:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3501:16:6"
									},
									"scope": 1350,
									"src": "3440:78:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "3528:390:6",
										"text": " @dev 用于链上和链下用户在当前链上环境模拟铸造 shares 数额的金库额度需要存款的基础资产数量\n - 返回值要接近且不小于在同一交易进行铸造一定数额金库额度所需的存款数量\n - 不要考虑 maxMint 等限制，假设用户的存款交易会成功\n - 要考虑费用\n - 不能revert"
									},
									"functionSelector": "b3d7f6b9",
									"id": 1301,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "previewMint",
									"nameLocation": "3933:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "3953:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "3945:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3945:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:16:6"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "3991:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "3983:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3983:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:16:6"
									},
									"scope": 1350,
									"src": "3924:75:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "4009:394:6",
										"text": " @dev 用于链上和链下用户在当前链上环境模拟提款 assets 数额的基础资产需要赎回的金库份额\n - 返回值要接近且不大于在同一交易进行提款一定数额基础资产所需赎回的金库份额\n - 不要考虑 maxWithdraw 等限制，假设用户的提款交易会成功\n - 要考虑费用\n - 不能revert"
									},
									"functionSelector": "0a28a477",
									"id": 1309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "previewWithdraw",
									"nameLocation": "4418:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "4442:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4434:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4434:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4433:16:6"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "4481:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4473:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4473:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:16:6"
									},
									"scope": 1350,
									"src": "4409:80:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "4497:408:6",
										"text": " @dev 用于链上和链下用户在当前链上环境模拟销毁 shares 数额的金库额度能够赎回的基础资产数量\n - 返回值要接近且不小于在同一交易进行销毁一定数额的金库额度所能赎回的基础资产数量\n - 不要考虑 maxRedeem 等限制，假设用户的赎回交易会成功\n - 要考虑费用\n - 不能revert."
									},
									"functionSelector": "4cdad506",
									"id": 1317,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "previewRedeem",
									"nameLocation": "4920:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "4942:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "4934:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4934:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4933:16:6"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "4981:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "4973:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4973:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4972:16:6"
									},
									"scope": 1350,
									"src": "4911:78:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "5001:238:6",
										"text": " @dev 返回某个用户地址单次存款可存的最大基础资产数额。\n - 如果有存款上限，那么返回值应该是个有限值\n - 返回值不能超过 2 ** 256 - 1 \n - 不能revert"
									},
									"functionSelector": "402d267d",
									"id": 1325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxDeposit",
									"nameLocation": "5254:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5273:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "5265:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5264:18:6"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "maxAssets",
												"nameLocation": "5314:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "5306:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5306:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5305:19:6"
									},
									"scope": 1350,
									"src": "5245:80:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1326,
										"nodeType": "StructuredDocumentation",
										"src": "5333:235:6",
										"text": " @dev 返回某个用户地址单次铸造可以铸造的最大金库额度\n - 如果有铸造上限，那么返回值应该是个有限值\n - 返回值不能超过 2 ** 256 - 1 \n - 不能revert"
									},
									"functionSelector": "c63d75b6",
									"id": 1333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxMint",
									"nameLocation": "5583:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5599:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "5591:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5591:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5590:18:6"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "maxShares",
												"nameLocation": "5640:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "5632:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5632:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5631:19:6"
									},
									"scope": 1350,
									"src": "5574:77:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "5659:165:6",
										"text": " @dev 返回某个用户地址单次取款可以提取的最大基础资产额度\n - 返回值应该是个有限值\n - 不能revert"
									},
									"functionSelector": "ce96cb77",
									"id": 1341,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxWithdraw",
									"nameLocation": "5839:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5859:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "5851:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5851:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5850:15:6"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "maxAssets",
												"nameLocation": "5897:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "5889:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5888:19:6"
									},
									"scope": 1350,
									"src": "5830:78:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "5916:232:6",
										"text": " @dev 返回某个用户地址单次赎回可以销毁的最大金库额度\n - 返回值应该是个有限值\n - 如果没有其他限制，返回值应该是 balanceOf(owner)\n - 不能revert"
									},
									"functionSelector": "d905777e",
									"id": 1349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxRedeem",
									"nameLocation": "6163:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6181:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "6173:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6173:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6172:15:6"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "maxShares",
												"nameLocation": "6219:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "6211:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6211:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6210:19:6"
									},
									"scope": 1350,
									"src": "6154:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1351,
							"src": "198:6037:6",
							"usedErrors": [],
							"usedEvents": [
								663,
								672,
								1201,
								1213
							]
						}
					],
					"src": "33:6202:6"
				},
				"id": 6
			}
		}
	}
}